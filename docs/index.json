{
  "api/Terminal.Gui/Terminal.Gui.Application.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.Application.html",
    "title": "Class Application",
    "keywords": "Class Application A static, singleton class providing the main application driver for Terminal.Gui apps. Inheritance System.Object Application Remarks Creates a instance of MainLoop to process input events, handle timers and other sources of data. It is accessible via the MainLoop property. You can hook up to the Iteration event to have your method invoked on each iteration of the MainLoop . When invoked sets the SynchronizationContext to one that is tied to the mainloop, allowing user code to use async/await. Examples // A simple Terminal.Gui app that creates a window with a frame and title with // 5 rows/columns of padding. Application.Init(); var win = new Window (\"Hello World - CTRL-Q to quit\") { X = 5, Y = 5, Width = Dim.Fill (5), Height = Dim.Fill (5) }; Application.Top.Add(win); Application.Run(); Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Terminal.Gui Assembly : Terminal.Gui.dll Syntax public static class Application Fields | Improve this Doc View Source Driver The current ConsoleDriver in use. Declaration public static ConsoleDriver Driver Field Value Type Description ConsoleDriver | Improve this Doc View Source Iteration This event is raised on each iteration of the MainLoop Declaration public static Action Iteration Field Value Type Description System.Action | Improve this Doc View Source Resized Invoked when the terminal was resized. The new size of the terminal is provided. Declaration public static Action<Application.ResizedEventArgs> Resized Field Value Type Description System.Action < Application.ResizedEventArgs > | Improve this Doc View Source RootKeyEvent Called for new KeyPress events before any processing is performed or views evaluate. Use for global key handling and/or debugging. Return true to suppress the KeyPress event Declaration public static Func<KeyEvent, bool> RootKeyEvent Field Value Type Description System.Func < KeyEvent , System.Boolean > | Improve this Doc View Source RootMouseEvent Merely a debugging aid to see the raw mouse events Declaration public static Action<MouseEvent> RootMouseEvent Field Value Type Description System.Action < MouseEvent > | Improve this Doc View Source UseSystemConsole If set, it forces the use of the System.Console-based driver. Declaration public static bool UseSystemConsole Field Value Type Description System.Boolean Properties | Improve this Doc View Source AlternateBackwardKey Alternative key to navigate backwards through all views. Shift+Ctrl+Tab is always used. Declaration public static Key AlternateBackwardKey { get; set; } Property Value Type Description Key | Improve this Doc View Source AlternateForwardKey Alternative key to navigate forwards through all views. Ctrl+Tab is always used. Declaration public static Key AlternateForwardKey { get; set; } Property Value Type Description Key | Improve this Doc View Source Current The current Toplevel object. This is updated when Run(Func<Exception, Boolean>) enters and leaves to point to the current Toplevel . Declaration public static Toplevel Current { get; } Property Value Type Description Toplevel The current. | Improve this Doc View Source ExitRunLoopAfterFirstIteration Set to true to cause the RunLoop method to exit after the first iterations. Set to false (the default) to cause the RunLoop to continue running until Application.RequestStop() is called. Declaration public static bool ExitRunLoopAfterFirstIteration { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source HeightAsBuffer The current HeightAsBuffer used in the terminal. Declaration public static bool HeightAsBuffer { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source IsMouseDisabled Disable or enable the mouse in this Application Declaration public static bool IsMouseDisabled { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source MainLoop The MainLoop driver for the application Declaration public static MainLoop MainLoop { get; } Property Value Type Description MainLoop The main loop. | Improve this Doc View Source MdiChildes Gets all the Mdi childes which represent all the not modal Toplevel from the MdiTop . Declaration public static List<Toplevel> MdiChildes { get; } Property Value Type Description System.Collections.Generic.List < Toplevel > | Improve this Doc View Source MdiTop The Toplevel object used for the application on startup which IsMdiContainer is true. Declaration public static Toplevel MdiTop { get; } Property Value Type Description Toplevel | Improve this Doc View Source QuitKey Gets or sets the key to quit the application. Declaration public static Key QuitKey { get; set; } Property Value Type Description Key | Improve this Doc View Source SupportedCultures Gets all supported cultures by the application without the invariant language. Declaration public static List<CultureInfo> SupportedCultures { get; } Property Value Type Description System.Collections.Generic.List < System.Globalization.CultureInfo > | Improve this Doc View Source Top The Toplevel object used for the application on startup ( Top ) Declaration public static Toplevel Top { get; } Property Value Type Description Toplevel The top. | Improve this Doc View Source WantContinuousButtonPressedView The current View object that wants continuous mouse button pressed events. Declaration public static View WantContinuousButtonPressedView { get; } Property Value Type Description View Methods | Improve this Doc View Source Begin(Toplevel) Building block API: Prepares the provided Toplevel for execution. Declaration public static Application.RunState Begin(Toplevel toplevel) Parameters Type Name Description Toplevel toplevel Toplevel to prepare execution for. Returns Type Description Application.RunState The runstate handle that needs to be passed to the End(Application.RunState) method upon completion. | Improve this Doc View Source DoEvents() Wakes up the mainloop that might be waiting on input, must be thread safe. Declaration public static void DoEvents() | Improve this Doc View Source End(Application.RunState) Building block API: completes the execution of a Toplevel that was started with Begin(Toplevel) . Declaration public static void End(Application.RunState runState) Parameters Type Name Description Application.RunState runState The runstate returned by the Begin(Toplevel) method. | Improve this Doc View Source EnsuresTopOnFront() Ensures that the superview of the most focused view is on front. Declaration public static void EnsuresTopOnFront() | Improve this Doc View Source GrabMouse(View) Grabs the mouse, forcing all mouse events to be routed to the specified view until UngrabMouse is called. Declaration public static void GrabMouse(View view) Parameters Type Name Description View view View that will receive all mouse events until UngrabMouse is invoked. | Improve this Doc View Source Init(ConsoleDriver, IMainLoopDriver) Initializes a new instance of Terminal.Gui Application. Declaration public static void Init(ConsoleDriver driver = null, IMainLoopDriver mainLoopDriver = null) Parameters Type Name Description ConsoleDriver driver IMainLoopDriver mainLoopDriver | Improve this Doc View Source MakeCenteredRect(Size) Returns a rectangle that is centered in the screen for the provided size. Declaration public static Rect MakeCenteredRect(Size size) Parameters Type Name Description Size size Size for the rectangle. Returns Type Description Rect The centered rect. | Improve this Doc View Source MoveNext() Move to the next Mdi child from the MdiTop . Declaration public static void MoveNext() | Improve this Doc View Source MovePrevious() Move to the previous Mdi child from the MdiTop . Declaration public static void MovePrevious() | Improve this Doc View Source Refresh() Triggers a refresh of the entire display. Declaration public static void Refresh() | Improve this Doc View Source RequestStop(Toplevel) Stops running the most recent Toplevel or the top if provided. Declaration public static void RequestStop(Toplevel top = null) Parameters Type Name Description Toplevel top The toplevel to request stop. | Improve this Doc View Source Run(Func<Exception, Boolean>) Runs the application by calling Run(Toplevel, Func<Exception, Boolean>) with the value of Top Declaration public static void Run(Func<Exception, bool> errorHandler = null) Parameters Type Name Description System.Func < System.Exception , System.Boolean > errorHandler | Improve this Doc View Source Run(Toplevel, Func<Exception, Boolean>) Runs the main loop on the given Toplevel container. Declaration public static void Run(Toplevel view, Func<Exception, bool> errorHandler = null) Parameters Type Name Description Toplevel view The Toplevel to run modally. System.Func < System.Exception , System.Boolean > errorHandler Handler for any unhandled exceptions (resumes when returns true, rethrows when null). | Improve this Doc View Source Run<T>(Func<Exception, Boolean>) Runs the application by calling Run(Toplevel, Func<Exception, Boolean>) with a new instance of the specified Toplevel -derived class Declaration public static void Run<T>(Func<Exception, bool> errorHandler = null) where T : Toplevel, new() Parameters Type Name Description System.Func < System.Exception , System.Boolean > errorHandler Type Parameters Name Description T | Improve this Doc View Source RunLoop(Application.RunState, Boolean) Building block API: Runs the main loop for the created dialog Declaration public static void RunLoop(Application.RunState state, bool wait = true) Parameters Type Name Description Application.RunState state The state returned by the Begin method. System.Boolean wait By default this is true which will execute the runloop waiting for events, if you pass false, you can use this method to run a single iteration of the events. | Improve this Doc View Source RunMainLoopIteration(ref Application.RunState, Boolean, ref Boolean) Run one iteration of the MainLoop. Declaration public static void RunMainLoopIteration(ref Application.RunState state, bool wait, ref bool firstIteration) Parameters Type Name Description Application.RunState state The state returned by the Begin method. System.Boolean wait If will execute the runloop waiting for events. System.Boolean firstIteration If it's the first run loop iteration. | Improve this Doc View Source Shutdown() Shutdown an application initialized with Init(ConsoleDriver, IMainLoopDriver) Declaration public static void Shutdown() | Improve this Doc View Source UngrabMouse() Releases the mouse grab, so mouse events will be routed to the view on which the mouse is. Declaration public static void UngrabMouse() Events | Improve this Doc View Source NotifyNewRunState Notify that a new Application.RunState token was created, used if ExitRunLoopAfterFirstIteration is true. Declaration public static event Action<Application.RunState> NotifyNewRunState Event Type Type Description System.Action < Application.RunState > | Improve this Doc View Source NotifyStopRunState Notify that a existent Application.RunState token is stopping, used if ExitRunLoopAfterFirstIteration is true. Declaration public static event Action<Toplevel> NotifyStopRunState Event Type Type Description System.Action < Toplevel >"
  },
  "api/Terminal.Gui/Terminal.Gui.Application.ResizedEventArgs.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.Application.ResizedEventArgs.html",
    "title": "Class Application.ResizedEventArgs",
    "keywords": "Class Application.ResizedEventArgs Event arguments for the Resized event. Inheritance System.Object System.EventArgs Application.ResizedEventArgs Inherited Members System.EventArgs.Empty System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Terminal.Gui Assembly : Terminal.Gui.dll Syntax public class ResizedEventArgs : EventArgs Properties | Improve this Doc View Source Cols The number of columns in the resized terminal. Declaration public int Cols { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source Rows The number of rows in the resized terminal. Declaration public int Rows { get; set; } Property Value Type Description System.Int32"
  },
  "api/Terminal.Gui/Terminal.Gui.Application.RunState.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.Application.RunState.html",
    "title": "Class Application.RunState",
    "keywords": "Class Application.RunState Captures the execution state for the provided Toplevel view. Inheritance System.Object Application.RunState Implements System.IDisposable Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Terminal.Gui Assembly : Terminal.Gui.dll Syntax public class RunState : IDisposable Constructors | Improve this Doc View Source RunState(Toplevel) Initializes a new Application.RunState class. Declaration public RunState(Toplevel view) Parameters Type Name Description Toplevel view Properties | Improve this Doc View Source Toplevel The Toplevel belong to this Application.RunState . Declaration public Toplevel Toplevel { get; } Property Value Type Description Toplevel Methods | Improve this Doc View Source Dispose() Releases alTop = l resource used by the Application.RunState object. Declaration public void Dispose() | Improve this Doc View Source Dispose(Boolean) Dispose the specified disposing. Declaration protected virtual void Dispose(bool disposing) Parameters Type Name Description System.Boolean disposing If set to true disposing. Implements System.IDisposable"
  },
  "api/Terminal.Gui/Terminal.Gui.Attribute.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.Attribute.html",
    "title": "Struct Attribute",
    "keywords": "Struct Attribute Attributes are used as elements that contain both a foreground and a background or platform specific features Remarks Attribute s are needed to map colors to terminal capabilities that might lack colors, on color scenarios, they encode both the foreground and the background color and are used in the ColorScheme class to define color schemes that can be used in your application. Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.ValueType.ToString() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Terminal.Gui Assembly : Terminal.Gui.dll Syntax public struct Attribute Constructors | Improve this Doc View Source Attribute(Int32) Initializes a new instance of the Attribute struct with only the value passed to and trying to get the colors if defined. Declaration public Attribute(int value) Parameters Type Name Description System.Int32 value Value. | Improve this Doc View Source Attribute(Int32, Color, Color) Initializes a new instance of the Attribute struct. Declaration public Attribute(int value, Color foreground, Color background) Parameters Type Name Description System.Int32 value Value. Color foreground Foreground Color background Background | Improve this Doc View Source Attribute(Color) Initializes a new instance of the Attribute struct with the same colors for the foreground and background. Declaration public Attribute(Color color) Parameters Type Name Description Color color The color. | Improve this Doc View Source Attribute(Color, Color) Initializes a new instance of the Attribute struct. Declaration public Attribute(Color foreground = Color.Black, Color background = Color.Black) Parameters Type Name Description Color foreground Foreground Color background Background Properties | Improve this Doc View Source Background The background color. Declaration public readonly Color Background { get; } Property Value Type Description Color | Improve this Doc View Source Foreground The foreground color. Declaration public readonly Color Foreground { get; } Property Value Type Description Color | Improve this Doc View Source Value The color attribute value. Declaration public readonly int Value { get; } Property Value Type Description System.Int32 Methods | Improve this Doc View Source Get() Gets the current Attribute from the driver. Declaration public static Attribute Get() Returns Type Description Attribute The current attribute. | Improve this Doc View Source Make(Color, Color) Creates an Attribute from the specified foreground and background. Declaration public static Attribute Make(Color foreground, Color background) Parameters Type Name Description Color foreground Foreground color to use. Color background Background color to use. Returns Type Description Attribute The make. Operators | Improve this Doc View Source Implicit(Int32 to Attribute) Implicitly convert an integer value into an Attribute Declaration public static implicit operator Attribute(int v) Parameters Type Name Description System.Int32 v value Returns Type Description Attribute An attribute with the specified integer value. | Improve this Doc View Source Implicit(Attribute to Int32) Implicit conversion from an Attribute to the underlying Int32 representation Declaration public static implicit operator int (Attribute c) Parameters Type Name Description Attribute c The attribute to convert Returns Type Description System.Int32 The integer value stored in the attribute."
  },
  "api/Terminal.Gui/Terminal.Gui.Autocomplete.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.Autocomplete.html",
    "title": "Class Autocomplete",
    "keywords": "Class Autocomplete Renders an overlay on another view at a given point that allows selecting from a range of 'autocomplete' options. Inheritance System.Object Autocomplete TextFieldAutocomplete TextViewAutocomplete Implements IAutocomplete Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Terminal.Gui Assembly : Terminal.Gui.dll Syntax public abstract class Autocomplete : IAutocomplete Properties | Improve this Doc View Source AllSuggestions The full set of all strings that can be suggested. Declaration public virtual List<string> AllSuggestions { get; set; } Property Value Type Description System.Collections.Generic.List < System.String > | Improve this Doc View Source CloseKey The key that the user can press to close the currently popped autocomplete menu Declaration public virtual Key CloseKey { get; set; } Property Value Type Description Key | Improve this Doc View Source ColorScheme The colors to use to render the overlay. Accessing this property before the Application has been initialized will cause an error Declaration public virtual ColorScheme ColorScheme { get; set; } Property Value Type Description ColorScheme | Improve this Doc View Source HostControl The host control to handle. Declaration public virtual View HostControl { get; set; } Property Value Type Description View | Improve this Doc View Source MaxHeight The maximum number of visible rows in the autocomplete dropdown to render Declaration public virtual int MaxHeight { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source MaxWidth The maximum width of the autocomplete dropdown Declaration public virtual int MaxWidth { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source PopupInsideContainer Gets or sets If the popup is displayed inside or outside the host limits. Declaration public bool PopupInsideContainer { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source Reopen The key that the user can press to reopen the currently popped autocomplete menu Declaration public virtual Key Reopen { get; set; } Property Value Type Description Key | Improve this Doc View Source ScrollOffset When more suggestions are available than can be rendered the user can scroll down the dropdown list. This indicates how far down they have gone Declaration public virtual int ScrollOffset { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source SelectedIdx The currently selected index into Suggestions that the user has highlighted Declaration public virtual int SelectedIdx { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source SelectionKey The key that the user must press to accept the currently selected autocomplete suggestion Declaration public virtual Key SelectionKey { get; set; } Property Value Type Description Key | Improve this Doc View Source Suggestions The strings that form the current list of suggestions to render based on what the user has typed so far. Declaration public virtual ReadOnlyCollection<string> Suggestions { get; set; } Property Value Type Description System.Collections.ObjectModel.ReadOnlyCollection < System.String > | Improve this Doc View Source Visible True if the autocomplete should be considered open and visible Declaration public virtual bool Visible { get; set; } Property Value Type Description System.Boolean Methods | Improve this Doc View Source ClearSuggestions() Clears Suggestions Declaration public virtual void ClearSuggestions() | Improve this Doc View Source Close() Closes the Autocomplete context menu if it is showing and ClearSuggestions() Declaration protected void Close() | Improve this Doc View Source DeleteTextBackwards() Deletes the text backwards before insert the selected text in the HostControl . Declaration protected abstract void DeleteTextBackwards() | Improve this Doc View Source EnsureSelectedIdxIsValid() Updates SelectedIdx to be a valid index within Suggestions Declaration public virtual void EnsureSelectedIdxIsValid() | Improve this Doc View Source GenerateSuggestions() Populates Suggestions with all strings in AllSuggestions that match with the current cursor position/text in the HostControl Declaration public virtual void GenerateSuggestions() | Improve this Doc View Source GetCurrentWord() Returns the currently selected word from the HostControl . When overriding this method views can make use of IdxToWord(List<Rune>, Int32) Declaration protected abstract string GetCurrentWord() Returns Type Description System.String | Improve this Doc View Source IdxToWord(List<Rune>, Int32) Given a line of characters, returns the word which ends at idx or null. Also returns null if the idx is positioned in the middle of a word. Use this method to determine whether autocomplete should be shown when the cursor is at a given point in a line and to get the word from which suggestions should be generated. Declaration protected virtual string IdxToWord(List<Rune> line, int idx) Parameters Type Name Description System.Collections.Generic.List < System.Rune > line System.Int32 idx Returns Type Description System.String | Improve this Doc View Source InsertSelection(String) Called when the user confirms a selection at the current cursor location in the HostControl . The accepted string is the full autocomplete word to be inserted. Typically a host will have to remove some characters such that the accepted string completes the word instead of simply being appended. Declaration protected virtual bool InsertSelection(string accepted) Parameters Type Name Description System.String accepted Returns Type Description System.Boolean True if the insertion was possible otherwise false | Improve this Doc View Source InsertText(String) Inser the selected text in the HostControl . Declaration protected abstract void InsertText(string accepted) Parameters Type Name Description System.String accepted | Improve this Doc View Source IsWordChar(Rune) Return true if the given symbol should be considered part of a word and can be contained in matches. Base behavior is to use System.Char.IsLetterOrDigit(System.Char) Declaration public virtual bool IsWordChar(Rune rune) Parameters Type Name Description System.Rune rune Returns Type Description System.Boolean | Improve this Doc View Source MouseEvent(MouseEvent, Boolean) Handle mouse events before HostControl e.g. to make mouse events like report/click apply to the autocomplete control instead of changing the cursor position in the underlying text view. Declaration public virtual bool MouseEvent(MouseEvent me, bool fromHost = false) Parameters Type Name Description MouseEvent me The mouse event. System.Boolean fromHost If was called from the popup or from the host. Returns Type Description System.Boolean true if the mouse can be handled false otherwise. | Improve this Doc View Source MoveDown() Moves the selection in the Autocomplete context menu down one Declaration protected void MoveDown() | Improve this Doc View Source MoveUp() Moves the selection in the Autocomplete context menu up one Declaration protected void MoveUp() | Improve this Doc View Source ProcessKey(KeyEvent) Handle key events before HostControl e.g. to make key events like up/down apply to the autocomplete control instead of changing the cursor position in the underlying text view. Declaration public virtual bool ProcessKey(KeyEvent kb) Parameters Type Name Description KeyEvent kb The key event. Returns Type Description System.Boolean true if the key can be handled false otherwise. | Improve this Doc View Source RenderOverlay(Point) Renders the autocomplete dialog inside or outside the given HostControl at the given point. Declaration public virtual void RenderOverlay(Point renderAt) Parameters Type Name Description Point renderAt | Improve this Doc View Source RenderSelectedIdxByMouse(MouseEvent) Render the current selection in the Autocomplete context menu by the mouse reporting. Declaration protected void RenderSelectedIdxByMouse(MouseEvent me) Parameters Type Name Description MouseEvent me | Improve this Doc View Source ReopenSuggestions() Reopen the popup after it has been closed. Declaration protected bool ReopenSuggestions() Returns Type Description System.Boolean | Improve this Doc View Source Select() Completes the autocomplete selection process. Called when user hits the SelectionKey . Declaration protected bool Select() Returns Type Description System.Boolean Implements IAutocomplete"
  },
  "api/Terminal.Gui/Terminal.Gui.Border.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.Border.html",
    "title": "Class Border",
    "keywords": "Class Border Draws a border, background, or both around another element. Inheritance System.Object Border Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Terminal.Gui Assembly : Terminal.Gui.dll Syntax public class Border Properties | Improve this Doc View Source ActualHeight Gets the rendered height of this element. Declaration public int ActualHeight { get; } Property Value Type Description System.Int32 | Improve this Doc View Source ActualWidth Gets the rendered width of this element. Declaration public int ActualWidth { get; } Property Value Type Description System.Int32 | Improve this Doc View Source Background Gets or sets the Color that fills the area between the bounds of a Border . Declaration public Color Background { get; set; } Property Value Type Description Color | Improve this Doc View Source BorderBrush Gets or sets the Color that draws the outer border color. Declaration public Color BorderBrush { get; set; } Property Value Type Description Color | Improve this Doc View Source BorderStyle Specifies the BorderStyle for a view. Declaration public BorderStyle BorderStyle { get; set; } Property Value Type Description BorderStyle | Improve this Doc View Source BorderThickness Gets or sets the relative Thickness of a Border . Declaration public Thickness BorderThickness { get; set; } Property Value Type Description Thickness | Improve this Doc View Source Child Gets or sets the single child element of a View . Declaration public View Child { get; set; } Property Value Type Description View | Improve this Doc View Source ChildContainer Gets or private sets by the Border.ToplevelContainer Declaration public Border.ToplevelContainer ChildContainer { get; } Property Value Type Description Border.ToplevelContainer | Improve this Doc View Source DrawMarginFrame Gets or sets if a margin frame is drawn around the Child regardless the BorderStyle Declaration public bool DrawMarginFrame { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source Effect3D Gets or sets the 3D effect around the Border . Declaration public bool Effect3D { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source Effect3DBrush Gets or sets the color for the Border Declaration public Attribute? Effect3DBrush { get; set; } Property Value Type Description System.Nullable < Attribute > | Improve this Doc View Source Effect3DOffset Get or sets the offset start position for the Effect3D Declaration public Point Effect3DOffset { get; set; } Property Value Type Description Point | Improve this Doc View Source Padding Gets or sets a Thickness value that describes the amount of space between a Border and its child element. Declaration public Thickness Padding { get; set; } Property Value Type Description Thickness | Improve this Doc View Source Parent Gets the parent Child parent if any. Declaration public View Parent { get; } Property Value Type Description View | Improve this Doc View Source Title The title to be displayed for this view. Declaration public ustring Title { get; set; } Property Value Type Description NStack.ustring Methods | Improve this Doc View Source DrawContent(View, Boolean) Drawn the BorderThickness more the Padding more the BorderStyle and the Effect3D . Declaration public void DrawContent(View view = null, bool fill = true) Parameters Type Name Description View view The view to draw. System.Boolean fill If it will clear or not the content area. | Improve this Doc View Source DrawFullContent() Same as DrawContent(View, Boolean) but drawing full frames for all borders. Declaration public void DrawFullContent() | Improve this Doc View Source DrawTitle(View) Draws the view Title to the screen. Declaration public void DrawTitle(View view) Parameters Type Name Description View view The view. | Improve this Doc View Source DrawTitle(View, Rect) Draws the Text to the screen. Declaration public void DrawTitle(View view, Rect rect) Parameters Type Name Description View view The view. Rect rect The frame. | Improve this Doc View Source GetSumThickness() Calculate the sum of the Padding and the BorderThickness Declaration public Thickness GetSumThickness() Returns Type Description Thickness The total of the Border Thickness | Improve this Doc View Source OnBorderChanged() Invoke the BorderChanged event. Declaration public virtual void OnBorderChanged() Events | Improve this Doc View Source BorderChanged Invoked when any property of Border changes (except Child ). Declaration public event Action<Border> BorderChanged Event Type Type Description System.Action < Border >"
  },
  "api/Terminal.Gui/Terminal.Gui.Border.ToplevelContainer.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.Border.ToplevelContainer.html",
    "title": "Class Border.ToplevelContainer",
    "keywords": "Class Border.ToplevelContainer A sealed Toplevel derived class to implement Border feature. This is only a wrapper to get borders on a toplevel and is recommended using another derived, like Window where is possible to have borders with or without border line or spacing around. Inheritance System.Object Responder View Toplevel Border.ToplevelContainer Implements System.IDisposable System.ComponentModel.ISupportInitializeNotification System.ComponentModel.ISupportInitialize Inherited Members Toplevel.Running Toplevel.Loaded Toplevel.Ready Toplevel.Unloaded Toplevel.Activate Toplevel.Deactivate Toplevel.ChildClosed Toplevel.AllChildClosed Toplevel.Closing Toplevel.Closed Toplevel.ChildLoaded Toplevel.ChildUnloaded Toplevel.Resized Toplevel.OnLoaded() Toplevel.AlternateForwardKeyChanged Toplevel.OnAlternateForwardKeyChanged(Key) Toplevel.AlternateBackwardKeyChanged Toplevel.OnAlternateBackwardKeyChanged(Key) Toplevel.QuitKeyChanged Toplevel.OnQuitKeyChanged(Key) Toplevel.Create() Toplevel.CanFocus Toplevel.Modal Toplevel.MenuBar Toplevel.StatusBar Toplevel.IsMdiContainer Toplevel.IsMdiChild Toplevel.OnKeyDown(KeyEvent) Toplevel.OnKeyUp(KeyEvent) Toplevel.ProcessKey(KeyEvent) Toplevel.ProcessColdKey(KeyEvent) Toplevel.PositionToplevel(Toplevel) Toplevel.MouseEvent(MouseEvent) Toplevel.WillPresent() Toplevel.MoveNext() Toplevel.MovePrevious() Toplevel.RequestStop() Toplevel.RequestStop(Toplevel) Toplevel.PositionCursor() Toplevel.GetTopMdiChild(Type, String[]) Toplevel.ShowChild(Toplevel) View.Added View.Removed View.Enter View.Leave View.MouseEnter View.MouseLeave View.MouseClick View.CanFocusChanged View.EnabledChanged View.VisibleChanged View.HotKeyChanged View.HotKey View.HotKeySpecifier View.Shortcut View.ShortcutTag View.ShortcutAction View.Data View.Driver View.Subviews View.TabIndexes View.TabIndex View.TabStop View.Id View.IsCurrentTop View.WantMousePositionReports View.WantContinuousButtonPressed View.Frame View.LayoutStyle View.Bounds View.X View.Y View.Width View.Height View.ForceValidatePosDim View.GetMinWidthHeight(Size) View.SetMinWidthHeight() View.TextFormatter View.SuperView View.UpdateTextFormatterText() View.ProcessResizeView() View.SetNeedsDisplay() View.ClearLayoutNeeded() View.SetNeedsDisplay(Rect) View.SetChildNeedsDisplay() View.Add(View[]) View.BringSubviewToFront(View) View.SendSubviewToBack(View) View.SendSubviewBackwards(View) View.BringSubviewForward(View) View.Clear() View.Clear(Rect) View.ScreenToView(Int32, Int32) View.ClipToBounds() View.SetClip(Rect) View.DrawFrame(Rect, Int32, Boolean) View.DrawHotString(ustring, Attribute, Attribute) View.DrawHotString(ustring, Boolean, ColorScheme) View.Move(Int32, Int32, Boolean) View.HasFocus View.OnAdded(View) View.OnRemoved(View) View.OnEnter(View) View.OnLeave(View) View.Focused View.MostFocused View.ColorScheme View.AddRune(Int32, Int32, Rune) View.ClearNeedsDisplay() View.DrawContent View.OnDrawContent(Rect) View.DrawContentComplete View.OnDrawContentComplete(Rect) View.SetFocus() View.KeyPress View.InvokeKeybindings(KeyEvent) View.AddKeyBinding(Key, Command[]) View.ReplaceKeyBinding(Key, Key) View.ContainsKeyBinding(Key) View.ClearKeybindings() View.ClearKeybinding(Key) View.ClearKeybinding(Command[]) View.AddCommand(Command, Func<Nullable<Boolean>>) View.GetSupportedCommands() View.GetKeyFromCommand(Command[]) View.ProcessHotKey(KeyEvent) View.KeyDown View.KeyUp View.EnsureFocus() View.FocusFirst() View.FocusLast() View.FocusPrev() View.FocusNext() View.LayoutStarted View.LayoutComplete View.Initialized View.LayoutSubviews() View.Text View.AutoSize View.PreserveTrailingSpaces View.TextAlignment View.VerticalTextAlignment View.TextDirection View.IsInitialized View.IsAdded View.Enabled View.Visible View.ToString() View.GetAutoSize() View.GetHotKeySpecifierLength(Boolean) View.GetTextFormatterBoundsSize() View.GetBoundsTextFormatterSize() View.OnMouseEnter(MouseEvent) View.OnMouseLeave(MouseEvent) View.OnMouseEvent(MouseEvent) View.OnMouseClick(View.MouseEventArgs) View.OnEnabledChanged() View.OnVisibleChanged() View.Dispose(Boolean) View.BeginInit() View.EndInit() View.SetWidth(Int32, Int32) View.SetHeight(Int32, Int32) View.GetCurrentWidth(Int32) View.GetCurrentHeight(Int32) View.GetNormalColor() View.GetTopSuperView() Responder.Dispose() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Terminal.Gui Assembly : Terminal.Gui.dll Syntax public sealed class ToplevelContainer : Toplevel, IDisposable, ISupportInitializeNotification, ISupportInitialize Constructors | Improve this Doc View Source ToplevelContainer() Initializes with default null values. Declaration public ToplevelContainer() | Improve this Doc View Source ToplevelContainer(Border, String) Initializes a Border.ToplevelContainer with a Computed Declaration public ToplevelContainer(Border border, string title = null) Parameters Type Name Description Border border The border. System.String title The title. | Improve this Doc View Source ToplevelContainer(Rect, Border, String) Initializes a Border.ToplevelContainer with a Absolute Declaration public ToplevelContainer(Rect frame, Border border, string title = null) Parameters Type Name Description Rect frame The frame. Border border The border. System.String title The title. Properties | Improve this Doc View Source Border Declaration public override Border Border { get; set; } Property Value Type Description Border Overrides View.Border Methods | Improve this Doc View Source Add(View) Declaration public override void Add(View view) Parameters Type Name Description View view Overrides Toplevel.Add(View) | Improve this Doc View Source OnCanFocusChanged() Declaration public override void OnCanFocusChanged() Overrides View.OnCanFocusChanged() | Improve this Doc View Source Redraw(Rect) Declaration public override void Redraw(Rect bounds) Parameters Type Name Description Rect bounds Overrides Toplevel.Redraw(Rect) | Improve this Doc View Source Remove(View) Declaration public override void Remove(View view) Parameters Type Name Description View view Overrides Toplevel.Remove(View) | Improve this Doc View Source RemoveAll() Declaration public override void RemoveAll() Overrides Toplevel.RemoveAll() Implements System.IDisposable System.ComponentModel.ISupportInitializeNotification System.ComponentModel.ISupportInitialize"
  },
  "api/Terminal.Gui/Terminal.Gui.BorderStyle.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.BorderStyle.html",
    "title": "Enum BorderStyle",
    "keywords": "Enum BorderStyle Specifies the border style for a View and to be used by the Border class. Namespace : Terminal.Gui Assembly : Terminal.Gui.dll Syntax public enum BorderStyle Fields Name Description Double The border is drawn with a double line limits. None No border is drawn. Rounded The border is drawn with a single line and rounded corners limits. Single The border is drawn with a single line limits."
  },
  "api/Terminal.Gui/Terminal.Gui.Button.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.Button.html",
    "title": "Class Button",
    "keywords": "Class Button Button is a View that provides an item that invokes an System.Action when activated by the user. Inheritance System.Object Responder View Button Implements System.IDisposable System.ComponentModel.ISupportInitializeNotification System.ComponentModel.ISupportInitialize Remarks Provides a button showing text invokes an System.Action when clicked on with a mouse or when the user presses SPACE, ENTER, or hotkey. The hotkey is the first letter or digit following the first underscore ('_') in the button text. Use HotKeySpecifier to change the hotkey specifier from the default of ('_'). If no hotkey specifier is found, the first uppercase letter encountered will be used as the hotkey. When the button is configured as the default ( IsDefault ) and the user presses the ENTER key, if no other View processes the KeyEvent , the Button 's System.Action will be invoked. Inherited Members View.Added View.Removed View.Enter View.Leave View.MouseEnter View.MouseLeave View.MouseClick View.CanFocusChanged View.EnabledChanged View.VisibleChanged View.HotKeyChanged View.HotKeySpecifier View.Shortcut View.ShortcutTag View.ShortcutAction View.Data View.Driver View.Subviews View.TabIndexes View.TabIndex View.TabStop View.CanFocus View.Id View.IsCurrentTop View.WantMousePositionReports View.WantContinuousButtonPressed View.Frame View.LayoutStyle View.Bounds View.X View.Y View.Width View.Height View.ForceValidatePosDim View.GetMinWidthHeight(Size) View.SetMinWidthHeight() View.TextFormatter View.SuperView View.ProcessResizeView() View.SetNeedsDisplay() View.ClearLayoutNeeded() View.SetNeedsDisplay(Rect) View.SetChildNeedsDisplay() View.Add(View) View.Add(View[]) View.RemoveAll() View.Remove(View) View.BringSubviewToFront(View) View.SendSubviewToBack(View) View.SendSubviewBackwards(View) View.BringSubviewForward(View) View.Clear() View.Clear(Rect) View.ScreenToView(Int32, Int32) View.ClipToBounds() View.SetClip(Rect) View.DrawFrame(Rect, Int32, Boolean) View.DrawHotString(ustring, Attribute, Attribute) View.DrawHotString(ustring, Boolean, ColorScheme) View.Move(Int32, Int32, Boolean) View.HasFocus View.OnAdded(View) View.OnRemoved(View) View.OnLeave(View) View.Focused View.MostFocused View.ColorScheme View.AddRune(Int32, Int32, Rune) View.ClearNeedsDisplay() View.Redraw(Rect) View.DrawContent View.OnDrawContent(Rect) View.DrawContentComplete View.OnDrawContentComplete(Rect) View.SetFocus() View.KeyPress View.InvokeKeybindings(KeyEvent) View.AddKeyBinding(Key, Command[]) View.ReplaceKeyBinding(Key, Key) View.ContainsKeyBinding(Key) View.ClearKeybindings() View.ClearKeybinding(Key) View.ClearKeybinding(Command[]) View.AddCommand(Command, Func<Nullable<Boolean>>) View.GetSupportedCommands() View.GetKeyFromCommand(Command[]) View.KeyDown View.OnKeyDown(KeyEvent) View.KeyUp View.OnKeyUp(KeyEvent) View.EnsureFocus() View.FocusFirst() View.FocusLast() View.FocusPrev() View.FocusNext() View.LayoutStarted View.LayoutComplete View.Initialized View.LayoutSubviews() View.Text View.AutoSize View.PreserveTrailingSpaces View.TextAlignment View.VerticalTextAlignment View.TextDirection View.IsInitialized View.IsAdded View.Enabled View.Visible View.Border View.ToString() View.GetAutoSize() View.GetHotKeySpecifierLength(Boolean) View.GetTextFormatterBoundsSize() View.GetBoundsTextFormatterSize() View.OnMouseEnter(MouseEvent) View.OnMouseLeave(MouseEvent) View.OnMouseEvent(MouseEvent) View.OnMouseClick(View.MouseEventArgs) View.OnCanFocusChanged() View.OnEnabledChanged() View.OnVisibleChanged() View.Dispose(Boolean) View.BeginInit() View.EndInit() View.SetWidth(Int32, Int32) View.SetHeight(Int32, Int32) View.GetCurrentWidth(Int32) View.GetCurrentHeight(Int32) View.GetNormalColor() View.GetTopSuperView() Responder.Dispose() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Terminal.Gui Assembly : Terminal.Gui.dll Syntax public class Button : View, IDisposable, ISupportInitializeNotification, ISupportInitialize Constructors | Improve this Doc View Source Button() Initializes a new instance of Button using Computed layout. Declaration public Button() | Improve this Doc View Source Button(ustring, Boolean) Initializes a new instance of Button using Computed layout. Declaration public Button(ustring text, bool is_default = false) Parameters Type Name Description NStack.ustring text The button's text System.Boolean is_default If true , a special decoration is used, and the user pressing the enter key in a Dialog will implicitly activate this button. | Improve this Doc View Source Button(Int32, Int32, ustring) Initializes a new instance of Button using Absolute layout, based on the given text Declaration public Button(int x, int y, ustring text) Parameters Type Name Description System.Int32 x X position where the button will be shown. System.Int32 y Y position where the button will be shown. NStack.ustring text The button's text | Improve this Doc View Source Button(Int32, Int32, ustring, Boolean) Initializes a new instance of Button using Absolute layout, based on the given text. Declaration public Button(int x, int y, ustring text, bool is_default) Parameters Type Name Description System.Int32 x X position where the button will be shown. System.Int32 y Y position where the button will be shown. NStack.ustring text The button's text System.Boolean is_default If true , a special decoration is used, and the user pressing the enter key in a Dialog will implicitly activate this button. Properties | Improve this Doc View Source HotKey Declaration public override Key HotKey { get; set; } Property Value Type Description Key Overrides View.HotKey | Improve this Doc View Source IsDefault Gets or sets whether the Button is the default action to activate in a dialog. Declaration public bool IsDefault { get; set; } Property Value Type Description System.Boolean true if is default; otherwise, false . Methods | Improve this Doc View Source MouseEvent(MouseEvent) Declaration public override bool MouseEvent(MouseEvent me) Parameters Type Name Description MouseEvent me Returns Type Description System.Boolean Overrides Responder.MouseEvent(MouseEvent) | Improve this Doc View Source OnClicked() Virtual method to invoke the Clicked event. Declaration public virtual void OnClicked() | Improve this Doc View Source OnEnter(View) Declaration public override bool OnEnter(View view) Parameters Type Name Description View view Returns Type Description System.Boolean Overrides View.OnEnter(View) | Improve this Doc View Source PositionCursor() Declaration public override void PositionCursor() Overrides View.PositionCursor() | Improve this Doc View Source ProcessColdKey(KeyEvent) Declaration public override bool ProcessColdKey(KeyEvent kb) Parameters Type Name Description KeyEvent kb Returns Type Description System.Boolean Overrides View.ProcessColdKey(KeyEvent) | Improve this Doc View Source ProcessHotKey(KeyEvent) Declaration public override bool ProcessHotKey(KeyEvent kb) Parameters Type Name Description KeyEvent kb Returns Type Description System.Boolean Overrides View.ProcessHotKey(KeyEvent) | Improve this Doc View Source ProcessKey(KeyEvent) Declaration public override bool ProcessKey(KeyEvent kb) Parameters Type Name Description KeyEvent kb Returns Type Description System.Boolean Overrides View.ProcessKey(KeyEvent) | Improve this Doc View Source UpdateTextFormatterText() Declaration protected override void UpdateTextFormatterText() Overrides View.UpdateTextFormatterText() Events | Improve this Doc View Source Clicked Clicked System.Action , raised when the user clicks the primary mouse button within the Bounds of this View or if the user presses the action key while this view is focused. (TODO: IsDefault) Declaration public event Action Clicked Event Type Type Description System.Action Implements System.IDisposable System.ComponentModel.ISupportInitializeNotification System.ComponentModel.ISupportInitialize"
  },
  "api/Terminal.Gui/Terminal.Gui.CheckBox.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.CheckBox.html",
    "title": "Class CheckBox",
    "keywords": "Class CheckBox The CheckBox View shows an on/off toggle that the user can set Inheritance System.Object Responder View CheckBox Implements System.IDisposable System.ComponentModel.ISupportInitializeNotification System.ComponentModel.ISupportInitialize Inherited Members View.Added View.Removed View.Enter View.Leave View.MouseEnter View.MouseLeave View.MouseClick View.CanFocusChanged View.EnabledChanged View.VisibleChanged View.HotKeyChanged View.HotKey View.HotKeySpecifier View.Shortcut View.ShortcutTag View.ShortcutAction View.Data View.Driver View.Subviews View.TabIndexes View.TabIndex View.TabStop View.CanFocus View.Id View.IsCurrentTop View.WantMousePositionReports View.WantContinuousButtonPressed View.Frame View.LayoutStyle View.Bounds View.X View.Y View.Width View.Height View.ForceValidatePosDim View.GetMinWidthHeight(Size) View.SetMinWidthHeight() View.TextFormatter View.SuperView View.ProcessResizeView() View.SetNeedsDisplay() View.ClearLayoutNeeded() View.SetNeedsDisplay(Rect) View.SetChildNeedsDisplay() View.Add(View) View.Add(View[]) View.RemoveAll() View.Remove(View) View.BringSubviewToFront(View) View.SendSubviewToBack(View) View.SendSubviewBackwards(View) View.BringSubviewForward(View) View.Clear() View.Clear(Rect) View.ScreenToView(Int32, Int32) View.ClipToBounds() View.SetClip(Rect) View.DrawFrame(Rect, Int32, Boolean) View.DrawHotString(ustring, Attribute, Attribute) View.DrawHotString(ustring, Boolean, ColorScheme) View.Move(Int32, Int32, Boolean) View.HasFocus View.OnAdded(View) View.OnRemoved(View) View.OnLeave(View) View.Focused View.MostFocused View.ColorScheme View.AddRune(Int32, Int32, Rune) View.ClearNeedsDisplay() View.Redraw(Rect) View.DrawContent View.OnDrawContent(Rect) View.DrawContentComplete View.OnDrawContentComplete(Rect) View.SetFocus() View.KeyPress View.InvokeKeybindings(KeyEvent) View.AddKeyBinding(Key, Command[]) View.ReplaceKeyBinding(Key, Key) View.ContainsKeyBinding(Key) View.ClearKeybindings() View.ClearKeybinding(Key) View.ClearKeybinding(Command[]) View.AddCommand(Command, Func<Nullable<Boolean>>) View.GetSupportedCommands() View.GetKeyFromCommand(Command[]) View.ProcessColdKey(KeyEvent) View.KeyDown View.OnKeyDown(KeyEvent) View.KeyUp View.OnKeyUp(KeyEvent) View.EnsureFocus() View.FocusFirst() View.FocusLast() View.FocusPrev() View.FocusNext() View.LayoutStarted View.LayoutComplete View.Initialized View.LayoutSubviews() View.Text View.AutoSize View.PreserveTrailingSpaces View.TextAlignment View.VerticalTextAlignment View.TextDirection View.IsInitialized View.IsAdded View.Enabled View.Visible View.Border View.ToString() View.GetAutoSize() View.GetHotKeySpecifierLength(Boolean) View.GetTextFormatterBoundsSize() View.GetBoundsTextFormatterSize() View.OnMouseEnter(MouseEvent) View.OnMouseLeave(MouseEvent) View.OnMouseEvent(MouseEvent) View.OnMouseClick(View.MouseEventArgs) View.OnCanFocusChanged() View.OnEnabledChanged() View.OnVisibleChanged() View.Dispose(Boolean) View.BeginInit() View.EndInit() View.SetWidth(Int32, Int32) View.SetHeight(Int32, Int32) View.GetCurrentWidth(Int32) View.GetCurrentHeight(Int32) View.GetNormalColor() View.GetTopSuperView() Responder.Dispose() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Terminal.Gui Assembly : Terminal.Gui.dll Syntax public class CheckBox : View, IDisposable, ISupportInitializeNotification, ISupportInitialize Constructors | Improve this Doc View Source CheckBox() Initializes a new instance of CheckBox based on the given text, using Computed layout. Declaration public CheckBox() | Improve this Doc View Source CheckBox(ustring, Boolean) Initializes a new instance of CheckBox based on the given text, using Computed layout. Declaration public CheckBox(ustring s, bool is_checked = false) Parameters Type Name Description NStack.ustring s S. System.Boolean is_checked If set to true is checked. | Improve this Doc View Source CheckBox(Int32, Int32, ustring) Initializes a new instance of CheckBox using Absolute layout. Declaration public CheckBox(int x, int y, ustring s) Parameters Type Name Description System.Int32 x System.Int32 y NStack.ustring s | Improve this Doc View Source CheckBox(Int32, Int32, ustring, Boolean) Initializes a new instance of CheckBox using Absolute layout. Declaration public CheckBox(int x, int y, ustring s, bool is_checked) Parameters Type Name Description System.Int32 x System.Int32 y NStack.ustring s System.Boolean is_checked Properties | Improve this Doc View Source Checked The state of the CheckBox Declaration public bool Checked { get; set; } Property Value Type Description System.Boolean Methods | Improve this Doc View Source MouseEvent(MouseEvent) Declaration public override bool MouseEvent(MouseEvent me) Parameters Type Name Description MouseEvent me Returns Type Description System.Boolean Overrides Responder.MouseEvent(MouseEvent) | Improve this Doc View Source OnEnter(View) Declaration public override bool OnEnter(View view) Parameters Type Name Description View view Returns Type Description System.Boolean Overrides View.OnEnter(View) | Improve this Doc View Source OnToggled(Boolean) Called when the Checked property changes. Invokes the Toggled event. Declaration public virtual void OnToggled(bool previousChecked) Parameters Type Name Description System.Boolean previousChecked | Improve this Doc View Source PositionCursor() Declaration public override void PositionCursor() Overrides View.PositionCursor() | Improve this Doc View Source ProcessHotKey(KeyEvent) Declaration public override bool ProcessHotKey(KeyEvent kb) Parameters Type Name Description KeyEvent kb Returns Type Description System.Boolean Overrides View.ProcessHotKey(KeyEvent) | Improve this Doc View Source ProcessKey(KeyEvent) Declaration public override bool ProcessKey(KeyEvent kb) Parameters Type Name Description KeyEvent kb Returns Type Description System.Boolean Overrides View.ProcessKey(KeyEvent) | Improve this Doc View Source UpdateTextFormatterText() Declaration protected override void UpdateTextFormatterText() Overrides View.UpdateTextFormatterText() Events | Improve this Doc View Source Toggled Toggled event, raised when the CheckBox is toggled. Declaration public event Action<bool> Toggled Event Type Type Description System.Action < System.Boolean > Implements System.IDisposable System.ComponentModel.ISupportInitializeNotification System.ComponentModel.ISupportInitialize"
  },
  "api/Terminal.Gui/Terminal.Gui.Clipboard.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.Clipboard.html",
    "title": "Class Clipboard",
    "keywords": "Class Clipboard Provides cut, copy, and paste support for the clipboard with OS interaction. Inheritance System.Object Clipboard Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Terminal.Gui Assembly : Terminal.Gui.dll Syntax public static class Clipboard Properties | Improve this Doc View Source Contents Get or sets the operation system clipboard, otherwise the contents field. Declaration public static ustring Contents { get; set; } Property Value Type Description NStack.ustring | Improve this Doc View Source IsSupported Returns true if the environmental dependencies are in place to interact with the OS clipboard. Declaration public static bool IsSupported { get; } Property Value Type Description System.Boolean Methods | Improve this Doc View Source TryGetClipboardData(out String) Gets the operation system clipboard if possible. Declaration public static bool TryGetClipboardData(out string result) Parameters Type Name Description System.String result Clipboard contents read Returns Type Description System.Boolean true if it was possible to read the OS clipboard. | Improve this Doc View Source TrySetClipboardData(String) Sets the operation system clipboard if possible. Declaration public static bool TrySetClipboardData(string text) Parameters Type Name Description System.String text Returns Type Description System.Boolean True if the clipboard content was set successfully."
  },
  "api/Terminal.Gui/Terminal.Gui.ClipboardBase.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.ClipboardBase.html",
    "title": "Class ClipboardBase",
    "keywords": "Class ClipboardBase Shared abstract class to enforce rules from the implementation of the IClipboard interface. Inheritance System.Object ClipboardBase Implements IClipboard Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Terminal.Gui Assembly : Terminal.Gui.dll Syntax public abstract class ClipboardBase : IClipboard Properties | Improve this Doc View Source IsSupported Returns true if the environmental dependencies are in place to interact with the OS clipboard Declaration public abstract bool IsSupported { get; } Property Value Type Description System.Boolean Methods | Improve this Doc View Source GetClipboardData() Get the operation system clipboard. Declaration public string GetClipboardData() Returns Type Description System.String Exceptions Type Condition System.NotSupportedException Thrown if it was not possible to read the clipboard contents | Improve this Doc View Source GetClipboardDataImpl() Get the operation system clipboard. Declaration protected abstract string GetClipboardDataImpl() Returns Type Description System.String | Improve this Doc View Source SetClipboardData(String) Sets the operation system clipboard. Declaration public void SetClipboardData(string text) Parameters Type Name Description System.String text Exceptions Type Condition System.NotSupportedException Thrown if it was not possible to set the clipboard contents | Improve this Doc View Source SetClipboardDataImpl(String) Sets the operation system clipboard. Declaration protected abstract void SetClipboardDataImpl(string text) Parameters Type Name Description System.String text | Improve this Doc View Source TryGetClipboardData(out String) Gets the operation system clipboard if possible. Declaration public bool TryGetClipboardData(out string result) Parameters Type Name Description System.String result Clipboard contents read Returns Type Description System.Boolean true if it was possible to read the OS clipboard. | Improve this Doc View Source TrySetClipboardData(String) Sets the operation system clipboard if possible. Declaration public bool TrySetClipboardData(string text) Parameters Type Name Description System.String text Returns Type Description System.Boolean True if the clipboard content was set successfully Implements IClipboard"
  },
  "api/Terminal.Gui/Terminal.Gui.Color.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.Color.html",
    "title": "Enum Color",
    "keywords": "Enum Color Basic colors that can be used to set the foreground and background colors in console applications. Namespace : Terminal.Gui Assembly : Terminal.Gui.dll Syntax public enum Color Fields Name Description Black The black color. Blue The blue color. BrightBlue The bright bBlue color. BrightCyan The bright cyan color. BrightGreen The bright green color. BrightMagenta The bright magenta color. BrightRed The bright red color. BrightYellow The bright yellow color. Brown The brown color. Cyan The cyan color. DarkGray The dark gray color. Gray The gray color. Green The green color. Magenta The magenta color. Red The red color. White The White color."
  },
  "api/Terminal.Gui/Terminal.Gui.ColorPicker.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.ColorPicker.html",
    "title": "Class ColorPicker",
    "keywords": "Class ColorPicker The ColorPicker View Color picker. Inheritance System.Object Responder View ColorPicker Implements System.IDisposable System.ComponentModel.ISupportInitializeNotification System.ComponentModel.ISupportInitialize Inherited Members View.Added View.Removed View.Enter View.Leave View.MouseEnter View.MouseLeave View.MouseClick View.CanFocusChanged View.EnabledChanged View.VisibleChanged View.HotKeyChanged View.HotKey View.HotKeySpecifier View.Shortcut View.ShortcutTag View.ShortcutAction View.Data View.Driver View.Subviews View.TabIndexes View.TabIndex View.TabStop View.CanFocus View.Id View.IsCurrentTop View.WantMousePositionReports View.WantContinuousButtonPressed View.Frame View.LayoutStyle View.Bounds View.X View.Y View.Width View.Height View.ForceValidatePosDim View.GetMinWidthHeight(Size) View.SetMinWidthHeight() View.TextFormatter View.SuperView View.UpdateTextFormatterText() View.ProcessResizeView() View.SetNeedsDisplay() View.ClearLayoutNeeded() View.SetNeedsDisplay(Rect) View.SetChildNeedsDisplay() View.Add(View) View.Add(View[]) View.RemoveAll() View.Remove(View) View.BringSubviewToFront(View) View.SendSubviewToBack(View) View.SendSubviewBackwards(View) View.BringSubviewForward(View) View.Clear() View.Clear(Rect) View.ScreenToView(Int32, Int32) View.ClipToBounds() View.SetClip(Rect) View.DrawFrame(Rect, Int32, Boolean) View.DrawHotString(ustring, Attribute, Attribute) View.DrawHotString(ustring, Boolean, ColorScheme) View.Move(Int32, Int32, Boolean) View.PositionCursor() View.HasFocus View.OnAdded(View) View.OnRemoved(View) View.OnEnter(View) View.OnLeave(View) View.Focused View.MostFocused View.ColorScheme View.AddRune(Int32, Int32, Rune) View.ClearNeedsDisplay() View.DrawContent View.OnDrawContent(Rect) View.DrawContentComplete View.OnDrawContentComplete(Rect) View.SetFocus() View.KeyPress View.InvokeKeybindings(KeyEvent) View.AddKeyBinding(Key, Command[]) View.ReplaceKeyBinding(Key, Key) View.ContainsKeyBinding(Key) View.ClearKeybindings() View.ClearKeybinding(Key) View.ClearKeybinding(Command[]) View.AddCommand(Command, Func<Nullable<Boolean>>) View.GetSupportedCommands() View.GetKeyFromCommand(Command[]) View.ProcessHotKey(KeyEvent) View.ProcessColdKey(KeyEvent) View.KeyDown View.OnKeyDown(KeyEvent) View.KeyUp View.OnKeyUp(KeyEvent) View.EnsureFocus() View.FocusFirst() View.FocusLast() View.FocusPrev() View.FocusNext() View.LayoutStarted View.LayoutComplete View.Initialized View.LayoutSubviews() View.Text View.AutoSize View.PreserveTrailingSpaces View.TextAlignment View.VerticalTextAlignment View.TextDirection View.IsInitialized View.IsAdded View.Enabled View.Visible View.Border View.ToString() View.GetAutoSize() View.GetHotKeySpecifierLength(Boolean) View.GetTextFormatterBoundsSize() View.GetBoundsTextFormatterSize() View.OnMouseEnter(MouseEvent) View.OnMouseLeave(MouseEvent) View.OnMouseEvent(MouseEvent) View.OnMouseClick(View.MouseEventArgs) View.OnCanFocusChanged() View.OnEnabledChanged() View.OnVisibleChanged() View.Dispose(Boolean) View.BeginInit() View.EndInit() View.SetWidth(Int32, Int32) View.SetHeight(Int32, Int32) View.GetCurrentWidth(Int32) View.GetCurrentHeight(Int32) View.GetNormalColor() View.GetTopSuperView() Responder.Dispose() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Terminal.Gui Assembly : Terminal.Gui.dll Syntax public class ColorPicker : View, IDisposable, ISupportInitializeNotification, ISupportInitialize Constructors | Improve this Doc View Source ColorPicker() Initializes a new instance of ColorPicker . Declaration public ColorPicker() | Improve this Doc View Source ColorPicker(ustring) Initializes a new instance of ColorPicker . Declaration public ColorPicker(ustring title) Parameters Type Name Description NStack.ustring title Title. | Improve this Doc View Source ColorPicker(Int32, Int32, ustring) Initializes a new instance of ColorPicker . Declaration public ColorPicker(int x, int y, ustring title) Parameters Type Name Description System.Int32 x X location. System.Int32 y Y location. NStack.ustring title Title | Improve this Doc View Source ColorPicker(Point, ustring) Initializes a new instance of ColorPicker . Declaration public ColorPicker(Point point, ustring title) Parameters Type Name Description Point point Location point. NStack.ustring title Title. Properties | Improve this Doc View Source Cursor Cursor for the selected color. Declaration public Point Cursor { get; set; } Property Value Type Description Point | Improve this Doc View Source SelectedColor Selected color. Declaration public Color SelectedColor { get; set; } Property Value Type Description Color Methods | Improve this Doc View Source MouseEvent(MouseEvent) Declaration public override bool MouseEvent(MouseEvent me) Parameters Type Name Description MouseEvent me Returns Type Description System.Boolean Overrides Responder.MouseEvent(MouseEvent) | Improve this Doc View Source MoveDown() Moves the selected item index to the next row. Declaration public virtual bool MoveDown() Returns Type Description System.Boolean | Improve this Doc View Source MoveLeft() Moves the selected item index to the previous column. Declaration public virtual bool MoveLeft() Returns Type Description System.Boolean | Improve this Doc View Source MoveRight() Moves the selected item index to the next column. Declaration public virtual bool MoveRight() Returns Type Description System.Boolean | Improve this Doc View Source MoveUp() Moves the selected item index to the previous row. Declaration public virtual bool MoveUp() Returns Type Description System.Boolean | Improve this Doc View Source ProcessKey(KeyEvent) Declaration public override bool ProcessKey(KeyEvent kb) Parameters Type Name Description KeyEvent kb Returns Type Description System.Boolean Overrides View.ProcessKey(KeyEvent) | Improve this Doc View Source Redraw(Rect) Declaration public override void Redraw(Rect bounds) Parameters Type Name Description Rect bounds Overrides View.Redraw(Rect) Events | Improve this Doc View Source ColorChanged Fired when a color is picked. Declaration public event Action ColorChanged Event Type Type Description System.Action Implements System.IDisposable System.ComponentModel.ISupportInitializeNotification System.ComponentModel.ISupportInitialize"
  },
  "api/Terminal.Gui/Terminal.Gui.Colors.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.Colors.html",
    "title": "Class Colors",
    "keywords": "Class Colors The default ColorScheme s for the application. Inheritance System.Object Colors Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Terminal.Gui Assembly : Terminal.Gui.dll Syntax public static class Colors Properties | Improve this Doc View Source Base The base color scheme, for the default toplevel views. Declaration public static ColorScheme Base { get; set; } Property Value Type Description ColorScheme | Improve this Doc View Source ColorSchemes Provides the defined ColorScheme s. Declaration public static Dictionary<string, ColorScheme> ColorSchemes { get; } Property Value Type Description System.Collections.Generic.Dictionary < System.String , ColorScheme > | Improve this Doc View Source Dialog The dialog color scheme, for standard popup dialog boxes Declaration public static ColorScheme Dialog { get; set; } Property Value Type Description ColorScheme | Improve this Doc View Source Error The color scheme for showing errors. Declaration public static ColorScheme Error { get; set; } Property Value Type Description ColorScheme | Improve this Doc View Source Menu The menu bar color Declaration public static ColorScheme Menu { get; set; } Property Value Type Description ColorScheme | Improve this Doc View Source TopLevel The application toplevel color scheme, for the default toplevel views. Declaration public static ColorScheme TopLevel { get; set; } Property Value Type Description ColorScheme"
  },
  "api/Terminal.Gui/Terminal.Gui.ColorScheme.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.ColorScheme.html",
    "title": "Class ColorScheme",
    "keywords": "Class ColorScheme Color scheme definitions, they cover some common scenarios and are used typically in containers such as Window and FrameView to set the scheme that is used by all the views contained inside. Inheritance System.Object ColorScheme Implements System.IEquatable < ColorScheme > Inherited Members System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Terminal.Gui Assembly : Terminal.Gui.dll Syntax public class ColorScheme : IEquatable<ColorScheme> Properties | Improve this Doc View Source Disabled The default color for text, when the view is disabled. Declaration public Attribute Disabled { get; set; } Property Value Type Description Attribute | Improve this Doc View Source Focus The color for text when the view has the focus. Declaration public Attribute Focus { get; set; } Property Value Type Description Attribute | Improve this Doc View Source HotFocus The color for the hotkey when the view is focused. Declaration public Attribute HotFocus { get; set; } Property Value Type Description Attribute | Improve this Doc View Source HotNormal The color for the hotkey when a view is not focused Declaration public Attribute HotNormal { get; set; } Property Value Type Description Attribute | Improve this Doc View Source Normal The default color for text, when the view is not focused. Declaration public Attribute Normal { get; set; } Property Value Type Description Attribute Methods | Improve this Doc View Source Equals(Object) Compares two ColorScheme objects for equality. Declaration public override bool Equals(object obj) Parameters Type Name Description System.Object obj Returns Type Description System.Boolean true if the two objects are equal Overrides System.Object.Equals(System.Object) | Improve this Doc View Source Equals(ColorScheme) Compares two ColorScheme objects for equality. Declaration public bool Equals(ColorScheme other) Parameters Type Name Description ColorScheme other Returns Type Description System.Boolean true if the two objects are equal | Improve this Doc View Source GetHashCode() Returns a hashcode for this instance. Declaration public override int GetHashCode() Returns Type Description System.Int32 hashcode for this instance Overrides System.Object.GetHashCode() Operators | Improve this Doc View Source Equality(ColorScheme, ColorScheme) Compares two ColorScheme objects for equality. Declaration public static bool operator ==(ColorScheme left, ColorScheme right) Parameters Type Name Description ColorScheme left ColorScheme right Returns Type Description System.Boolean true if the two objects are equivalent | Improve this Doc View Source Inequality(ColorScheme, ColorScheme) Compares two ColorScheme objects for inequality. Declaration public static bool operator !=(ColorScheme left, ColorScheme right) Parameters Type Name Description ColorScheme left ColorScheme right Returns Type Description System.Boolean true if the two objects are not equivalent Implements System.IEquatable<T>"
  },
  "api/Terminal.Gui/Terminal.Gui.ComboBox.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.ComboBox.html",
    "title": "Class ComboBox",
    "keywords": "Class ComboBox Provides a drop-down list of items the user can select from. Inheritance System.Object Responder View ComboBox Implements System.IDisposable System.ComponentModel.ISupportInitializeNotification System.ComponentModel.ISupportInitialize Inherited Members View.Added View.Removed View.Enter View.Leave View.MouseEnter View.MouseLeave View.MouseClick View.CanFocusChanged View.EnabledChanged View.VisibleChanged View.HotKeyChanged View.HotKey View.HotKeySpecifier View.Shortcut View.ShortcutTag View.ShortcutAction View.Data View.Driver View.Subviews View.TabIndexes View.TabIndex View.TabStop View.CanFocus View.Id View.IsCurrentTop View.WantMousePositionReports View.WantContinuousButtonPressed View.Frame View.LayoutStyle View.Bounds View.X View.Y View.Width View.Height View.ForceValidatePosDim View.GetMinWidthHeight(Size) View.SetMinWidthHeight() View.TextFormatter View.SuperView View.UpdateTextFormatterText() View.ProcessResizeView() View.SetNeedsDisplay() View.ClearLayoutNeeded() View.SetNeedsDisplay(Rect) View.SetChildNeedsDisplay() View.Add(View) View.Add(View[]) View.RemoveAll() View.Remove(View) View.BringSubviewToFront(View) View.SendSubviewToBack(View) View.SendSubviewBackwards(View) View.BringSubviewForward(View) View.Clear() View.Clear(Rect) View.ScreenToView(Int32, Int32) View.ClipToBounds() View.SetClip(Rect) View.DrawFrame(Rect, Int32, Boolean) View.DrawHotString(ustring, Attribute, Attribute) View.DrawHotString(ustring, Boolean, ColorScheme) View.Move(Int32, Int32, Boolean) View.PositionCursor() View.HasFocus View.OnAdded(View) View.OnRemoved(View) View.Focused View.MostFocused View.AddRune(Int32, Int32, Rune) View.ClearNeedsDisplay() View.DrawContent View.OnDrawContent(Rect) View.DrawContentComplete View.OnDrawContentComplete(Rect) View.SetFocus() View.KeyPress View.InvokeKeybindings(KeyEvent) View.AddKeyBinding(Key, Command[]) View.ReplaceKeyBinding(Key, Key) View.ContainsKeyBinding(Key) View.ClearKeybindings() View.ClearKeybinding(Key) View.ClearKeybinding(Command[]) View.AddCommand(Command, Func<Nullable<Boolean>>) View.GetSupportedCommands() View.GetKeyFromCommand(Command[]) View.ProcessHotKey(KeyEvent) View.ProcessColdKey(KeyEvent) View.KeyDown View.OnKeyDown(KeyEvent) View.KeyUp View.OnKeyUp(KeyEvent) View.EnsureFocus() View.FocusFirst() View.FocusLast() View.FocusPrev() View.FocusNext() View.LayoutStarted View.LayoutComplete View.Initialized View.LayoutSubviews() View.AutoSize View.PreserveTrailingSpaces View.TextAlignment View.VerticalTextAlignment View.TextDirection View.IsInitialized View.IsAdded View.Enabled View.Visible View.Border View.ToString() View.GetAutoSize() View.GetHotKeySpecifierLength(Boolean) View.GetTextFormatterBoundsSize() View.GetBoundsTextFormatterSize() View.OnMouseEnter(MouseEvent) View.OnMouseLeave(MouseEvent) View.OnMouseEvent(MouseEvent) View.OnMouseClick(View.MouseEventArgs) View.OnCanFocusChanged() View.OnEnabledChanged() View.OnVisibleChanged() View.Dispose(Boolean) View.BeginInit() View.EndInit() View.SetWidth(Int32, Int32) View.SetHeight(Int32, Int32) View.GetCurrentWidth(Int32) View.GetCurrentHeight(Int32) View.GetNormalColor() View.GetTopSuperView() Responder.Dispose() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Terminal.Gui Assembly : Terminal.Gui.dll Syntax public class ComboBox : View, IDisposable, ISupportInitializeNotification, ISupportInitialize Constructors | Improve this Doc View Source ComboBox() Public constructor Declaration public ComboBox() | Improve this Doc View Source ComboBox(ustring) Public constructor Declaration public ComboBox(ustring text) Parameters Type Name Description NStack.ustring text | Improve this Doc View Source ComboBox(IList) Initialize with the source. Declaration public ComboBox(IList source) Parameters Type Name Description System.Collections.IList source The source. | Improve this Doc View Source ComboBox(Rect, IList) Public constructor Declaration public ComboBox(Rect rect, IList source) Parameters Type Name Description Rect rect System.Collections.IList source Properties | Improve this Doc View Source ColorScheme Declaration public ColorScheme ColorScheme { get; set; } Property Value Type Description ColorScheme | Improve this Doc View Source HideDropdownListOnClick Gets or sets if the drop-down list can be hide with a button click event. Declaration public bool HideDropdownListOnClick { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source IsShow Gets the drop down list state, expanded or collapsed. Declaration public bool IsShow { get; } Property Value Type Description System.Boolean | Improve this Doc View Source ReadOnly If set to true its not allow any changes in the text. Declaration public bool ReadOnly { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source SelectedItem Gets the index of the currently selected item in the Source Declaration public int SelectedItem { get; set; } Property Value Type Description System.Int32 The selected item or -1 none selected. | Improve this Doc View Source Source Gets or sets the IListDataSource backing this ComboBox , enabling custom rendering. Declaration public IListDataSource Source { get; set; } Property Value Type Description IListDataSource The source. | Improve this Doc View Source Text The currently selected list item Declaration public ustring Text { get; set; } Property Value Type Description NStack.ustring Methods | Improve this Doc View Source Collapse() Collapses the drop down list. Returns true if the state chagned or false if it was already collapsed and no action was taken Declaration public virtual bool Collapse() Returns Type Description System.Boolean | Improve this Doc View Source Expand() Expands the drop down list. Returns true if the state chagned or false if it was already expanded and no action was taken Declaration public virtual bool Expand() Returns Type Description System.Boolean | Improve this Doc View Source MouseEvent(MouseEvent) Declaration public override bool MouseEvent(MouseEvent me) Parameters Type Name Description MouseEvent me Returns Type Description System.Boolean Overrides Responder.MouseEvent(MouseEvent) | Improve this Doc View Source OnCollapsed() Virtual method which invokes the Collapsed event. Declaration public virtual void OnCollapsed() | Improve this Doc View Source OnEnter(View) Declaration public override bool OnEnter(View view) Parameters Type Name Description View view Returns Type Description System.Boolean Overrides View.OnEnter(View) | Improve this Doc View Source OnExpanded() Virtual method which invokes the Expanded event. Declaration public virtual void OnExpanded() | Improve this Doc View Source OnLeave(View) Declaration public override bool OnLeave(View view) Parameters Type Name Description View view Returns Type Description System.Boolean Overrides View.OnLeave(View) | Improve this Doc View Source OnOpenSelectedItem() Invokes the OnOpenSelectedItem event if it is defined. Declaration public virtual bool OnOpenSelectedItem() Returns Type Description System.Boolean | Improve this Doc View Source OnSelectedChanged() Invokes the SelectedChanged event if it is defined. Declaration public virtual bool OnSelectedChanged() Returns Type Description System.Boolean | Improve this Doc View Source ProcessKey(KeyEvent) Declaration public override bool ProcessKey(KeyEvent e) Parameters Type Name Description KeyEvent e Returns Type Description System.Boolean Overrides View.ProcessKey(KeyEvent) | Improve this Doc View Source Redraw(Rect) Declaration public override void Redraw(Rect bounds) Parameters Type Name Description Rect bounds Overrides View.Redraw(Rect) | Improve this Doc View Source SetSource(IList) Sets the source of the ComboBox to an System.Collections.IList . Declaration public void SetSource(IList source) Parameters Type Name Description System.Collections.IList source Events | Improve this Doc View Source Collapsed This event is raised when the drop-down list is collapsed. Declaration public event Action Collapsed Event Type Type Description System.Action | Improve this Doc View Source Expanded This event is raised when the drop-down list is expanded. Declaration public event Action Expanded Event Type Type Description System.Action | Improve this Doc View Source OpenSelectedItem This event is raised when the user Double Clicks on an item or presses ENTER to open the selected item. Declaration public event Action<ListViewItemEventArgs> OpenSelectedItem Event Type Type Description System.Action < ListViewItemEventArgs > | Improve this Doc View Source SelectedItemChanged This event is raised when the selected item in the ComboBox has changed. Declaration public event Action<ListViewItemEventArgs> SelectedItemChanged Event Type Type Description System.Action < ListViewItemEventArgs > Implements System.IDisposable System.ComponentModel.ISupportInitializeNotification System.ComponentModel.ISupportInitialize"
  },
  "api/Terminal.Gui/Terminal.Gui.Command.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.Command.html",
    "title": "Enum Command",
    "keywords": "Enum Command Actions which can be performed by the application or bound to keys in a View control. Namespace : Terminal.Gui Assembly : Terminal.Gui.dll Syntax public enum Command Fields Name Description Accept Accepts the current state (e.g. selection, button press etc) BackTab Inserts a shift tab. BottomEnd Moves to bottom end. BottomEndExtend Extends the selection to the bottom end. Cancel Cancels any current temporary states on the control e.g. expanding a combo list Collapse Collapses a list or item (with subitems) CollapseAll Recursively collapses a list items of their children (if any) Copy Copies the current selection. Cut Cuts the current selection. CutToEndLine Deletes and copies to the clipboard the characters from the current position to the end of the line. CutToStartLine Deletes and copies to the clipboard the characters from the current position to the start of the line. DeleteAll Deletes all objects in the control. DeleteCharLeft Deletes the character on the left. DeleteCharRight Deletes the character on the right. DisableOverwrite Disables overwrite mode ( EnableOverwrite ) EnableOverwrite Enables overwrite mode such that newly typed text overwrites the text that is already there (typically associated with the Insert key). EndOfLine Moves the cursor to the end of line. EndOfLineExtend Extends the selection to the end of line. EndOfPage Moves the cursor to the bottom of page. Expand Expands a list or item (with subitems) ExpandAll Recursively Expands all child items and their child items (if any) KillWordBackwards Deletes the characters backwards. KillWordForwards Deletes the characters forwards. Left Moves the selection left one by the minimum increment supported by the view e.g. single character, cell, item etc. LeftExtend Extends the selection left one by the minimum increment supported by the view e.g. single character, cell, item etc. LeftHome Moves to the left begin. LeftHomeExtend Extends the selection to the left begin. LineDown Moves the caret down one line. LineDownExtend Extends the selection down one line. LineDownToLastBranch Moves the caret down to the last child node of the branch that holds the current selection LineUp Moves the caret up one line. LineUpExtend Extends the selection up one line. LineUpToFirstBranch Moves the caret up to the first child node of the branch that holds the current selection NewLine Inserts a new line. NextView Moves focus to the next view. NextViewOrTop Moves focus to the next view or toplevel (case of Mdi). OpenSelectedItem Open selected item. PageDown Move the page down. PageDownExtend Move the page down increase selection area to cover revealed objects/characters. PageLeft Moves to the left page. PageRight Moves to the right page. PageUp Move the page up. PageUpExtend Move the page up increase selection area to cover revealed objects/characters. Paste Pastes the current selection. PreviousView Moves focuss to the previous view. PreviousViewOrTop Moves focus to the next previous or toplevel (case of Mdi). QuitToplevel Quit a toplevel. Redo Redo changes. Refresh Refresh the application. Right Moves the selection right one by the minimum increment supported by the view e.g. single character, cell, item etc. RightEnd Moves to the right end. RightEndExtend Extends the selection to the right end. RightExtend Extends the selection right one by the minimum increment supported by the view e.g. single character, cell, item etc. ScrollDown Scrolls down one line (without changing the selection). ScrollLeft Scrolls one character to the left ScrollRight Scrolls one character to the right. ScrollUp Scrolls up one line (without changing the selection). SelectAll Selects all objects in the control. StartOfLine Moves the cursor to the start of line. StartOfLineExtend Extends the selection to the start of line. StartOfPage Moves the cursor to the top of page. Suspend Suspend a application (used on Linux). Tab Inserts a tab. ToggleChecked Toggle the checked state. ToggleExpandCollapse Toggles the Expanded or collapsed state of a a list or item (with subitems) ToggleExtend Toggles the extended selection. ToggleOverwrite Toggles overwrite mode such that newly typed text overwrites the text that is already there (typically associated with the Insert key). TopHome Moves to top begin. TopHomeExtend Extends the selection to the top begin. Undo Undo changes. UnixEmulation Unix emulation WordLeft Moves the caret to the start of the previous word. WordLeftExtend Extends the selection to the start of the previous word. WordRight Moves the caret to the start of the next word. WordRightExtend Extends the selection to the start of the next word."
  },
  "api/Terminal.Gui/Terminal.Gui.ConsoleDriver.DiagnosticFlags.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.ConsoleDriver.DiagnosticFlags.html",
    "title": "Enum ConsoleDriver.DiagnosticFlags",
    "keywords": "Enum ConsoleDriver.DiagnosticFlags Enables diagnostic functions Namespace : Terminal.Gui Assembly : Terminal.Gui.dll Syntax [Flags] public enum DiagnosticFlags : uint Fields Name Description FramePadding When Enabled, DrawWindowFrame(Rect, Int32, Int32, Int32, Int32, Boolean, Boolean, Border) will use 'L', 'R', 'T', and 'B' for padding instead of ' '. FrameRuler When enabled, DrawWindowFrame(Rect, Int32, Int32, Int32, Int32, Boolean, Boolean, Border) will draw a ruler in the frame for any side with a padding value greater than 0. Off All diagnostics off"
  },
  "api/Terminal.Gui/Terminal.Gui.ConsoleDriver.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.ConsoleDriver.html",
    "title": "Class ConsoleDriver",
    "keywords": "Class ConsoleDriver ConsoleDriver is an abstract class that defines the requirements for a console driver. There are currently three implementations: Terminal.Gui.CursesDriver (for Unix and Mac), Terminal.Gui.WindowsDriver , and Terminal.Gui.NetDriver that uses the .NET Console API. Inheritance System.Object ConsoleDriver FakeDriver Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Terminal.Gui Assembly : Terminal.Gui.dll Syntax public abstract class ConsoleDriver Fields | Improve this Doc View Source BlocksMeterSegment Blocks Segment indicator for meter views (e.g. ProgressBar . Declaration public Rune BlocksMeterSegment Field Value Type Description System.Rune | Improve this Doc View Source BottomTee The bottom tee. Declaration public Rune BottomTee Field Value Type Description System.Rune | Improve this Doc View Source Checked Checkmark. Declaration public Rune Checked Field Value Type Description System.Rune | Improve this Doc View Source ContinuousMeterSegment Continuous Segment indicator for meter views (e.g. ProgressBar . Declaration public Rune ContinuousMeterSegment Field Value Type Description System.Rune | Improve this Doc View Source Diamond Diamond character Declaration public Rune Diamond Field Value Type Description System.Rune | Improve this Doc View Source DownArrow Down Arrow. Declaration public Rune DownArrow Field Value Type Description System.Rune | Improve this Doc View Source HDLine Horizontal double line character. Declaration public Rune HDLine Field Value Type Description System.Rune | Improve this Doc View Source HLine Horizontal line character. Declaration public Rune HLine Field Value Type Description System.Rune | Improve this Doc View Source HRLine Horizontal line character for rounded corners. Declaration public Rune HRLine Field Value Type Description System.Rune | Improve this Doc View Source LeftArrow Left Arrow. Declaration public Rune LeftArrow Field Value Type Description System.Rune | Improve this Doc View Source LeftBracket Left frame/bracket (e.g. '[' for Button ). Declaration public Rune LeftBracket Field Value Type Description System.Rune | Improve this Doc View Source LeftDefaultIndicator Left indicator for default action (e.g. for Button ). Declaration public Rune LeftDefaultIndicator Field Value Type Description System.Rune | Improve this Doc View Source LeftTee Left tee Declaration public Rune LeftTee Field Value Type Description System.Rune | Improve this Doc View Source LLCorner Lower left corner Declaration public Rune LLCorner Field Value Type Description System.Rune | Improve this Doc View Source LLDCorner Lower left double corner Declaration public Rune LLDCorner Field Value Type Description System.Rune | Improve this Doc View Source LLRCorner Lower left rounded corner Declaration public Rune LLRCorner Field Value Type Description System.Rune | Improve this Doc View Source LRCorner Lower right corner Declaration public Rune LRCorner Field Value Type Description System.Rune | Improve this Doc View Source LRDCorner Lower right double corner Declaration public Rune LRDCorner Field Value Type Description System.Rune | Improve this Doc View Source LRRCorner Lower right rounded corner Declaration public Rune LRRCorner Field Value Type Description System.Rune | Improve this Doc View Source RightArrow Right Arrow. Declaration public Rune RightArrow Field Value Type Description System.Rune | Improve this Doc View Source RightBracket Right frame/bracket (e.g. ']' for Button ). Declaration public Rune RightBracket Field Value Type Description System.Rune | Improve this Doc View Source RightDefaultIndicator Right indicator for default action (e.g. for Button ). Declaration public Rune RightDefaultIndicator Field Value Type Description System.Rune | Improve this Doc View Source RightTee Right tee Declaration public Rune RightTee Field Value Type Description System.Rune | Improve this Doc View Source Selected Selected mark. Declaration public Rune Selected Field Value Type Description System.Rune | Improve this Doc View Source Stipple Stipple pattern Declaration public Rune Stipple Field Value Type Description System.Rune | Improve this Doc View Source TerminalResized The handler fired when the terminal is resized. Declaration protected Action TerminalResized Field Value Type Description System.Action | Improve this Doc View Source TopTee Top tee Declaration public Rune TopTee Field Value Type Description System.Rune | Improve this Doc View Source ULCorner Upper left corner Declaration public Rune ULCorner Field Value Type Description System.Rune | Improve this Doc View Source ULDCorner Upper left double corner Declaration public Rune ULDCorner Field Value Type Description System.Rune | Improve this Doc View Source ULRCorner Upper left rounded corner Declaration public Rune ULRCorner Field Value Type Description System.Rune | Improve this Doc View Source UnChecked Un-checked checkmark. Declaration public Rune UnChecked Field Value Type Description System.Rune | Improve this Doc View Source UnSelected Un-selected selected mark. Declaration public Rune UnSelected Field Value Type Description System.Rune | Improve this Doc View Source UpArrow Up Arrow. Declaration public Rune UpArrow Field Value Type Description System.Rune | Improve this Doc View Source URCorner Upper right corner Declaration public Rune URCorner Field Value Type Description System.Rune | Improve this Doc View Source URDCorner Upper right double corner Declaration public Rune URDCorner Field Value Type Description System.Rune | Improve this Doc View Source URRCorner Upper right rounded corner Declaration public Rune URRCorner Field Value Type Description System.Rune | Improve this Doc View Source VDLine Vertical double line character. Declaration public Rune VDLine Field Value Type Description System.Rune | Improve this Doc View Source VLine Vertical line character. Declaration public Rune VLine Field Value Type Description System.Rune | Improve this Doc View Source VRLine Vertical line character for rounded corners. Declaration public Rune VRLine Field Value Type Description System.Rune Properties | Improve this Doc View Source Clip Controls the current clipping region that AddRune/AddStr is subject to. Declaration public Rect Clip { get; set; } Property Value Type Description Rect The clip. | Improve this Doc View Source Clipboard Get the operation system clipboard. Declaration public abstract IClipboard Clipboard { get; } Property Value Type Description IClipboard | Improve this Doc View Source Cols The current number of columns in the terminal. Declaration public abstract int Cols { get; } Property Value Type Description System.Int32 | Improve this Doc View Source Contents The format is rows, columns and 3 values on the last column: Rune, Attribute and Dirty Flag Declaration public virtual int[,, ] Contents { get; } Property Value Type Description System.Int32 [,,] | Improve this Doc View Source Diagnostics Set flags to enable/disable ConsoleDriver diagnostics. Declaration public static ConsoleDriver.DiagnosticFlags Diagnostics { get; set; } Property Value Type Description ConsoleDriver.DiagnosticFlags | Improve this Doc View Source HeightAsBuffer If false height is measured by the window height and thus no scrolling. If true then height is measured by the buffer height, enabling scrolling. Declaration public abstract bool HeightAsBuffer { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source Left The current left in the terminal. Declaration public abstract int Left { get; } Property Value Type Description System.Int32 | Improve this Doc View Source Rows The current number of rows in the terminal. Declaration public abstract int Rows { get; } Property Value Type Description System.Int32 | Improve this Doc View Source Top The current top in the terminal. Declaration public abstract int Top { get; } Property Value Type Description System.Int32 Methods | Improve this Doc View Source AddRune(Rune) Adds the specified rune to the display at the current cursor position Declaration public abstract void AddRune(Rune rune) Parameters Type Name Description System.Rune rune Rune to add. | Improve this Doc View Source AddStr(ustring) Adds the specified Declaration public abstract void AddStr(ustring str) Parameters Type Name Description NStack.ustring str String. | Improve this Doc View Source CookMouse() Enables the cooked event processing from the mouse driver Declaration public abstract void CookMouse() | Improve this Doc View Source CreateColors(Boolean) Create all Colors with the ColorScheme for the console driver. Declaration public void CreateColors(bool hasColors = true) Parameters Type Name Description System.Boolean hasColors Flag indicating if colors are supported. | Improve this Doc View Source DrawFrame(Rect, Int32, Boolean) Draws a frame on the specified region with the specified padding around the frame. Declaration public virtual void DrawFrame(Rect region, int padding, bool fill) Parameters Type Name Description Rect region Screen relative region where the frame will be drawn. System.Int32 padding Padding to add on the sides. System.Boolean fill If set to true it will clear the contents with the current color, otherwise the contents will be left untouched. | Improve this Doc View Source DrawWindowFrame(Rect, Int32, Int32, Int32, Int32, Boolean, Boolean, Border) Draws a frame for a window with padding and an optional visible border inside the padding. Declaration public virtual void DrawWindowFrame(Rect region, int paddingLeft = 0, int paddingTop = 0, int paddingRight = 0, int paddingBottom = 0, bool border = true, bool fill = false, Border borderContent = null) Parameters Type Name Description Rect region Screen relative region where the frame will be drawn. System.Int32 paddingLeft Number of columns to pad on the left (if 0 the border will not appear on the left). System.Int32 paddingTop Number of rows to pad on the top (if 0 the border and title will not appear on the top). System.Int32 paddingRight Number of columns to pad on the right (if 0 the border will not appear on the right). System.Int32 paddingBottom Number of rows to pad on the bottom (if 0 the border will not appear on the bottom). System.Boolean border If set to true and any padding dimension is > 0 the border will be drawn. System.Boolean fill If set to true it will clear the content area (the area inside the padding) with the current color, otherwise the content area will be left untouched. Border borderContent The Border to be used if defined. | Improve this Doc View Source DrawWindowTitle(Rect, ustring, Int32, Int32, Int32, Int32, TextAlignment) Draws the title for a Window-style view incorporating padding. Declaration public virtual void DrawWindowTitle(Rect region, ustring title, int paddingLeft, int paddingTop, int paddingRight, int paddingBottom, TextAlignment textAlignment = TextAlignment.Left) Parameters Type Name Description Rect region Screen relative region where the frame will be drawn. NStack.ustring title The title for the window. The title will only be drawn if title is not null or empty and paddingTop is greater than 0. System.Int32 paddingLeft Number of columns to pad on the left (if 0 the border will not appear on the left). System.Int32 paddingTop Number of rows to pad on the top (if 0 the border and title will not appear on the top). System.Int32 paddingRight Number of columns to pad on the right (if 0 the border will not appear on the right). System.Int32 paddingBottom Number of rows to pad on the bottom (if 0 the border will not appear on the bottom). TextAlignment textAlignment Not yet implemented. | Improve this Doc View Source End() Ends the execution of the console driver. Declaration public abstract void End() | Improve this Doc View Source EnsureCursorVisibility() Ensure the cursor visibility Declaration public abstract bool EnsureCursorVisibility() Returns Type Description System.Boolean true upon success | Improve this Doc View Source GetAttribute() Gets the current Attribute . Declaration public abstract Attribute GetAttribute() Returns Type Description Attribute The current attribute. | Improve this Doc View Source GetColors(Int32, out Color, out Color) Gets the foreground and background colors based on the value. Declaration public abstract bool GetColors(int value, out Color foreground, out Color background) Parameters Type Name Description System.Int32 value The value. Color foreground The foreground. Color background The background. Returns Type Description System.Boolean | Improve this Doc View Source GetCursorVisibility(out CursorVisibility) Retreive the cursor caret visibility Declaration public abstract bool GetCursorVisibility(out CursorVisibility visibility) Parameters Type Name Description CursorVisibility visibility The current CursorVisibility Returns Type Description System.Boolean true upon success | Improve this Doc View Source Init(Action) Initializes the driver Declaration public abstract void Init(Action terminalResized) Parameters Type Name Description System.Action terminalResized Method to invoke when the terminal is resized. | Improve this Doc View Source IsValidContent(Int32, Int32, Rect) Ensures that the column and line are in a valid range from the size of the driver. Declaration public bool IsValidContent(int col, int row, Rect clip) Parameters Type Name Description System.Int32 col The column. System.Int32 row The row. Rect clip The clip. Returns Type Description System.Boolean true if it's a valid range, false otherwise. | Improve this Doc View Source MakeAttribute(Color, Color) Make the attribute for the foreground and background colors. Declaration public abstract Attribute MakeAttribute(Color fore, Color back) Parameters Type Name Description Color fore Foreground. Color back Background. Returns Type Description Attribute | Improve this Doc View Source MakeColor(Color, Color) Make the Colors for the ColorScheme . Declaration public abstract Attribute MakeColor(Color foreground, Color background) Parameters Type Name Description Color foreground The foreground color. Color background The background color. Returns Type Description Attribute The attribute for the foreground and background colors. | Improve this Doc View Source MakePrintable(Rune) Ensures a Rune is not a control character and can be displayed by translating characters below 0x20 to equivalent, printable, Unicode chars. Declaration public static Rune MakePrintable(Rune c) Parameters Type Name Description System.Rune c Rune to translate Returns Type Description System.Rune | Improve this Doc View Source Move(Int32, Int32) Moves the cursor to the specified column and row. Declaration public abstract void Move(int col, int row) Parameters Type Name Description System.Int32 col Column to move the cursor to. System.Int32 row Row to move the cursor to. | Improve this Doc View Source PrepareToRun(MainLoop, Action<KeyEvent>, Action<KeyEvent>, Action<KeyEvent>, Action<MouseEvent>) Prepare the driver and set the key and mouse events handlers. Declaration public abstract void PrepareToRun(MainLoop mainLoop, Action<KeyEvent> keyHandler, Action<KeyEvent> keyDownHandler, Action<KeyEvent> keyUpHandler, Action<MouseEvent> mouseHandler) Parameters Type Name Description MainLoop mainLoop The main loop. System.Action < KeyEvent > keyHandler The handler for ProcessKey System.Action < KeyEvent > keyDownHandler The handler for key down events System.Action < KeyEvent > keyUpHandler The handler for key up events System.Action < MouseEvent > mouseHandler The handler for mouse events | Improve this Doc View Source Refresh() Updates the screen to reflect all the changes that have been done to the display buffer Declaration public abstract void Refresh() | Improve this Doc View Source ResizeScreen() Resizes the clip area when the screen is resized. Declaration public abstract void ResizeScreen() | Improve this Doc View Source SendKeys(Char, ConsoleKey, Boolean, Boolean, Boolean) Allows sending keys without typing on a keyboard. Declaration public abstract void SendKeys(char keyChar, ConsoleKey key, bool shift, bool alt, bool control) Parameters Type Name Description System.Char keyChar The character key. System.ConsoleKey key The key. System.Boolean shift If shift key is sending. System.Boolean alt If alt key is sending. System.Boolean control If control key is sending. | Improve this Doc View Source SetAttribute(Attribute) Selects the specified attribute as the attribute to use for future calls to AddRune, AddString. Declaration public abstract void SetAttribute(Attribute c) Parameters Type Name Description Attribute c C. | Improve this Doc View Source SetColors(ConsoleColor, ConsoleColor) Set Colors from limit sets of colors. Declaration public abstract void SetColors(ConsoleColor foreground, ConsoleColor background) Parameters Type Name Description System.ConsoleColor foreground Foreground. System.ConsoleColor background Background. | Improve this Doc View Source SetColors(Int16, Int16) Advanced uses - set colors to any pre-set pairs, you would need to init_color that independently with the R, G, B values. Declaration public abstract void SetColors(short foregroundColorId, short backgroundColorId) Parameters Type Name Description System.Int16 foregroundColorId Foreground color identifier. System.Int16 backgroundColorId Background color identifier. | Improve this Doc View Source SetCursorVisibility(CursorVisibility) Change the cursor caret visibility Declaration public abstract bool SetCursorVisibility(CursorVisibility visibility) Parameters Type Name Description CursorVisibility visibility The wished CursorVisibility Returns Type Description System.Boolean true upon success | Improve this Doc View Source SetTerminalResized(Action) Set the handler when the terminal is resized. Declaration public void SetTerminalResized(Action terminalResized) Parameters Type Name Description System.Action terminalResized | Improve this Doc View Source StartReportingMouseMoves() Start of mouse moves. Declaration public abstract void StartReportingMouseMoves() | Improve this Doc View Source StopReportingMouseMoves() Stop reporting mouses moves. Declaration public abstract void StopReportingMouseMoves() | Improve this Doc View Source Suspend() Suspend the application, typically needs to save the state, suspend the app and upon return, reset the console driver. Declaration public abstract void Suspend() | Improve this Doc View Source UncookMouse() Disables the cooked event processing from the mouse driver. At startup, it is assumed mouse events are cooked. Declaration public abstract void UncookMouse() | Improve this Doc View Source UpdateCursor() Updates the location of the cursor position Declaration public abstract void UpdateCursor() | Improve this Doc View Source UpdateOffScreen() Reset and recreate the contents and the driver buffer. Declaration public abstract void UpdateOffScreen() | Improve this Doc View Source UpdateScreen() Redraws the physical screen with the contents that have been queued up via any of the printing commands. Declaration public abstract void UpdateScreen()"
  },
  "api/Terminal.Gui/Terminal.Gui.ContextMenu.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.ContextMenu.html",
    "title": "Class ContextMenu",
    "keywords": "Class ContextMenu A context menu window derived from MenuBar containing menu items which can be opened in any position. Inheritance System.Object ContextMenu Implements System.IDisposable Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Terminal.Gui Assembly : Terminal.Gui.dll Syntax public sealed class ContextMenu : IDisposable Constructors | Improve this Doc View Source ContextMenu() Initialize a context menu with empty menu items. Declaration public ContextMenu() | Improve this Doc View Source ContextMenu(Int32, Int32, MenuBarItem) Initialize a context menu with menu items. Declaration public ContextMenu(int x, int y, MenuBarItem menuItems) Parameters Type Name Description System.Int32 x The left position. System.Int32 y The top position. MenuBarItem menuItems The menu items. | Improve this Doc View Source ContextMenu(View, MenuBarItem) Initialize a context menu with menu items from a host View . Declaration public ContextMenu(View host, MenuBarItem menuItems) Parameters Type Name Description View host The host view. MenuBarItem menuItems The menu items. Properties | Improve this Doc View Source ForceMinimumPosToZero Gets or sets whether forces the minimum position to zero if the left or right position are negative. Declaration public bool ForceMinimumPosToZero { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source Host The host View which position will be used, otherwise if it's null the container will be used. Declaration public View Host { get; set; } Property Value Type Description View | Improve this Doc View Source IsShow Gets information whether menu is showing or not. Declaration public static bool IsShow { get; } Property Value Type Description System.Boolean | Improve this Doc View Source Key The Key used to activate the context menu by keyboard. Declaration public Key Key { get; set; } Property Value Type Description Key | Improve this Doc View Source MenuBar Gets the MenuBar that is hosting this context menu. Declaration public MenuBar MenuBar { get; } Property Value Type Description MenuBar | Improve this Doc View Source MenuItems Gets or sets the menu items for this context menu. Declaration public MenuBarItem MenuItems { get; set; } Property Value Type Description MenuBarItem | Improve this Doc View Source MouseFlags The MouseFlags used to activate the context menu by mouse. Declaration public MouseFlags MouseFlags { get; set; } Property Value Type Description MouseFlags | Improve this Doc View Source Position Gets or set the menu position. Declaration public Point Position { get; set; } Property Value Type Description Point | Improve this Doc View Source UseSubMenusSingleFrame Gets or sets if the sub-menus must be displayed in a single or multiple frames. Declaration public bool UseSubMenusSingleFrame { get; set; } Property Value Type Description System.Boolean Methods | Improve this Doc View Source Dispose() Disposes the all the context menu objects instances. Declaration public void Dispose() | Improve this Doc View Source Hide() Close the MenuItems menu items. Declaration public void Hide() | Improve this Doc View Source Show() Open the MenuItems menu items. Declaration public void Show() Events | Improve this Doc View Source KeyChanged Event invoked when the Key is changed. Declaration public event Action<Key> KeyChanged Event Type Type Description System.Action < Key > | Improve this Doc View Source MouseFlagsChanged Event invoked when the MouseFlags is changed. Declaration public event Action<MouseFlags> MouseFlagsChanged Event Type Type Description System.Action < MouseFlags > Implements System.IDisposable"
  },
  "api/Terminal.Gui/Terminal.Gui.CursorVisibility.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.CursorVisibility.html",
    "title": "Enum CursorVisibility",
    "keywords": "Enum CursorVisibility Cursors Visibility that are displayed Namespace : Terminal.Gui Assembly : Terminal.Gui.dll Syntax public enum CursorVisibility Fields Name Description Box Cursor caret is displayed as a blinking block ▉ BoxFix Cursor caret is displayed a block ▉ Default Cursor caret has default Invisible Cursor caret is hidden Underline Cursor caret is normally shown as a blinking underline bar _ UnderlineFix Cursor caret is normally shown as a underline bar _ Vertical Cursor caret is displayed a blinking vertical bar | VerticalFix Cursor caret is displayed a blinking vertical bar |"
  },
  "api/Terminal.Gui/Terminal.Gui.DateField.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.DateField.html",
    "title": "Class DateField",
    "keywords": "Class DateField Simple Date editing View Inheritance System.Object Responder View TextField DateField Implements System.IDisposable System.ComponentModel.ISupportInitializeNotification System.ComponentModel.ISupportInitialize Remarks The DateField View provides date editing functionality with mouse support. Inherited Members TextField.Used TextField.ReadOnly TextField.TextChanging TextField.TextChanged TextField.OnLeave(View) TextField.Autocomplete TextField.Frame TextField.Text TextField.Secret TextField.ScrollOffset TextField.IsDirty TextField.HasHistoryChanges TextField.ContextMenu TextField.PositionCursor() TextField.Redraw(Rect) TextField.GetNormalColor() TextField.CanFocus TextField.KillWordBackwards() TextField.KillWordForwards() TextField.SelectAll() TextField.DeleteAll() TextField.SelectedStart TextField.SelectedLength TextField.SelectedText TextField.ClearAllSelection() TextField.Copy() TextField.Cut() TextField.Paste() TextField.OnTextChanging(ustring) TextField.DesiredCursorVisibility TextField.OnEnter(View) TextField.InsertText(String, Boolean) TextField.ClearHistoryChanges() View.Added View.Removed View.Enter View.Leave View.MouseEnter View.MouseLeave View.MouseClick View.CanFocusChanged View.EnabledChanged View.VisibleChanged View.HotKeyChanged View.HotKey View.HotKeySpecifier View.Shortcut View.ShortcutTag View.ShortcutAction View.Data View.Driver View.Subviews View.TabIndexes View.TabIndex View.TabStop View.Id View.IsCurrentTop View.WantMousePositionReports View.WantContinuousButtonPressed View.LayoutStyle View.Bounds View.X View.Y View.Width View.Height View.ForceValidatePosDim View.GetMinWidthHeight(Size) View.SetMinWidthHeight() View.TextFormatter View.SuperView View.UpdateTextFormatterText() View.ProcessResizeView() View.SetNeedsDisplay() View.ClearLayoutNeeded() View.SetNeedsDisplay(Rect) View.SetChildNeedsDisplay() View.Add(View) View.Add(View[]) View.RemoveAll() View.Remove(View) View.BringSubviewToFront(View) View.SendSubviewToBack(View) View.SendSubviewBackwards(View) View.BringSubviewForward(View) View.Clear() View.Clear(Rect) View.ScreenToView(Int32, Int32) View.ClipToBounds() View.SetClip(Rect) View.DrawFrame(Rect, Int32, Boolean) View.DrawHotString(ustring, Attribute, Attribute) View.DrawHotString(ustring, Boolean, ColorScheme) View.Move(Int32, Int32, Boolean) View.HasFocus View.OnAdded(View) View.OnRemoved(View) View.Focused View.MostFocused View.ColorScheme View.AddRune(Int32, Int32, Rune) View.ClearNeedsDisplay() View.DrawContent View.OnDrawContent(Rect) View.DrawContentComplete View.OnDrawContentComplete(Rect) View.SetFocus() View.KeyPress View.InvokeKeybindings(KeyEvent) View.AddKeyBinding(Key, Command[]) View.ReplaceKeyBinding(Key, Key) View.ContainsKeyBinding(Key) View.ClearKeybindings() View.ClearKeybinding(Key) View.ClearKeybinding(Command[]) View.AddCommand(Command, Func<Nullable<Boolean>>) View.GetSupportedCommands() View.GetKeyFromCommand(Command[]) View.ProcessHotKey(KeyEvent) View.ProcessColdKey(KeyEvent) View.KeyDown View.OnKeyDown(KeyEvent) View.KeyUp View.OnKeyUp(KeyEvent) View.EnsureFocus() View.FocusFirst() View.FocusLast() View.FocusPrev() View.FocusNext() View.LayoutStarted View.LayoutComplete View.Initialized View.LayoutSubviews() View.AutoSize View.PreserveTrailingSpaces View.TextAlignment View.VerticalTextAlignment View.TextDirection View.IsInitialized View.IsAdded View.Enabled View.Visible View.Border View.ToString() View.GetAutoSize() View.GetHotKeySpecifierLength(Boolean) View.GetTextFormatterBoundsSize() View.GetBoundsTextFormatterSize() View.OnMouseEnter(MouseEvent) View.OnMouseLeave(MouseEvent) View.OnMouseEvent(MouseEvent) View.OnMouseClick(View.MouseEventArgs) View.OnCanFocusChanged() View.OnEnabledChanged() View.OnVisibleChanged() View.Dispose(Boolean) View.BeginInit() View.EndInit() View.SetWidth(Int32, Int32) View.SetHeight(Int32, Int32) View.GetCurrentWidth(Int32) View.GetCurrentHeight(Int32) View.GetTopSuperView() Responder.Dispose() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Terminal.Gui Assembly : Terminal.Gui.dll Syntax public class DateField : TextField, IDisposable, ISupportInitializeNotification, ISupportInitialize Constructors | Improve this Doc View Source DateField() Initializes a new instance of DateField using Computed layout. Declaration public DateField() | Improve this Doc View Source DateField(DateTime) Initializes a new instance of DateField using Computed layout. Declaration public DateField(DateTime date) Parameters Type Name Description System.DateTime date | Improve this Doc View Source DateField(Int32, Int32, DateTime, Boolean) Initializes a new instance of DateField using Absolute layout. Declaration public DateField(int x, int y, DateTime date, bool isShort = false) Parameters Type Name Description System.Int32 x The x coordinate. System.Int32 y The y coordinate. System.DateTime date Initial date contents. System.Boolean isShort If true, shows only two digits for the year. Properties | Improve this Doc View Source CursorPosition Declaration public override int CursorPosition { get; set; } Property Value Type Description System.Int32 Overrides TextField.CursorPosition | Improve this Doc View Source Date Gets or sets the date of the DateField . Declaration public DateTime Date { get; set; } Property Value Type Description System.DateTime | Improve this Doc View Source IsShortFormat Get or set the date format for the widget. Declaration public bool IsShortFormat { get; set; } Property Value Type Description System.Boolean Methods | Improve this Doc View Source DeleteCharLeft(Boolean) Declaration public override void DeleteCharLeft(bool useOldCursorPos = true) Parameters Type Name Description System.Boolean useOldCursorPos Overrides TextField.DeleteCharLeft(Boolean) | Improve this Doc View Source DeleteCharRight() Declaration public override void DeleteCharRight() Overrides TextField.DeleteCharRight() | Improve this Doc View Source MouseEvent(MouseEvent) Declaration public override bool MouseEvent(MouseEvent ev) Parameters Type Name Description MouseEvent ev Returns Type Description System.Boolean Overrides TextField.MouseEvent(MouseEvent) | Improve this Doc View Source OnDateChanged(DateTimeEventArgs<DateTime>) Event firing method for the DateChanged event. Declaration public virtual void OnDateChanged(DateTimeEventArgs<DateTime> args) Parameters Type Name Description DateTimeEventArgs < System.DateTime > args Event arguments | Improve this Doc View Source ProcessKey(KeyEvent) Declaration public override bool ProcessKey(KeyEvent kb) Parameters Type Name Description KeyEvent kb Returns Type Description System.Boolean Overrides TextField.ProcessKey(KeyEvent) Events | Improve this Doc View Source DateChanged DateChanged event, raised when the Date property has changed. Declaration public event Action<DateTimeEventArgs<DateTime>> DateChanged Event Type Type Description System.Action < DateTimeEventArgs < System.DateTime >> Implements System.IDisposable System.ComponentModel.ISupportInitializeNotification System.ComponentModel.ISupportInitialize"
  },
  "api/Terminal.Gui/Terminal.Gui.DateTimeEventArgs-1.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.DateTimeEventArgs-1.html",
    "title": "Class DateTimeEventArgs<T>",
    "keywords": "Class DateTimeEventArgs<T> Defines the event arguments for DateChanged and TimeChanged events. Inheritance System.Object System.EventArgs DateTimeEventArgs<T> Inherited Members System.EventArgs.Empty System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Terminal.Gui Assembly : Terminal.Gui.dll Syntax public class DateTimeEventArgs<T> : EventArgs Type Parameters Name Description T Constructors | Improve this Doc View Source DateTimeEventArgs(T, T, String) Initializes a new instance of DateTimeEventArgs<T> Declaration public DateTimeEventArgs(T oldValue, T newValue, string format) Parameters Type Name Description T oldValue The old DateField or TimeField value. T newValue The new DateField or TimeField value. System.String format The DateField or TimeField format string. Properties | Improve this Doc View Source Format The DateField or TimeField format. Declaration public string Format { get; } Property Value Type Description System.String | Improve this Doc View Source NewValue The new DateField or TimeField value. Declaration public T NewValue { get; } Property Value Type Description T | Improve this Doc View Source OldValue The old DateField or TimeField value. Declaration public T OldValue { get; } Property Value Type Description T"
  },
  "api/Terminal.Gui/Terminal.Gui.Dialog.ButtonAlignments.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.Dialog.ButtonAlignments.html",
    "title": "Enum Dialog.ButtonAlignments",
    "keywords": "Enum Dialog.ButtonAlignments Determines the horizontal alignment of the Dialog buttons. Namespace : Terminal.Gui Assembly : Terminal.Gui.dll Syntax public enum ButtonAlignments Fields Name Description Center Center-aligns the buttons (the default). Justify Justifies the buttons Left Left-aligns the buttons Right Right-aligns the buttons"
  },
  "api/Terminal.Gui/Terminal.Gui.Dialog.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.Dialog.html",
    "title": "Class Dialog",
    "keywords": "Class Dialog The Dialog View is a Window that by default is centered and contains one or more Button s. It defaults to the Dialog color scheme and has a 1 cell padding around the edges. Inheritance System.Object Responder View Toplevel Window Dialog FileDialog Wizard Implements System.IDisposable System.ComponentModel.ISupportInitializeNotification System.ComponentModel.ISupportInitialize Remarks To run the Dialog modally, create the Dialog , and pass it to Run(Func<Exception, Boolean>) . This will execute the dialog until it terminates via the [ESC] or [CTRL-Q] key, or when one of the views or buttons added to the dialog calls RequestStop(Toplevel) . Inherited Members Window.Title Window.Border Window.Add(View) Window.Remove(View) Window.RemoveAll() Window.Redraw(Rect) Window.OnCanFocusChanged() Window.Text Window.TextAlignment Window.OnTitleChanging(ustring, ustring) Window.TitleChanging Window.OnTitleChanged(ustring, ustring) Window.TitleChanged Toplevel.Running Toplevel.Loaded Toplevel.Ready Toplevel.Unloaded Toplevel.Activate Toplevel.Deactivate Toplevel.ChildClosed Toplevel.AllChildClosed Toplevel.Closing Toplevel.Closed Toplevel.ChildLoaded Toplevel.ChildUnloaded Toplevel.Resized Toplevel.OnLoaded() Toplevel.AlternateForwardKeyChanged Toplevel.OnAlternateForwardKeyChanged(Key) Toplevel.AlternateBackwardKeyChanged Toplevel.OnAlternateBackwardKeyChanged(Key) Toplevel.QuitKeyChanged Toplevel.OnQuitKeyChanged(Key) Toplevel.Create() Toplevel.CanFocus Toplevel.Modal Toplevel.MenuBar Toplevel.StatusBar Toplevel.IsMdiContainer Toplevel.IsMdiChild Toplevel.OnKeyDown(KeyEvent) Toplevel.OnKeyUp(KeyEvent) Toplevel.ProcessColdKey(KeyEvent) Toplevel.PositionToplevel(Toplevel) Toplevel.MouseEvent(MouseEvent) Toplevel.WillPresent() Toplevel.MoveNext() Toplevel.MovePrevious() Toplevel.RequestStop() Toplevel.RequestStop(Toplevel) Toplevel.PositionCursor() Toplevel.GetTopMdiChild(Type, String[]) Toplevel.ShowChild(Toplevel) View.Added View.Removed View.Enter View.Leave View.MouseEnter View.MouseLeave View.MouseClick View.CanFocusChanged View.EnabledChanged View.VisibleChanged View.HotKeyChanged View.HotKey View.HotKeySpecifier View.Shortcut View.ShortcutTag View.ShortcutAction View.Data View.Driver View.Subviews View.TabIndexes View.TabIndex View.TabStop View.Id View.IsCurrentTop View.WantMousePositionReports View.WantContinuousButtonPressed View.Frame View.LayoutStyle View.Bounds View.X View.Y View.Width View.Height View.ForceValidatePosDim View.GetMinWidthHeight(Size) View.SetMinWidthHeight() View.TextFormatter View.SuperView View.UpdateTextFormatterText() View.ProcessResizeView() View.SetNeedsDisplay() View.ClearLayoutNeeded() View.SetNeedsDisplay(Rect) View.SetChildNeedsDisplay() View.Add(View[]) View.BringSubviewToFront(View) View.SendSubviewToBack(View) View.SendSubviewBackwards(View) View.BringSubviewForward(View) View.Clear() View.Clear(Rect) View.ScreenToView(Int32, Int32) View.ClipToBounds() View.SetClip(Rect) View.DrawFrame(Rect, Int32, Boolean) View.DrawHotString(ustring, Attribute, Attribute) View.DrawHotString(ustring, Boolean, ColorScheme) View.Move(Int32, Int32, Boolean) View.HasFocus View.OnAdded(View) View.OnRemoved(View) View.OnEnter(View) View.OnLeave(View) View.Focused View.MostFocused View.ColorScheme View.AddRune(Int32, Int32, Rune) View.ClearNeedsDisplay() View.DrawContent View.OnDrawContent(Rect) View.DrawContentComplete View.OnDrawContentComplete(Rect) View.SetFocus() View.KeyPress View.InvokeKeybindings(KeyEvent) View.AddKeyBinding(Key, Command[]) View.ReplaceKeyBinding(Key, Key) View.ContainsKeyBinding(Key) View.ClearKeybindings() View.ClearKeybinding(Key) View.ClearKeybinding(Command[]) View.AddCommand(Command, Func<Nullable<Boolean>>) View.GetSupportedCommands() View.GetKeyFromCommand(Command[]) View.ProcessHotKey(KeyEvent) View.KeyDown View.KeyUp View.EnsureFocus() View.FocusFirst() View.FocusLast() View.FocusPrev() View.FocusNext() View.LayoutStarted View.LayoutComplete View.Initialized View.LayoutSubviews() View.AutoSize View.PreserveTrailingSpaces View.VerticalTextAlignment View.TextDirection View.IsInitialized View.IsAdded View.Enabled View.Visible View.ToString() View.GetAutoSize() View.GetHotKeySpecifierLength(Boolean) View.GetTextFormatterBoundsSize() View.GetBoundsTextFormatterSize() View.OnMouseEnter(MouseEvent) View.OnMouseLeave(MouseEvent) View.OnMouseEvent(MouseEvent) View.OnMouseClick(View.MouseEventArgs) View.OnEnabledChanged() View.OnVisibleChanged() View.Dispose(Boolean) View.BeginInit() View.EndInit() View.SetWidth(Int32, Int32) View.SetHeight(Int32, Int32) View.GetCurrentWidth(Int32) View.GetCurrentHeight(Int32) View.GetNormalColor() View.GetTopSuperView() Responder.Dispose() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Terminal.Gui Assembly : Terminal.Gui.dll Syntax public class Dialog : Window, IDisposable, ISupportInitializeNotification, ISupportInitialize Constructors | Improve this Doc View Source Dialog() Initializes a new instance of the Dialog class using Computed . Declaration public Dialog() | Improve this Doc View Source Dialog(ustring, Int32, Int32, Button[]) Initializes a new instance of the Dialog class using Computed positioning and an optional set of Button s to display Declaration public Dialog(ustring title, int width, int height, params Button[] buttons) Parameters Type Name Description NStack.ustring title Title for the dialog. System.Int32 width Width for the dialog. System.Int32 height Height for the dialog. Button [] buttons Optional buttons to lay out at the bottom of the dialog. | Improve this Doc View Source Dialog(ustring, Button[]) Initializes a new instance of the Dialog class using Computed positioning and with an optional set of Button s to display Declaration public Dialog(ustring title, params Button[] buttons) Parameters Type Name Description NStack.ustring title Title for the dialog. Button [] buttons Optional buttons to lay out at the bottom of the dialog. Properties | Improve this Doc View Source ButtonAlignment Determines how the Dialog Button s are aligned along the bottom of the dialog. Declaration public Dialog.ButtonAlignments ButtonAlignment { get; set; } Property Value Type Description Dialog.ButtonAlignments Methods | Improve this Doc View Source AddButton(Button) Adds a Button to the Dialog , its layout will be controlled by the Dialog Declaration public void AddButton(Button button) Parameters Type Name Description Button button Button to add. | Improve this Doc View Source ProcessKey(KeyEvent) Declaration public override bool ProcessKey(KeyEvent kb) Parameters Type Name Description KeyEvent kb Returns Type Description System.Boolean Overrides Toplevel.ProcessKey(KeyEvent) Implements System.IDisposable System.ComponentModel.ISupportInitializeNotification System.ComponentModel.ISupportInitialize"
  },
  "api/Terminal.Gui/Terminal.Gui.Dim.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.Dim.html",
    "title": "Class Dim",
    "keywords": "Class Dim Dim properties of a View to control the position. Inheritance System.Object Dim Remarks Use the Dim objects on the Width or Height properties of a View to control the position. These can be used to set the absolute position, when merely assigning an integer value (via the implicit integer to Pos conversion), and they can be combined to produce more useful layouts, like: Pos.Center - 3, which would shift the position of the View 3 characters to the left after centering for example. Inherited Members System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Terminal.Gui Assembly : Terminal.Gui.dll Syntax public class Dim Methods | Improve this Doc View Source Equals(Object) Determines whether the specified object is equal to the current object. Declaration public override bool Equals(object other) Parameters Type Name Description System.Object other The object to compare with the current object. Returns Type Description System.Boolean true if the specified object is equal to the current object; otherwise, false . Overrides System.Object.Equals(System.Object) | Improve this Doc View Source Fill(Int32) Initializes a new instance of the Dim class that fills the dimension, but leaves the specified number of colums for a margin. Declaration public static Dim Fill(int margin = 0) Parameters Type Name Description System.Int32 margin Margin to use. Returns Type Description Dim The Fill dimension. | Improve this Doc View Source Function(Func<Int32>) Creates a \"DimFunc\" from the specified function. Declaration public static Dim Function(Func<int> function) Parameters Type Name Description System.Func < System.Int32 > function The function to be executed. Returns Type Description Dim The Dim returned from the function. | Improve this Doc View Source GetHashCode() Serves as the default hash function. Declaration public override int GetHashCode() Returns Type Description System.Int32 A hash code for the current object. Overrides System.Object.GetHashCode() | Improve this Doc View Source Height(View) Returns a Dim object tracks the Height of the specified View . Declaration public static Dim Height(View view) Parameters Type Name Description View view The view that will be tracked. Returns Type Description Dim The Dim of the other View . | Improve this Doc View Source Percent(Single, Boolean) Creates a percentage Dim object Declaration public static Dim Percent(float n, bool r = false) Parameters Type Name Description System.Single n A value between 0 and 100 representing the percentage. System.Boolean r If true the Percent is computed based on the remaining space after the X/Y anchor positions. If false is computed based on the whole original space. Returns Type Description Dim The percent Dim object. | Improve this Doc View Source Sized(Int32) Creates an Absolute Dim from the specified integer value. Declaration public static Dim Sized(int n) Parameters Type Name Description System.Int32 n The value to convert to the Dim . Returns Type Description Dim The Absolute Dim . | Improve this Doc View Source Width(View) Returns a Dim object tracks the Width of the specified View . Declaration public static Dim Width(View view) Parameters Type Name Description View view The view that will be tracked. Returns Type Description Dim The Dim of the other View . Operators | Improve this Doc View Source Addition(Dim, Dim) Adds a Dim to a Dim , yielding a new Dim . Declaration public static Dim operator +(Dim left, Dim right) Parameters Type Name Description Dim left The first Dim to add. Dim right The second Dim to add. Returns Type Description Dim The Dim that is the sum of the values of left and right . | Improve this Doc View Source Implicit(Int32 to Dim) Creates an Absolute Dim from the specified integer value. Declaration public static implicit operator Dim(int n) Parameters Type Name Description System.Int32 n The value to convert to the pos. Returns Type Description Dim The Absolute Dim . | Improve this Doc View Source Subtraction(Dim, Dim) Subtracts a Dim from a Dim , yielding a new Dim . Declaration public static Dim operator -(Dim left, Dim right) Parameters Type Name Description Dim left The Dim to subtract from (the minuend). Dim right The Dim to subtract (the subtrahend). Returns Type Description Dim The Dim that is the left minus right ."
  },
  "api/Terminal.Gui/Terminal.Gui.DisplayModeLayout.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.DisplayModeLayout.html",
    "title": "Enum DisplayModeLayout",
    "keywords": "Enum DisplayModeLayout Used for choose the display mode of this RadioGroup Namespace : Terminal.Gui Assembly : Terminal.Gui.dll Syntax public enum DisplayModeLayout Fields Name Description Horizontal Horizontal mode display. Vertical Vertical mode display. It's the default."
  },
  "api/Terminal.Gui/Terminal.Gui.FakeConsole.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.FakeConsole.html",
    "title": "Class FakeConsole",
    "keywords": "Class FakeConsole Inheritance System.Object FakeConsole Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Terminal.Gui Assembly : Terminal.Gui.dll Syntax public static class FakeConsole Fields | Improve this Doc View Source HEIGHT Specifies the initial console height. Declaration public const int HEIGHT = 25 Field Value Type Description System.Int32 | Improve this Doc View Source MockKeyPresses Declaration public static Stack<ConsoleKeyInfo> MockKeyPresses Field Value Type Description System.Collections.Generic.Stack < System.ConsoleKeyInfo > | Improve this Doc View Source WIDTH Specifies the initial console width. Declaration public const int WIDTH = 80 Field Value Type Description System.Int32 Properties | Improve this Doc View Source BackgroundColor Declaration public static ConsoleColor BackgroundColor { get; set; } Property Value Type Description System.ConsoleColor | Improve this Doc View Source BufferHeight Declaration public static int BufferHeight { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source BufferWidth Declaration public static int BufferWidth { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source CapsLock Declaration public static bool CapsLock { get; } Property Value Type Description System.Boolean | Improve this Doc View Source CursorLeft Declaration public static int CursorLeft { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source CursorSize Declaration public static int CursorSize { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source CursorTop Declaration public static int CursorTop { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source CursorVisible Declaration public static bool CursorVisible { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source Error Declaration public static TextWriter Error { get; } Property Value Type Description System.IO.TextWriter | Improve this Doc View Source ForegroundColor Declaration public static ConsoleColor ForegroundColor { get; set; } Property Value Type Description System.ConsoleColor | Improve this Doc View Source In Declaration public static TextReader In { get; } Property Value Type Description System.IO.TextReader | Improve this Doc View Source InputEncoding Declaration public static Encoding InputEncoding { get; set; } Property Value Type Description System.Text.Encoding | Improve this Doc View Source IsErrorRedirected Declaration public static bool IsErrorRedirected { get; } Property Value Type Description System.Boolean | Improve this Doc View Source IsInputRedirected Declaration public static bool IsInputRedirected { get; } Property Value Type Description System.Boolean | Improve this Doc View Source IsOutputRedirected Declaration public static bool IsOutputRedirected { get; } Property Value Type Description System.Boolean | Improve this Doc View Source KeyAvailable Declaration public static bool KeyAvailable { get; } Property Value Type Description System.Boolean | Improve this Doc View Source LargestWindowHeight Declaration public static int LargestWindowHeight { get; } Property Value Type Description System.Int32 | Improve this Doc View Source LargestWindowWidth Declaration public static int LargestWindowWidth { get; } Property Value Type Description System.Int32 | Improve this Doc View Source NumberLock Declaration public static bool NumberLock { get; } Property Value Type Description System.Boolean | Improve this Doc View Source Out Declaration public static TextWriter Out { get; } Property Value Type Description System.IO.TextWriter | Improve this Doc View Source OutputEncoding Declaration public static Encoding OutputEncoding { get; set; } Property Value Type Description System.Text.Encoding | Improve this Doc View Source Title Declaration public static string Title { get; set; } Property Value Type Description System.String | Improve this Doc View Source TreatControlCAsInput Declaration public static bool TreatControlCAsInput { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source WindowHeight Declaration public static int WindowHeight { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source WindowLeft Declaration public static int WindowLeft { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source WindowTop Declaration public static int WindowTop { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source WindowWidth Declaration public static int WindowWidth { get; set; } Property Value Type Description System.Int32 Methods | Improve this Doc View Source Beep() Declaration public static void Beep() | Improve this Doc View Source Beep(Int32, Int32) Declaration public static void Beep(int frequency, int duration) Parameters Type Name Description System.Int32 frequency System.Int32 duration | Improve this Doc View Source Clear() Declaration public static void Clear() | Improve this Doc View Source MoveBufferArea(Int32, Int32, Int32, Int32, Int32, Int32) Declaration public static void MoveBufferArea(int sourceLeft, int sourceTop, int sourceWidth, int sourceHeight, int targetLeft, int targetTop) Parameters Type Name Description System.Int32 sourceLeft System.Int32 sourceTop System.Int32 sourceWidth System.Int32 sourceHeight System.Int32 targetLeft System.Int32 targetTop | Improve this Doc View Source MoveBufferArea(Int32, Int32, Int32, Int32, Int32, Int32, Char, ConsoleColor, ConsoleColor) Declaration public static void MoveBufferArea(int sourceLeft, int sourceTop, int sourceWidth, int sourceHeight, int targetLeft, int targetTop, char sourceChar, ConsoleColor sourceForeColor, ConsoleColor sourceBackColor) Parameters Type Name Description System.Int32 sourceLeft System.Int32 sourceTop System.Int32 sourceWidth System.Int32 sourceHeight System.Int32 targetLeft System.Int32 targetTop System.Char sourceChar System.ConsoleColor sourceForeColor System.ConsoleColor sourceBackColor | Improve this Doc View Source OpenStandardError() Declaration public static Stream OpenStandardError() Returns Type Description System.IO.Stream | Improve this Doc View Source OpenStandardError(Int32) Declaration public static Stream OpenStandardError(int bufferSize) Parameters Type Name Description System.Int32 bufferSize Returns Type Description System.IO.Stream | Improve this Doc View Source OpenStandardInput() Declaration public static Stream OpenStandardInput() Returns Type Description System.IO.Stream | Improve this Doc View Source OpenStandardInput(Int32) Declaration public static Stream OpenStandardInput(int bufferSize) Parameters Type Name Description System.Int32 bufferSize Returns Type Description System.IO.Stream | Improve this Doc View Source OpenStandardOutput() Declaration public static Stream OpenStandardOutput() Returns Type Description System.IO.Stream | Improve this Doc View Source OpenStandardOutput(Int32) Declaration public static Stream OpenStandardOutput(int bufferSize) Parameters Type Name Description System.Int32 bufferSize Returns Type Description System.IO.Stream | Improve this Doc View Source Read() Declaration public static int Read() Returns Type Description System.Int32 | Improve this Doc View Source ReadKey() Declaration public static ConsoleKeyInfo ReadKey() Returns Type Description System.ConsoleKeyInfo | Improve this Doc View Source ReadKey(Boolean) Declaration public static ConsoleKeyInfo ReadKey(bool intercept) Parameters Type Name Description System.Boolean intercept Returns Type Description System.ConsoleKeyInfo | Improve this Doc View Source ReadLine() Declaration public static string ReadLine() Returns Type Description System.String | Improve this Doc View Source ResetColor() Declaration public static void ResetColor() | Improve this Doc View Source SetBufferSize(Int32, Int32) Declaration public static void SetBufferSize(int width, int height) Parameters Type Name Description System.Int32 width System.Int32 height | Improve this Doc View Source SetCursorPosition(Int32, Int32) Declaration public static void SetCursorPosition(int left, int top) Parameters Type Name Description System.Int32 left System.Int32 top | Improve this Doc View Source SetError(TextWriter) Declaration public static void SetError(TextWriter newError) Parameters Type Name Description System.IO.TextWriter newError | Improve this Doc View Source SetIn(TextReader) Declaration public static void SetIn(TextReader newIn) Parameters Type Name Description System.IO.TextReader newIn | Improve this Doc View Source SetOut(TextWriter) Declaration public static void SetOut(TextWriter newOut) Parameters Type Name Description System.IO.TextWriter newOut | Improve this Doc View Source SetWindowPosition(Int32, Int32) Declaration public static void SetWindowPosition(int left, int top) Parameters Type Name Description System.Int32 left System.Int32 top | Improve this Doc View Source SetWindowSize(Int32, Int32) Declaration public static void SetWindowSize(int width, int height) Parameters Type Name Description System.Int32 width System.Int32 height | Improve this Doc View Source Write(Boolean) Declaration public static void Write(bool value) Parameters Type Name Description System.Boolean value | Improve this Doc View Source Write(Char) Declaration public static void Write(char value) Parameters Type Name Description System.Char value | Improve this Doc View Source Write(Char[]) Declaration public static void Write(char[] buffer) Parameters Type Name Description System.Char [] buffer | Improve this Doc View Source Write(Char[], Int32, Int32) Declaration public static void Write(char[] buffer, int index, int count) Parameters Type Name Description System.Char [] buffer System.Int32 index System.Int32 count | Improve this Doc View Source Write(Decimal) Declaration public static void Write(decimal value) Parameters Type Name Description System.Decimal value | Improve this Doc View Source Write(Double) Declaration public static void Write(double value) Parameters Type Name Description System.Double value | Improve this Doc View Source Write(Int32) Declaration public static void Write(int value) Parameters Type Name Description System.Int32 value | Improve this Doc View Source Write(Int64) Declaration public static void Write(long value) Parameters Type Name Description System.Int64 value | Improve this Doc View Source Write(Object) Declaration public static void Write(object value) Parameters Type Name Description System.Object value | Improve this Doc View Source Write(Single) Declaration public static void Write(float value) Parameters Type Name Description System.Single value | Improve this Doc View Source Write(String) Declaration public static void Write(string value) Parameters Type Name Description System.String value | Improve this Doc View Source Write(String, Object) Declaration public static void Write(string format, object arg0) Parameters Type Name Description System.String format System.Object arg0 | Improve this Doc View Source Write(String, Object, Object) Declaration public static void Write(string format, object arg0, object arg1) Parameters Type Name Description System.String format System.Object arg0 System.Object arg1 | Improve this Doc View Source Write(String, Object, Object, Object) Declaration public static void Write(string format, object arg0, object arg1, object arg2) Parameters Type Name Description System.String format System.Object arg0 System.Object arg1 System.Object arg2 | Improve this Doc View Source Write(String, Object, Object, Object, Object) Declaration public static void Write(string format, object arg0, object arg1, object arg2, object arg3) Parameters Type Name Description System.String format System.Object arg0 System.Object arg1 System.Object arg2 System.Object arg3 | Improve this Doc View Source Write(String, Object[]) Declaration public static void Write(string format, params object[] arg) Parameters Type Name Description System.String format System.Object [] arg | Improve this Doc View Source Write(UInt32) Declaration public static void Write(uint value) Parameters Type Name Description System.UInt32 value | Improve this Doc View Source Write(UInt64) Declaration public static void Write(ulong value) Parameters Type Name Description System.UInt64 value | Improve this Doc View Source WriteLine() Declaration public static void WriteLine() | Improve this Doc View Source WriteLine(Boolean) Declaration public static void WriteLine(bool value) Parameters Type Name Description System.Boolean value | Improve this Doc View Source WriteLine(Char) Declaration public static void WriteLine(char value) Parameters Type Name Description System.Char value | Improve this Doc View Source WriteLine(Char[]) Declaration public static void WriteLine(char[] buffer) Parameters Type Name Description System.Char [] buffer | Improve this Doc View Source WriteLine(Char[], Int32, Int32) Declaration public static void WriteLine(char[] buffer, int index, int count) Parameters Type Name Description System.Char [] buffer System.Int32 index System.Int32 count | Improve this Doc View Source WriteLine(Decimal) Declaration public static void WriteLine(decimal value) Parameters Type Name Description System.Decimal value | Improve this Doc View Source WriteLine(Double) Declaration public static void WriteLine(double value) Parameters Type Name Description System.Double value | Improve this Doc View Source WriteLine(Int32) Declaration public static void WriteLine(int value) Parameters Type Name Description System.Int32 value | Improve this Doc View Source WriteLine(Int64) Declaration public static void WriteLine(long value) Parameters Type Name Description System.Int64 value | Improve this Doc View Source WriteLine(Object) Declaration public static void WriteLine(object value) Parameters Type Name Description System.Object value | Improve this Doc View Source WriteLine(Single) Declaration public static void WriteLine(float value) Parameters Type Name Description System.Single value | Improve this Doc View Source WriteLine(String) Declaration public static void WriteLine(string value) Parameters Type Name Description System.String value | Improve this Doc View Source WriteLine(String, Object) Declaration public static void WriteLine(string format, object arg0) Parameters Type Name Description System.String format System.Object arg0 | Improve this Doc View Source WriteLine(String, Object, Object) Declaration public static void WriteLine(string format, object arg0, object arg1) Parameters Type Name Description System.String format System.Object arg0 System.Object arg1 | Improve this Doc View Source WriteLine(String, Object, Object, Object) Declaration public static void WriteLine(string format, object arg0, object arg1, object arg2) Parameters Type Name Description System.String format System.Object arg0 System.Object arg1 System.Object arg2 | Improve this Doc View Source WriteLine(String, Object, Object, Object, Object) Declaration public static void WriteLine(string format, object arg0, object arg1, object arg2, object arg3) Parameters Type Name Description System.String format System.Object arg0 System.Object arg1 System.Object arg2 System.Object arg3 | Improve this Doc View Source WriteLine(String, Object[]) Declaration public static void WriteLine(string format, params object[] arg) Parameters Type Name Description System.String format System.Object [] arg | Improve this Doc View Source WriteLine(UInt32) Declaration public static void WriteLine(uint value) Parameters Type Name Description System.UInt32 value | Improve this Doc View Source WriteLine(UInt64) Declaration public static void WriteLine(ulong value) Parameters Type Name Description System.UInt64 value"
  },
  "api/Terminal.Gui/Terminal.Gui.FakeDriver.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.FakeDriver.html",
    "title": "Class FakeDriver",
    "keywords": "Class FakeDriver Implements a mock ConsoleDriver for unit testing Inheritance System.Object ConsoleDriver FakeDriver Inherited Members ConsoleDriver.TerminalResized ConsoleDriver.MakePrintable(Rune) ConsoleDriver.IsValidContent(Int32, Int32, Rect) ConsoleDriver.SetTerminalResized(Action) ConsoleDriver.DrawWindowTitle(Rect, ustring, Int32, Int32, Int32, Int32, TextAlignment) ConsoleDriver.Diagnostics ConsoleDriver.DrawWindowFrame(Rect, Int32, Int32, Int32, Int32, Boolean, Boolean, Border) ConsoleDriver.DrawFrame(Rect, Int32, Boolean) ConsoleDriver.Clip ConsoleDriver.HLine ConsoleDriver.VLine ConsoleDriver.Stipple ConsoleDriver.Diamond ConsoleDriver.ULCorner ConsoleDriver.LLCorner ConsoleDriver.URCorner ConsoleDriver.LRCorner ConsoleDriver.LeftTee ConsoleDriver.RightTee ConsoleDriver.TopTee ConsoleDriver.BottomTee ConsoleDriver.Checked ConsoleDriver.UnChecked ConsoleDriver.Selected ConsoleDriver.UnSelected ConsoleDriver.RightArrow ConsoleDriver.LeftArrow ConsoleDriver.DownArrow ConsoleDriver.UpArrow ConsoleDriver.LeftDefaultIndicator ConsoleDriver.RightDefaultIndicator ConsoleDriver.LeftBracket ConsoleDriver.RightBracket ConsoleDriver.BlocksMeterSegment ConsoleDriver.ContinuousMeterSegment ConsoleDriver.HDLine ConsoleDriver.VDLine ConsoleDriver.ULDCorner ConsoleDriver.LLDCorner ConsoleDriver.URDCorner ConsoleDriver.LRDCorner ConsoleDriver.HRLine ConsoleDriver.VRLine ConsoleDriver.ULRCorner ConsoleDriver.LLRCorner ConsoleDriver.URRCorner ConsoleDriver.LRRCorner ConsoleDriver.CreateColors(Boolean) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Terminal.Gui Assembly : Terminal.Gui.dll Syntax public class FakeDriver : ConsoleDriver Constructors | Improve this Doc View Source FakeDriver() Declaration public FakeDriver() Properties | Improve this Doc View Source Clipboard Declaration public override IClipboard Clipboard { get; } Property Value Type Description IClipboard Overrides ConsoleDriver.Clipboard | Improve this Doc View Source Cols Declaration public override int Cols { get; } Property Value Type Description System.Int32 Overrides ConsoleDriver.Cols | Improve this Doc View Source Contents Assists with testing, the format is rows, columns and 3 values on the last column: Rune, Attribute and Dirty Flag Declaration public override int[,, ] Contents { get; } Property Value Type Description System.Int32 [,,] Overrides ConsoleDriver.Contents | Improve this Doc View Source HeightAsBuffer Declaration public override bool HeightAsBuffer { get; set; } Property Value Type Description System.Boolean Overrides ConsoleDriver.HeightAsBuffer | Improve this Doc View Source Left Declaration public override int Left { get; } Property Value Type Description System.Int32 Overrides ConsoleDriver.Left | Improve this Doc View Source Rows Declaration public override int Rows { get; } Property Value Type Description System.Int32 Overrides ConsoleDriver.Rows | Improve this Doc View Source Top Declaration public override int Top { get; } Property Value Type Description System.Int32 Overrides ConsoleDriver.Top Methods | Improve this Doc View Source AddRune(Rune) Declaration public override void AddRune(Rune rune) Parameters Type Name Description System.Rune rune Overrides ConsoleDriver.AddRune(Rune) | Improve this Doc View Source AddStr(ustring) Declaration public override void AddStr(ustring str) Parameters Type Name Description NStack.ustring str Overrides ConsoleDriver.AddStr(ustring) | Improve this Doc View Source CookMouse() Declaration public override void CookMouse() Overrides ConsoleDriver.CookMouse() | Improve this Doc View Source End() Declaration public override void End() Overrides ConsoleDriver.End() | Improve this Doc View Source EnsureCursorVisibility() Declaration public override bool EnsureCursorVisibility() Returns Type Description System.Boolean Overrides ConsoleDriver.EnsureCursorVisibility() | Improve this Doc View Source GetAttribute() Declaration public override Attribute GetAttribute() Returns Type Description Attribute Overrides ConsoleDriver.GetAttribute() | Improve this Doc View Source GetColors(Int32, out Color, out Color) Declaration public override bool GetColors(int value, out Color foreground, out Color background) Parameters Type Name Description System.Int32 value Color foreground Color background Returns Type Description System.Boolean Overrides ConsoleDriver.GetColors(Int32, out Color, out Color) | Improve this Doc View Source GetCursorVisibility(out CursorVisibility) Declaration public override bool GetCursorVisibility(out CursorVisibility visibility) Parameters Type Name Description CursorVisibility visibility Returns Type Description System.Boolean Overrides ConsoleDriver.GetCursorVisibility(out CursorVisibility) | Improve this Doc View Source Init(Action) Declaration public override void Init(Action terminalResized) Parameters Type Name Description System.Action terminalResized Overrides ConsoleDriver.Init(Action) | Improve this Doc View Source MakeAttribute(Color, Color) Declaration public override Attribute MakeAttribute(Color fore, Color back) Parameters Type Name Description Color fore Color back Returns Type Description Attribute Overrides ConsoleDriver.MakeAttribute(Color, Color) | Improve this Doc View Source MakeColor(Color, Color) Declaration public override Attribute MakeColor(Color foreground, Color background) Parameters Type Name Description Color foreground Color background Returns Type Description Attribute Overrides ConsoleDriver.MakeColor(Color, Color) | Improve this Doc View Source Move(Int32, Int32) Declaration public override void Move(int col, int row) Parameters Type Name Description System.Int32 col System.Int32 row Overrides ConsoleDriver.Move(Int32, Int32) | Improve this Doc View Source PrepareToRun(MainLoop, Action<KeyEvent>, Action<KeyEvent>, Action<KeyEvent>, Action<MouseEvent>) Declaration public override void PrepareToRun(MainLoop mainLoop, Action<KeyEvent> keyHandler, Action<KeyEvent> keyDownHandler, Action<KeyEvent> keyUpHandler, Action<MouseEvent> mouseHandler) Parameters Type Name Description MainLoop mainLoop System.Action < KeyEvent > keyHandler System.Action < KeyEvent > keyDownHandler System.Action < KeyEvent > keyUpHandler System.Action < MouseEvent > mouseHandler Overrides ConsoleDriver.PrepareToRun(MainLoop, Action<KeyEvent>, Action<KeyEvent>, Action<KeyEvent>, Action<MouseEvent>) | Improve this Doc View Source Refresh() Declaration public override void Refresh() Overrides ConsoleDriver.Refresh() | Improve this Doc View Source ResizeScreen() Declaration public override void ResizeScreen() Overrides ConsoleDriver.ResizeScreen() | Improve this Doc View Source SendKeys(Char, ConsoleKey, Boolean, Boolean, Boolean) Declaration public override void SendKeys(char keyChar, ConsoleKey key, bool shift, bool alt, bool control) Parameters Type Name Description System.Char keyChar System.ConsoleKey key System.Boolean shift System.Boolean alt System.Boolean control Overrides ConsoleDriver.SendKeys(Char, ConsoleKey, Boolean, Boolean, Boolean) | Improve this Doc View Source SetAttribute(Attribute) Declaration public override void SetAttribute(Attribute c) Parameters Type Name Description Attribute c Overrides ConsoleDriver.SetAttribute(Attribute) | Improve this Doc View Source SetBufferSize(Int32, Int32) Declaration public void SetBufferSize(int width, int height) Parameters Type Name Description System.Int32 width System.Int32 height | Improve this Doc View Source SetColors(ConsoleColor, ConsoleColor) Declaration public override void SetColors(ConsoleColor foreground, ConsoleColor background) Parameters Type Name Description System.ConsoleColor foreground System.ConsoleColor background Overrides ConsoleDriver.SetColors(ConsoleColor, ConsoleColor) | Improve this Doc View Source SetColors(Int16, Int16) Declaration public override void SetColors(short foregroundColorId, short backgroundColorId) Parameters Type Name Description System.Int16 foregroundColorId System.Int16 backgroundColorId Overrides ConsoleDriver.SetColors(Int16, Int16) | Improve this Doc View Source SetCursorVisibility(CursorVisibility) Declaration public override bool SetCursorVisibility(CursorVisibility visibility) Parameters Type Name Description CursorVisibility visibility Returns Type Description System.Boolean Overrides ConsoleDriver.SetCursorVisibility(CursorVisibility) | Improve this Doc View Source SetWindowPosition(Int32, Int32) Declaration public void SetWindowPosition(int left, int top) Parameters Type Name Description System.Int32 left System.Int32 top | Improve this Doc View Source SetWindowSize(Int32, Int32) Declaration public void SetWindowSize(int width, int height) Parameters Type Name Description System.Int32 width System.Int32 height | Improve this Doc View Source StartReportingMouseMoves() Declaration public override void StartReportingMouseMoves() Overrides ConsoleDriver.StartReportingMouseMoves() | Improve this Doc View Source StopReportingMouseMoves() Declaration public override void StopReportingMouseMoves() Overrides ConsoleDriver.StopReportingMouseMoves() | Improve this Doc View Source Suspend() Declaration public override void Suspend() Overrides ConsoleDriver.Suspend() | Improve this Doc View Source UncookMouse() Declaration public override void UncookMouse() Overrides ConsoleDriver.UncookMouse() | Improve this Doc View Source UpdateCursor() Declaration public override void UpdateCursor() Overrides ConsoleDriver.UpdateCursor() | Improve this Doc View Source UpdateOffScreen() Declaration public override void UpdateOffScreen() Overrides ConsoleDriver.UpdateOffScreen() | Improve this Doc View Source UpdateScreen() Declaration public override void UpdateScreen() Overrides ConsoleDriver.UpdateScreen()"
  },
  "api/Terminal.Gui/Terminal.Gui.FakeMainLoop.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.FakeMainLoop.html",
    "title": "Class FakeMainLoop",
    "keywords": "Class FakeMainLoop Mainloop intended to be used with the .NET System.Console API, and can be used on Windows and Unix, it is cross platform but lacks things like file descriptor monitoring. Inheritance System.Object FakeMainLoop Implements IMainLoopDriver Remarks This implementation is used for FakeDriver. Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Terminal.Gui Assembly : Terminal.Gui.dll Syntax public class FakeMainLoop : IMainLoopDriver Constructors | Improve this Doc View Source FakeMainLoop(Func<ConsoleKeyInfo>) Initializes the class. Declaration public FakeMainLoop(Func<ConsoleKeyInfo> consoleKeyReaderFn = null) Parameters Type Name Description System.Func < System.ConsoleKeyInfo > consoleKeyReaderFn The method to be called to get a key from the console. Fields | Improve this Doc View Source KeyPressed Invoked when a Key is pressed. Declaration public Action<ConsoleKeyInfo> KeyPressed Field Value Type Description System.Action < System.ConsoleKeyInfo > Explicit Interface Implementations | Improve this Doc View Source IMainLoopDriver.EventsPending(Boolean) Declaration bool IMainLoopDriver.EventsPending(bool wait) Parameters Type Name Description System.Boolean wait Returns Type Description System.Boolean | Improve this Doc View Source IMainLoopDriver.MainIteration() Declaration void IMainLoopDriver.MainIteration() | Improve this Doc View Source IMainLoopDriver.Setup(MainLoop) Declaration void IMainLoopDriver.Setup(MainLoop mainLoop) Parameters Type Name Description MainLoop mainLoop | Improve this Doc View Source IMainLoopDriver.Wakeup() Declaration void IMainLoopDriver.Wakeup() Implements IMainLoopDriver"
  },
  "api/Terminal.Gui/Terminal.Gui.FileDialog.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.FileDialog.html",
    "title": "Class FileDialog",
    "keywords": "Class FileDialog Base class for the OpenDialog and the SaveDialog Inheritance System.Object Responder View Toplevel Window Dialog FileDialog OpenDialog SaveDialog Implements System.IDisposable System.ComponentModel.ISupportInitializeNotification System.ComponentModel.ISupportInitialize Inherited Members Dialog.AddButton(Button) Dialog.ButtonAlignment Dialog.ProcessKey(KeyEvent) Window.Title Window.Border Window.Add(View) Window.Remove(View) Window.RemoveAll() Window.Redraw(Rect) Window.OnCanFocusChanged() Window.Text Window.TextAlignment Window.OnTitleChanging(ustring, ustring) Window.TitleChanging Window.OnTitleChanged(ustring, ustring) Window.TitleChanged Toplevel.Running Toplevel.Loaded Toplevel.Ready Toplevel.Unloaded Toplevel.Activate Toplevel.Deactivate Toplevel.ChildClosed Toplevel.AllChildClosed Toplevel.Closing Toplevel.Closed Toplevel.ChildLoaded Toplevel.ChildUnloaded Toplevel.Resized Toplevel.OnLoaded() Toplevel.AlternateForwardKeyChanged Toplevel.OnAlternateForwardKeyChanged(Key) Toplevel.AlternateBackwardKeyChanged Toplevel.OnAlternateBackwardKeyChanged(Key) Toplevel.QuitKeyChanged Toplevel.OnQuitKeyChanged(Key) Toplevel.Create() Toplevel.CanFocus Toplevel.Modal Toplevel.MenuBar Toplevel.StatusBar Toplevel.IsMdiContainer Toplevel.IsMdiChild Toplevel.OnKeyDown(KeyEvent) Toplevel.OnKeyUp(KeyEvent) Toplevel.ProcessColdKey(KeyEvent) Toplevel.PositionToplevel(Toplevel) Toplevel.MouseEvent(MouseEvent) Toplevel.MoveNext() Toplevel.MovePrevious() Toplevel.RequestStop() Toplevel.RequestStop(Toplevel) Toplevel.PositionCursor() Toplevel.GetTopMdiChild(Type, String[]) Toplevel.ShowChild(Toplevel) View.Added View.Removed View.Enter View.Leave View.MouseEnter View.MouseLeave View.MouseClick View.CanFocusChanged View.EnabledChanged View.VisibleChanged View.HotKeyChanged View.HotKey View.HotKeySpecifier View.Shortcut View.ShortcutTag View.ShortcutAction View.Data View.Driver View.Subviews View.TabIndexes View.TabIndex View.TabStop View.Id View.IsCurrentTop View.WantMousePositionReports View.WantContinuousButtonPressed View.Frame View.LayoutStyle View.Bounds View.X View.Y View.Width View.Height View.ForceValidatePosDim View.GetMinWidthHeight(Size) View.SetMinWidthHeight() View.TextFormatter View.SuperView View.UpdateTextFormatterText() View.ProcessResizeView() View.SetNeedsDisplay() View.ClearLayoutNeeded() View.SetNeedsDisplay(Rect) View.SetChildNeedsDisplay() View.Add(View[]) View.BringSubviewToFront(View) View.SendSubviewToBack(View) View.SendSubviewBackwards(View) View.BringSubviewForward(View) View.Clear() View.Clear(Rect) View.ScreenToView(Int32, Int32) View.ClipToBounds() View.SetClip(Rect) View.DrawFrame(Rect, Int32, Boolean) View.DrawHotString(ustring, Attribute, Attribute) View.DrawHotString(ustring, Boolean, ColorScheme) View.Move(Int32, Int32, Boolean) View.HasFocus View.OnAdded(View) View.OnRemoved(View) View.OnEnter(View) View.OnLeave(View) View.Focused View.MostFocused View.ColorScheme View.AddRune(Int32, Int32, Rune) View.ClearNeedsDisplay() View.DrawContent View.OnDrawContent(Rect) View.DrawContentComplete View.OnDrawContentComplete(Rect) View.SetFocus() View.KeyPress View.InvokeKeybindings(KeyEvent) View.AddKeyBinding(Key, Command[]) View.ReplaceKeyBinding(Key, Key) View.ContainsKeyBinding(Key) View.ClearKeybindings() View.ClearKeybinding(Key) View.ClearKeybinding(Command[]) View.AddCommand(Command, Func<Nullable<Boolean>>) View.GetSupportedCommands() View.GetKeyFromCommand(Command[]) View.ProcessHotKey(KeyEvent) View.KeyDown View.KeyUp View.EnsureFocus() View.FocusFirst() View.FocusLast() View.FocusPrev() View.FocusNext() View.LayoutStarted View.LayoutComplete View.Initialized View.LayoutSubviews() View.AutoSize View.PreserveTrailingSpaces View.VerticalTextAlignment View.TextDirection View.IsInitialized View.IsAdded View.Enabled View.Visible View.ToString() View.GetAutoSize() View.GetHotKeySpecifierLength(Boolean) View.GetTextFormatterBoundsSize() View.GetBoundsTextFormatterSize() View.OnMouseEnter(MouseEvent) View.OnMouseLeave(MouseEvent) View.OnMouseEvent(MouseEvent) View.OnMouseClick(View.MouseEventArgs) View.OnEnabledChanged() View.OnVisibleChanged() View.Dispose(Boolean) View.BeginInit() View.EndInit() View.SetWidth(Int32, Int32) View.SetHeight(Int32, Int32) View.GetCurrentWidth(Int32) View.GetCurrentHeight(Int32) View.GetNormalColor() View.GetTopSuperView() Responder.Dispose() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Terminal.Gui Assembly : Terminal.Gui.dll Syntax public class FileDialog : Dialog, IDisposable, ISupportInitializeNotification, ISupportInitialize Constructors | Improve this Doc View Source FileDialog() Initializes a new FileDialog . Declaration public FileDialog() | Improve this Doc View Source FileDialog(ustring, ustring, ustring, ustring, ustring, List<String>) Initializes a new instance of FileDialog Declaration public FileDialog(ustring title, ustring prompt, ustring nameDirLabel, ustring nameFieldLabel, ustring message, List<string> allowedTypes = null) Parameters Type Name Description NStack.ustring title The title. NStack.ustring prompt The prompt. NStack.ustring nameDirLabel The name of the directory field label. NStack.ustring nameFieldLabel The name of the file field label.. NStack.ustring message The message. System.Collections.Generic.List < System.String > allowedTypes The allowed types. | Improve this Doc View Source FileDialog(ustring, ustring, ustring, ustring, List<String>) Initializes a new instance of FileDialog Declaration public FileDialog(ustring title, ustring prompt, ustring nameFieldLabel, ustring message, List<string> allowedTypes = null) Parameters Type Name Description NStack.ustring title The title. NStack.ustring prompt The prompt. NStack.ustring nameFieldLabel The name of the file field label.. NStack.ustring message The message. System.Collections.Generic.List < System.String > allowedTypes The allowed types. | Improve this Doc View Source FileDialog(ustring, ustring, ustring, List<String>) Initializes a new instance of FileDialog Declaration public FileDialog(ustring title, ustring prompt, ustring message, List<string> allowedTypes) Parameters Type Name Description NStack.ustring title The title. NStack.ustring prompt The prompt. NStack.ustring message The message. System.Collections.Generic.List < System.String > allowedTypes The allowed types. Properties | Improve this Doc View Source AllowedFileTypes The array of filename extensions allowed, or null if all file extensions are allowed. Declaration public string[] AllowedFileTypes { get; set; } Property Value Type Description System.String [] The allowed file types. | Improve this Doc View Source AllowsOtherFileTypes Gets or sets a value indicating whether this FileDialog allows the file to be saved with a different extension Declaration public bool AllowsOtherFileTypes { get; set; } Property Value Type Description System.Boolean true if allows other file types; otherwise, false . | Improve this Doc View Source Canceled Check if the dialog was or not canceled. Declaration public bool Canceled { get; } Property Value Type Description System.Boolean | Improve this Doc View Source CanCreateDirectories Gets or sets a value indicating whether this FileDialog can create directories. Declaration public bool CanCreateDirectories { get; set; } Property Value Type Description System.Boolean true if can create directories; otherwise, false . | Improve this Doc View Source DirectoryPath Gets or sets the directory path for this panel Declaration public ustring DirectoryPath { get; set; } Property Value Type Description NStack.ustring The directory path. | Improve this Doc View Source FilePath The File path that is currently shown on the panel Declaration public ustring FilePath { get; set; } Property Value Type Description NStack.ustring The absolute file path for the file path entered. | Improve this Doc View Source IsExtensionHidden Gets or sets a value indicating whether this FileDialog is extension hidden. Declaration public bool IsExtensionHidden { get; set; } Property Value Type Description System.Boolean true if is extension hidden; otherwise, false . | Improve this Doc View Source Message Gets or sets the message displayed to the user, defaults to nothing Declaration public ustring Message { get; set; } Property Value Type Description NStack.ustring The message. | Improve this Doc View Source NameDirLabel Gets or sets the name of the directory field label. Declaration public ustring NameDirLabel { get; set; } Property Value Type Description NStack.ustring The name of the directory field label. | Improve this Doc View Source NameFieldLabel Gets or sets the name field label. Declaration public ustring NameFieldLabel { get; set; } Property Value Type Description NStack.ustring The name field label. | Improve this Doc View Source Prompt Gets or sets the prompt label for the Button displayed to the user Declaration public ustring Prompt { get; set; } Property Value Type Description NStack.ustring The prompt. Methods | Improve this Doc View Source WillPresent() Declaration public override void WillPresent() Overrides Toplevel.WillPresent() Implements System.IDisposable System.ComponentModel.ISupportInitializeNotification System.ComponentModel.ISupportInitialize"
  },
  "api/Terminal.Gui/Terminal.Gui.FrameView.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.FrameView.html",
    "title": "Class FrameView",
    "keywords": "Class FrameView The FrameView is a container frame that draws a frame around the contents. It is similar to a GroupBox in Windows. Inheritance System.Object Responder View FrameView Wizard.WizardStep Implements System.IDisposable System.ComponentModel.ISupportInitializeNotification System.ComponentModel.ISupportInitialize Inherited Members View.Added View.Removed View.Enter View.Leave View.MouseEnter View.MouseLeave View.MouseClick View.CanFocusChanged View.EnabledChanged View.VisibleChanged View.HotKeyChanged View.HotKey View.HotKeySpecifier View.Shortcut View.ShortcutTag View.ShortcutAction View.Data View.Driver View.Subviews View.TabIndexes View.TabIndex View.TabStop View.CanFocus View.Id View.IsCurrentTop View.WantMousePositionReports View.WantContinuousButtonPressed View.Frame View.LayoutStyle View.Bounds View.X View.Y View.Width View.Height View.ForceValidatePosDim View.GetMinWidthHeight(Size) View.SetMinWidthHeight() View.TextFormatter View.SuperView View.UpdateTextFormatterText() View.ProcessResizeView() View.SetNeedsDisplay() View.ClearLayoutNeeded() View.SetNeedsDisplay(Rect) View.SetChildNeedsDisplay() View.Add(View[]) View.BringSubviewToFront(View) View.SendSubviewToBack(View) View.SendSubviewBackwards(View) View.BringSubviewForward(View) View.Clear() View.Clear(Rect) View.ScreenToView(Int32, Int32) View.ClipToBounds() View.SetClip(Rect) View.DrawFrame(Rect, Int32, Boolean) View.DrawHotString(ustring, Attribute, Attribute) View.DrawHotString(ustring, Boolean, ColorScheme) View.Move(Int32, Int32, Boolean) View.PositionCursor() View.HasFocus View.OnAdded(View) View.OnRemoved(View) View.OnLeave(View) View.Focused View.MostFocused View.ColorScheme View.AddRune(Int32, Int32, Rune) View.ClearNeedsDisplay() View.DrawContent View.OnDrawContent(Rect) View.DrawContentComplete View.OnDrawContentComplete(Rect) View.SetFocus() View.KeyPress View.ProcessKey(KeyEvent) View.InvokeKeybindings(KeyEvent) View.AddKeyBinding(Key, Command[]) View.ReplaceKeyBinding(Key, Key) View.ContainsKeyBinding(Key) View.ClearKeybindings() View.ClearKeybinding(Key) View.ClearKeybinding(Command[]) View.AddCommand(Command, Func<Nullable<Boolean>>) View.GetSupportedCommands() View.GetKeyFromCommand(Command[]) View.ProcessHotKey(KeyEvent) View.ProcessColdKey(KeyEvent) View.KeyDown View.OnKeyDown(KeyEvent) View.KeyUp View.OnKeyUp(KeyEvent) View.EnsureFocus() View.FocusFirst() View.FocusLast() View.FocusPrev() View.FocusNext() View.LayoutStarted View.LayoutComplete View.Initialized View.LayoutSubviews() View.AutoSize View.PreserveTrailingSpaces View.VerticalTextAlignment View.TextDirection View.IsInitialized View.IsAdded View.Enabled View.Visible View.ToString() View.GetAutoSize() View.GetHotKeySpecifierLength(Boolean) View.GetTextFormatterBoundsSize() View.GetBoundsTextFormatterSize() View.OnMouseEnter(MouseEvent) View.OnMouseLeave(MouseEvent) View.OnMouseEvent(MouseEvent) View.OnMouseClick(View.MouseEventArgs) View.OnEnabledChanged() View.OnVisibleChanged() View.Dispose(Boolean) View.BeginInit() View.EndInit() View.SetWidth(Int32, Int32) View.SetHeight(Int32, Int32) View.GetCurrentWidth(Int32) View.GetCurrentHeight(Int32) View.GetNormalColor() View.GetTopSuperView() Responder.MouseEvent(MouseEvent) Responder.Dispose() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Terminal.Gui Assembly : Terminal.Gui.dll Syntax public class FrameView : View, IDisposable, ISupportInitializeNotification, ISupportInitialize Constructors | Improve this Doc View Source FrameView() Initializes a new instance of the FrameView class using Computed layout. Declaration public FrameView() | Improve this Doc View Source FrameView(ustring, Border) Initializes a new instance of the FrameView class using Computed layout. Declaration public FrameView(ustring title, Border border = null) Parameters Type Name Description NStack.ustring title Title. Border border The Border . | Improve this Doc View Source FrameView(Rect, ustring, View[], Border) Initializes a new instance of the FrameView class using Absolute layout. Declaration public FrameView(Rect frame, ustring title = null, View[] views = null, Border border = null) Parameters Type Name Description Rect frame Frame. NStack.ustring title Title. View [] views Views. Border border The Border . Properties | Improve this Doc View Source Border Declaration public override Border Border { get; set; } Property Value Type Description Border Overrides View.Border | Improve this Doc View Source Text The text displayed by the Label . Declaration public override ustring Text { get; set; } Property Value Type Description NStack.ustring Overrides View.Text | Improve this Doc View Source TextAlignment Controls the text-alignment property of the label, changing it will redisplay the Label . Declaration public override TextAlignment TextAlignment { get; set; } Property Value Type Description TextAlignment The text alignment. Overrides View.TextAlignment | Improve this Doc View Source Title The title to be displayed for this FrameView . Declaration public ustring Title { get; set; } Property Value Type Description NStack.ustring The title. Methods | Improve this Doc View Source Add(View) Add the specified View to this container. Declaration public override void Add(View view) Parameters Type Name Description View view View to add to this container Overrides View.Add(View) | Improve this Doc View Source OnCanFocusChanged() Declaration public override void OnCanFocusChanged() Overrides View.OnCanFocusChanged() | Improve this Doc View Source OnEnter(View) Declaration public override bool OnEnter(View view) Parameters Type Name Description View view Returns Type Description System.Boolean Overrides View.OnEnter(View) | Improve this Doc View Source Redraw(Rect) Declaration public override void Redraw(Rect bounds) Parameters Type Name Description Rect bounds Overrides View.Redraw(Rect) | Improve this Doc View Source Remove(View) Removes a View from this container. Declaration public override void Remove(View view) Parameters Type Name Description View view Overrides View.Remove(View) | Improve this Doc View Source RemoveAll() Removes all View s from this container. Declaration public override void RemoveAll() Overrides View.RemoveAll() Implements System.IDisposable System.ComponentModel.ISupportInitializeNotification System.ComponentModel.ISupportInitialize"
  },
  "api/Terminal.Gui/Terminal.Gui.Graphs.Axis.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.Graphs.Axis.html",
    "title": "Class Axis",
    "keywords": "Class Axis Renders a continuous line with grid line ticks and labels Inheritance System.Object Axis HorizontalAxis VerticalAxis Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Terminal.Gui.Graphs Assembly : Terminal.Gui.dll Syntax public abstract class Axis Constructors | Improve this Doc View Source Axis(Orientation) Populates base properties and sets the read only Orientation Declaration protected Axis(Orientation orientation) Parameters Type Name Description Orientation orientation Fields | Improve this Doc View Source LabelGetter Allows you to control what label text is rendered for a given Increment when ShowLabelsEvery is above 0 Declaration public LabelGetterDelegate LabelGetter Field Value Type Description LabelGetterDelegate Properties | Improve this Doc View Source Increment Number of units of graph space between ticks on axis. 0 for no ticks Declaration public float Increment { get; set; } Property Value Type Description System.Single | Improve this Doc View Source Minimum The minimum axis point to show. Defaults to null (no minimum) Declaration public float? Minimum { get; set; } Property Value Type Description System.Nullable < System.Single > | Improve this Doc View Source Orientation Direction of the axis Declaration public Orientation Orientation { get; } Property Value Type Description Orientation | Improve this Doc View Source ShowLabelsEvery The number of Increment before an label is added. 0 = never show labels Declaration public uint ShowLabelsEvery { get; set; } Property Value Type Description System.UInt32 | Improve this Doc View Source Text Displayed below/to left of labels (see Orientation ). If text is not visible, check MarginBottom / MarginLeft Declaration public string Text { get; set; } Property Value Type Description System.String | Improve this Doc View Source Visible True to render axis. Defaults to true Declaration public bool Visible { get; set; } Property Value Type Description System.Boolean Methods | Improve this Doc View Source DrawAxisLabel(GraphView, Int32, String) Draws a custom label text at screenPosition units along the axis (X or Y depending on Orientation ) Declaration public abstract void DrawAxisLabel(GraphView graph, int screenPosition, string text) Parameters Type Name Description GraphView graph System.Int32 screenPosition System.String text | Improve this Doc View Source DrawAxisLabels(GraphView) Draws labels and axis Increment ticks Declaration public abstract void DrawAxisLabels(GraphView graph) Parameters Type Name Description GraphView graph | Improve this Doc View Source DrawAxisLine(GraphView) Draws the solid line of the axis Declaration public abstract void DrawAxisLine(GraphView graph) Parameters Type Name Description GraphView graph | Improve this Doc View Source DrawAxisLine(GraphView, Int32, Int32) Draws a single cell of the solid line of the axis Declaration protected abstract void DrawAxisLine(GraphView graph, int x, int y) Parameters Type Name Description GraphView graph System.Int32 x System.Int32 y | Improve this Doc View Source Reset() Resets all configurable properties of the axis to default values Declaration public virtual void Reset()"
  },
  "api/Terminal.Gui/Terminal.Gui.Graphs.AxisIncrementToRender.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.Graphs.AxisIncrementToRender.html",
    "title": "Class AxisIncrementToRender",
    "keywords": "Class AxisIncrementToRender A location on an axis of a GraphView that may or may not have a label associated with it Inheritance System.Object AxisIncrementToRender Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Terminal.Gui.Graphs Assembly : Terminal.Gui.dll Syntax public class AxisIncrementToRender Constructors | Improve this Doc View Source AxisIncrementToRender(Orientation, Int32, Single) Describe a new section of an axis that requires an axis increment symbol and/or label Declaration public AxisIncrementToRender(Orientation orientation, int screen, float value) Parameters Type Name Description Orientation orientation System.Int32 screen System.Single value Properties | Improve this Doc View Source Orientation Direction of the parent axis Declaration public Orientation Orientation { get; } Property Value Type Description Orientation | Improve this Doc View Source ScreenLocation The screen location (X or Y depending on Orientation ) that the increment will be rendered at Declaration public int ScreenLocation { get; } Property Value Type Description System.Int32 | Improve this Doc View Source Value The value at this position on the axis in graph space Declaration public float Value { get; } Property Value Type Description System.Single"
  },
  "api/Terminal.Gui/Terminal.Gui.Graphs.BarSeries.Bar.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.Graphs.BarSeries.Bar.html",
    "title": "Class BarSeries.Bar",
    "keywords": "Class BarSeries.Bar A single bar in a BarSeries Inheritance System.Object BarSeries.Bar Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Terminal.Gui.Graphs Assembly : Terminal.Gui.dll Syntax public class Bar Constructors | Improve this Doc View Source Bar(String, GraphCellToRender, Single) Creates a new instance of a single bar rendered in the given fill that extends out value graph space units in the default Orientation Declaration public Bar(string text, GraphCellToRender fill, float value) Parameters Type Name Description System.String text GraphCellToRender fill System.Single value Properties | Improve this Doc View Source Fill The color and character that will be rendered in the console when the bar extends over it Declaration public GraphCellToRender Fill { get; set; } Property Value Type Description GraphCellToRender | Improve this Doc View Source Text Optional text that describes the bar. This will be rendered on the corresponding Axis unless DrawLabels is false Declaration public string Text { get; set; } Property Value Type Description System.String | Improve this Doc View Source Value The value in graph space X/Y (depending on Orientation ) to which the bar extends. Declaration public float Value { get; } Property Value Type Description System.Single"
  },
  "api/Terminal.Gui/Terminal.Gui.Graphs.BarSeries.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.Graphs.BarSeries.html",
    "title": "Class BarSeries",
    "keywords": "Class BarSeries Series of bars positioned at regular intervals Inheritance System.Object BarSeries Implements ISeries Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Terminal.Gui.Graphs Assembly : Terminal.Gui.dll Syntax public class BarSeries : ISeries Properties | Improve this Doc View Source BarEvery Determines the spacing of bars along the axis. Defaults to 1 i.e. every 1 unit of graph space a bar is rendered. Note that you should also consider CellSize when changing this. Declaration public float BarEvery { get; set; } Property Value Type Description System.Single | Improve this Doc View Source Bars Ordered collection of graph bars to position along axis Declaration public List<BarSeries.Bar> Bars { get; set; } Property Value Type Description System.Collections.Generic.List < BarSeries.Bar > | Improve this Doc View Source DrawLabels True to draw Text along the axis under the bar. Defaults to true. Declaration public bool DrawLabels { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source Offset The number of units of graph space along the axis before rendering the first bar (and subsequent bars - see BarEvery ). Defaults to 0 Declaration public float Offset { get; set; } Property Value Type Description System.Single | Improve this Doc View Source Orientation Direction bars protrude from the corresponding axis. Defaults to vertical Declaration public Orientation Orientation { get; set; } Property Value Type Description Orientation | Improve this Doc View Source OverrideBarColor Overrides the Fill with a fixed color Declaration public Attribute? OverrideBarColor { get; set; } Property Value Type Description System.Nullable < Attribute > Methods | Improve this Doc View Source AdjustColor(GraphCellToRender) Applies any color overriding Declaration protected virtual GraphCellToRender AdjustColor(GraphCellToRender graphCellToRender) Parameters Type Name Description GraphCellToRender graphCellToRender Returns Type Description GraphCellToRender | Improve this Doc View Source DrawBarLine(GraphView, Point, Point, BarSeries.Bar) Override to do custom drawing of the bar e.g. to apply varying color or changing the fill symbol mid bar. Declaration protected virtual void DrawBarLine(GraphView graph, Point start, Point end, BarSeries.Bar beingDrawn) Parameters Type Name Description GraphView graph Point start Screen position of the start of the bar Point end Screen position of the end of the bar BarSeries.Bar beingDrawn The Bar that occupies this space and is being drawn | Improve this Doc View Source DrawSeries(GraphView, Rect, RectangleF) Draws bars that are currently in the drawBounds Declaration public virtual void DrawSeries(GraphView graph, Rect drawBounds, RectangleF graphBounds) Parameters Type Name Description GraphView graph Rect drawBounds Screen area of the graph excluding margins RectangleF graphBounds Graph space area that should be drawn into drawBounds Implements ISeries"
  },
  "api/Terminal.Gui/Terminal.Gui.Graphs.GraphCellToRender.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.Graphs.GraphCellToRender.html",
    "title": "Class GraphCellToRender",
    "keywords": "Class GraphCellToRender Describes how to render a single row/column of a GraphView based on the value(s) in ISeries at that location Inheritance System.Object GraphCellToRender Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Terminal.Gui.Graphs Assembly : Terminal.Gui.dll Syntax public class GraphCellToRender Constructors | Improve this Doc View Source GraphCellToRender(Rune) Creates instance and sets Rune with default graph coloring Declaration public GraphCellToRender(Rune rune) Parameters Type Name Description System.Rune rune | Improve this Doc View Source GraphCellToRender(Rune, Nullable<Attribute>) Creates instance and sets Rune and Color (or default if null) Declaration public GraphCellToRender(Rune rune, Attribute? color) Parameters Type Name Description System.Rune rune System.Nullable < Attribute > color | Improve this Doc View Source GraphCellToRender(Rune, Attribute) Creates instance and sets Rune with custom graph coloring Declaration public GraphCellToRender(Rune rune, Attribute color) Parameters Type Name Description System.Rune rune Attribute color Properties | Improve this Doc View Source Color Optional color to render the Rune with Declaration public Attribute? Color { get; set; } Property Value Type Description System.Nullable < Attribute > | Improve this Doc View Source Rune The character to render in the console Declaration public Rune Rune { get; set; } Property Value Type Description System.Rune"
  },
  "api/Terminal.Gui/Terminal.Gui.Graphs.HorizontalAxis.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.Graphs.HorizontalAxis.html",
    "title": "Class HorizontalAxis",
    "keywords": "Class HorizontalAxis The horizontal (x axis) of a GraphView Inheritance System.Object Axis HorizontalAxis Inherited Members Axis.Orientation Axis.Increment Axis.ShowLabelsEvery Axis.Visible Axis.LabelGetter Axis.Text Axis.Minimum Axis.Reset() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Terminal.Gui.Graphs Assembly : Terminal.Gui.dll Syntax public class HorizontalAxis : Axis Constructors | Improve this Doc View Source HorizontalAxis() Creates a new instance of axis with an Orientation of Horizontal Declaration public HorizontalAxis() Methods | Improve this Doc View Source DrawAxisLabel(GraphView, Int32, String) Draws the given text on the axis at x screenPosition . For the screen y position use GetAxisYPosition(GraphView) Declaration public override void DrawAxisLabel(GraphView graph, int screenPosition, string text) Parameters Type Name Description GraphView graph Graph being drawn onto System.Int32 screenPosition Number of screen columns along the axis to take before rendering System.String text Text to render under the axis tick Overrides Axis.DrawAxisLabel(GraphView, Int32, String) | Improve this Doc View Source DrawAxisLabels(GraphView) Draws the horizontal x axis labels and Increment ticks Declaration public override void DrawAxisLabels(GraphView graph) Parameters Type Name Description GraphView graph Overrides Axis.DrawAxisLabels(GraphView) | Improve this Doc View Source DrawAxisLine(GraphView) Draws the horizontal axis line Declaration public override void DrawAxisLine(GraphView graph) Parameters Type Name Description GraphView graph Overrides Axis.DrawAxisLine(GraphView) | Improve this Doc View Source DrawAxisLine(GraphView, Int32, Int32) Draws a horizontal axis line at the given x , y screen coordinates Declaration protected override void DrawAxisLine(GraphView graph, int x, int y) Parameters Type Name Description GraphView graph System.Int32 x System.Int32 y Overrides Axis.DrawAxisLine(GraphView, Int32, Int32) | Improve this Doc View Source GetAxisYPosition(GraphView) Returns the Y screen position of the origin (typically 0,0) of graph space. Return value is bounded by the screen i.e. the axis is always rendered even if the origin is offscreen. Declaration public int GetAxisYPosition(GraphView graph) Parameters Type Name Description GraphView graph Returns Type Description System.Int32"
  },
  "api/Terminal.Gui/Terminal.Gui.Graphs.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.Graphs.html",
    "title": "Namespace Terminal.Gui.Graphs",
    "keywords": "Namespace Terminal.Gui.Graphs Classes Axis Renders a continuous line with grid line ticks and labels AxisIncrementToRender A location on an axis of a GraphView that may or may not have a label associated with it BarSeries Series of bars positioned at regular intervals BarSeries.Bar A single bar in a BarSeries GraphCellToRender Describes how to render a single row/column of a GraphView based on the value(s) in ISeries at that location HorizontalAxis The horizontal (x axis) of a GraphView LegendAnnotation A box containing symbol definitions e.g. meanings for colors in a graph. The 'Key' to the graph MultiBarSeries Collection of BarSeries in which bars are clustered by category PathAnnotation Sequence of lines to connect points e.g. of a ScatterSeries PathAnnotation.LineF Describes two points in graph space and a line between them ScatterSeries Series composed of any number of discrete data points TextAnnotation Displays text at a given position (in screen space or graph space) VerticalAxis The vertical (i.e. Y axis) of a GraphView Interfaces IAnnotation Describes an overlay element that is rendered either before or after a series. Annotations can be positioned either in screen space (e.g. a legend) or in graph space (e.g. a line showing high point) Unlike ISeries , annotations are allowed to draw into graph margins ISeries Describes a series of data that can be rendered into a GraphView > Enums Orientation Direction of an element (horizontal or vertical) Delegates LabelGetterDelegate Delegate for custom formatting of axis labels. Determines what should be displayed at a given label"
  },
  "api/Terminal.Gui/Terminal.Gui.Graphs.IAnnotation.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.Graphs.IAnnotation.html",
    "title": "Interface IAnnotation",
    "keywords": "Interface IAnnotation Describes an overlay element that is rendered either before or after a series. Annotations can be positioned either in screen space (e.g. a legend) or in graph space (e.g. a line showing high point) Unlike ISeries , annotations are allowed to draw into graph margins Namespace : Terminal.Gui.Graphs Assembly : Terminal.Gui.dll Syntax public interface IAnnotation Properties | Improve this Doc View Source BeforeSeries True if annotation should be drawn before ISeries . This allowes Series and later annotations to potentially draw over the top of this annotation. Declaration bool BeforeSeries { get; } Property Value Type Description System.Boolean Methods | Improve this Doc View Source Render(GraphView) Called once after series have been rendered (or before if BeforeSeries is true). Use Driver to draw and Bounds to avoid drawing outside of graph Declaration void Render(GraphView graph) Parameters Type Name Description GraphView graph"
  },
  "api/Terminal.Gui/Terminal.Gui.Graphs.ISeries.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.Graphs.ISeries.html",
    "title": "Interface ISeries",
    "keywords": "Interface ISeries Describes a series of data that can be rendered into a GraphView > Namespace : Terminal.Gui.Graphs Assembly : Terminal.Gui.dll Syntax public interface ISeries Methods | Improve this Doc View Source DrawSeries(GraphView, Rect, RectangleF) Draws the graphBounds section of a series into the graph view drawBounds Declaration void DrawSeries(GraphView graph, Rect drawBounds, RectangleF graphBounds) Parameters Type Name Description GraphView graph Graph series is to be drawn onto Rect drawBounds Visible area of the graph in Console Screen units (excluding margins) RectangleF graphBounds Visible area of the graph in Graph space units"
  },
  "api/Terminal.Gui/Terminal.Gui.Graphs.LabelGetterDelegate.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.Graphs.LabelGetterDelegate.html",
    "title": "Delegate LabelGetterDelegate",
    "keywords": "Delegate LabelGetterDelegate Delegate for custom formatting of axis labels. Determines what should be displayed at a given label Namespace : Terminal.Gui.Graphs Assembly : Terminal.Gui.dll Syntax public delegate string LabelGetterDelegate(AxisIncrementToRender toRender); Parameters Type Name Description AxisIncrementToRender toRender The axis increment to which the label is attached Returns Type Description System.String"
  },
  "api/Terminal.Gui/Terminal.Gui.Graphs.LegendAnnotation.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.Graphs.LegendAnnotation.html",
    "title": "Class LegendAnnotation",
    "keywords": "Class LegendAnnotation A box containing symbol definitions e.g. meanings for colors in a graph. The 'Key' to the graph Inheritance System.Object LegendAnnotation Implements IAnnotation Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Terminal.Gui.Graphs Assembly : Terminal.Gui.dll Syntax public class LegendAnnotation : IAnnotation Constructors | Improve this Doc View Source LegendAnnotation(Rect) Creates a new empty legend at the given screen coordinates Declaration public LegendAnnotation(Rect legendBounds) Parameters Type Name Description Rect legendBounds Defines the area available for the legend to render in (within the graph). This is in screen units (i.e. not graph space) Properties | Improve this Doc View Source BeforeSeries Returns false i.e. Lengends render after series Declaration public bool BeforeSeries { get; } Property Value Type Description System.Boolean | Improve this Doc View Source Border True to draw a solid border around the legend. Defaults to true. This border will be within the Bounds and so reduces the width/height available for text by 2 Declaration public bool Border { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source Bounds Defines the screen area available for the legend to render in Declaration public Rect Bounds { get; set; } Property Value Type Description Rect Methods | Improve this Doc View Source AddEntry(GraphCellToRender, String) Adds an entry into the legend. Duplicate entries are permissable Declaration public void AddEntry(GraphCellToRender graphCellToRender, string text) Parameters Type Name Description GraphCellToRender graphCellToRender The symbol appearing on the graph that should appear in the legend System.String text Text to render on this line of the legend. Will be truncated if outside of Legend Bounds | Improve this Doc View Source Render(GraphView) Draws the Legend and all entries into the area within Bounds Declaration public void Render(GraphView graph) Parameters Type Name Description GraphView graph Implements IAnnotation"
  },
  "api/Terminal.Gui/Terminal.Gui.Graphs.MultiBarSeries.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.Graphs.MultiBarSeries.html",
    "title": "Class MultiBarSeries",
    "keywords": "Class MultiBarSeries Collection of BarSeries in which bars are clustered by category Inheritance System.Object MultiBarSeries Implements ISeries Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Terminal.Gui.Graphs Assembly : Terminal.Gui.dll Syntax public class MultiBarSeries : ISeries Constructors | Improve this Doc View Source MultiBarSeries(Int32, Single, Single, Attribute[]) Creates a new series of clustered bars. Declaration public MultiBarSeries(int numberOfBarsPerCategory, float barsEvery, float spacing, Attribute[] colors = null) Parameters Type Name Description System.Int32 numberOfBarsPerCategory Each category has this many bars System.Single barsEvery How far appart to put each category (in graph space) System.Single spacing How much spacing between bars in a category (should be less than barsEvery / numberOfBarsPerCategory ) Attribute [] colors Array of colors that define bar color in each category. Length must match numberOfBarsPerCategory Properties | Improve this Doc View Source Spacing The number of units of graph space between bars. Should be less than BarEvery Declaration public float Spacing { get; } Property Value Type Description System.Single | Improve this Doc View Source SubSeries Sub collections. Each series contains the bars for a different category. Thus SubSeries[0].Bars[0] is the first bar on the axis and SubSeries[1].Bars[0] is the second etc Declaration public IReadOnlyCollection<BarSeries> SubSeries { get; } Property Value Type Description System.Collections.Generic.IReadOnlyCollection < BarSeries > Methods | Improve this Doc View Source AddBars(String, Rune, Single[]) Adds a new cluster of bars Declaration public void AddBars(string label, Rune fill, params float[] values) Parameters Type Name Description System.String label System.Rune fill System.Single [] values Values for each bar in category, must match the number of bars per category | Improve this Doc View Source DrawSeries(GraphView, Rect, RectangleF) Draws all SubSeries Declaration public void DrawSeries(GraphView graph, Rect drawBounds, RectangleF graphBounds) Parameters Type Name Description GraphView graph Rect drawBounds RectangleF graphBounds Implements ISeries"
  },
  "api/Terminal.Gui/Terminal.Gui.Graphs.Orientation.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.Graphs.Orientation.html",
    "title": "Enum Orientation",
    "keywords": "Enum Orientation Direction of an element (horizontal or vertical) Namespace : Terminal.Gui.Graphs Assembly : Terminal.Gui.dll Syntax public enum Orientation Fields Name Description Horizontal Left to right Vertical Bottom to top"
  },
  "api/Terminal.Gui/Terminal.Gui.Graphs.PathAnnotation.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.Graphs.PathAnnotation.html",
    "title": "Class PathAnnotation",
    "keywords": "Class PathAnnotation Sequence of lines to connect points e.g. of a ScatterSeries Inheritance System.Object PathAnnotation Implements IAnnotation Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Terminal.Gui.Graphs Assembly : Terminal.Gui.dll Syntax public class PathAnnotation : IAnnotation Properties | Improve this Doc View Source BeforeSeries True to add line before plotting series. Defaults to false Declaration public bool BeforeSeries { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source LineColor Color for the line that connects points Declaration public Attribute? LineColor { get; set; } Property Value Type Description System.Nullable < Attribute > | Improve this Doc View Source LineRune The symbol that gets drawn along the line, defaults to '.' Declaration public Rune LineRune { get; set; } Property Value Type Description System.Rune | Improve this Doc View Source Points Points that should be connected. Lines will be drawn between points in the order they appear in the list Declaration public List<PointF> Points { get; set; } Property Value Type Description System.Collections.Generic.List < PointF > Methods | Improve this Doc View Source Render(GraphView) Draws lines connecting each of the Points Declaration public void Render(GraphView graph) Parameters Type Name Description GraphView graph Implements IAnnotation"
  },
  "api/Terminal.Gui/Terminal.Gui.Graphs.PathAnnotation.LineF.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.Graphs.PathAnnotation.LineF.html",
    "title": "Class PathAnnotation.LineF",
    "keywords": "Class PathAnnotation.LineF Describes two points in graph space and a line between them Inheritance System.Object PathAnnotation.LineF Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Terminal.Gui.Graphs Assembly : Terminal.Gui.dll Syntax public class LineF Constructors | Improve this Doc View Source LineF(PointF, PointF) Creates a new line between the points Declaration public LineF(PointF start, PointF end) Parameters Type Name Description PointF start PointF end Properties | Improve this Doc View Source End The end point of the line Declaration public PointF End { get; } Property Value Type Description PointF | Improve this Doc View Source Start The start of the line Declaration public PointF Start { get; } Property Value Type Description PointF"
  },
  "api/Terminal.Gui/Terminal.Gui.Graphs.ScatterSeries.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.Graphs.ScatterSeries.html",
    "title": "Class ScatterSeries",
    "keywords": "Class ScatterSeries Series composed of any number of discrete data points Inheritance System.Object ScatterSeries Implements ISeries Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Terminal.Gui.Graphs Assembly : Terminal.Gui.dll Syntax public class ScatterSeries : ISeries Properties | Improve this Doc View Source Fill The color and character that will be rendered in the console when there are point(s) in the corresponding graph space. Defaults to uncolored 'x' Declaration public GraphCellToRender Fill { get; set; } Property Value Type Description GraphCellToRender | Improve this Doc View Source Points Collection of each discrete point in the series Declaration public List<PointF> Points { get; set; } Property Value Type Description System.Collections.Generic.List < PointF > Methods | Improve this Doc View Source DrawSeries(GraphView, Rect, RectangleF) Draws all points directly onto the graph Declaration public void DrawSeries(GraphView graph, Rect drawBounds, RectangleF graphBounds) Parameters Type Name Description GraphView graph Rect drawBounds RectangleF graphBounds Implements ISeries"
  },
  "api/Terminal.Gui/Terminal.Gui.Graphs.TextAnnotation.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.Graphs.TextAnnotation.html",
    "title": "Class TextAnnotation",
    "keywords": "Class TextAnnotation Displays text at a given position (in screen space or graph space) Inheritance System.Object TextAnnotation Implements IAnnotation Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Terminal.Gui.Graphs Assembly : Terminal.Gui.dll Syntax public class TextAnnotation : IAnnotation Properties | Improve this Doc View Source BeforeSeries True to add text before plotting series. Defaults to false Declaration public bool BeforeSeries { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source GraphPosition The location in graph space to draw the Text . This annotation will only show if the point is in the current viewable area of the graph presented in the GraphView Declaration public PointF GraphPosition { get; set; } Property Value Type Description PointF | Improve this Doc View Source ScreenPosition The location on screen to draw the Text regardless of scroll/zoom settings. This overrides GraphPosition if specified. Declaration public Point? ScreenPosition { get; set; } Property Value Type Description System.Nullable < Point > | Improve this Doc View Source Text Text to display on the graph Declaration public string Text { get; set; } Property Value Type Description System.String Methods | Improve this Doc View Source DrawText(GraphView, Int32, Int32) Draws the Text at the given coordinates with truncation to avoid spilling over of the graph Declaration protected void DrawText(GraphView graph, int x, int y) Parameters Type Name Description GraphView graph System.Int32 x Screen x position to start drawing string System.Int32 y Screen y position to start drawing string | Improve this Doc View Source Render(GraphView) Draws the annotation Declaration public void Render(GraphView graph) Parameters Type Name Description GraphView graph Implements IAnnotation"
  },
  "api/Terminal.Gui/Terminal.Gui.Graphs.VerticalAxis.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.Graphs.VerticalAxis.html",
    "title": "Class VerticalAxis",
    "keywords": "Class VerticalAxis The vertical (i.e. Y axis) of a GraphView Inheritance System.Object Axis VerticalAxis Inherited Members Axis.Orientation Axis.Increment Axis.ShowLabelsEvery Axis.Visible Axis.LabelGetter Axis.Text Axis.Minimum Axis.Reset() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Terminal.Gui.Graphs Assembly : Terminal.Gui.dll Syntax public class VerticalAxis : Axis Constructors | Improve this Doc View Source VerticalAxis() Creates a new Vertical axis Declaration public VerticalAxis() Methods | Improve this Doc View Source DrawAxisLabel(GraphView, Int32, String) Draws the given text on the axis at y screenPosition . For the screen x position use GetAxisXPosition(GraphView) Declaration public override void DrawAxisLabel(GraphView graph, int screenPosition, string text) Parameters Type Name Description GraphView graph Graph being drawn onto System.Int32 screenPosition Number of rows from the top of the screen (i.e. down the axis) before rendering System.String text Text to render to the left of the axis tick. Ensure to set MarginLeft or ScrollOffset sufficient that it is visible Overrides Axis.DrawAxisLabel(GraphView, Int32, String) | Improve this Doc View Source DrawAxisLabels(GraphView) Draws axis Increment markers and labels Declaration public override void DrawAxisLabels(GraphView graph) Parameters Type Name Description GraphView graph Overrides Axis.DrawAxisLabels(GraphView) | Improve this Doc View Source DrawAxisLine(GraphView) Draws the vertical axis line Declaration public override void DrawAxisLine(GraphView graph) Parameters Type Name Description GraphView graph Overrides Axis.DrawAxisLine(GraphView) | Improve this Doc View Source DrawAxisLine(GraphView, Int32, Int32) Draws a vertical axis line at the given x , y screen coordinates Declaration protected override void DrawAxisLine(GraphView graph, int x, int y) Parameters Type Name Description GraphView graph System.Int32 x System.Int32 y Overrides Axis.DrawAxisLine(GraphView, Int32, Int32) | Improve this Doc View Source GetAxisXPosition(GraphView) Returns the X screen position of the origin (typically 0,0) of graph space. Return value is bounded by the screen i.e. the axis is always rendered even if the origin is offscreen. Declaration public int GetAxisXPosition(GraphView graph) Parameters Type Name Description GraphView graph Returns Type Description System.Int32"
  },
  "api/Terminal.Gui/Terminal.Gui.GraphView.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.GraphView.html",
    "title": "Class GraphView",
    "keywords": "Class GraphView Control for rendering graphs (bar, scatter etc) Inheritance System.Object Responder View GraphView Implements System.IDisposable System.ComponentModel.ISupportInitializeNotification System.ComponentModel.ISupportInitialize Inherited Members View.Added View.Removed View.Enter View.Leave View.MouseEnter View.MouseLeave View.MouseClick View.CanFocusChanged View.EnabledChanged View.VisibleChanged View.HotKeyChanged View.HotKey View.HotKeySpecifier View.Shortcut View.ShortcutTag View.ShortcutAction View.Data View.Driver View.Subviews View.TabIndexes View.TabIndex View.TabStop View.CanFocus View.Id View.IsCurrentTop View.WantMousePositionReports View.WantContinuousButtonPressed View.Frame View.LayoutStyle View.Bounds View.X View.Y View.Width View.Height View.ForceValidatePosDim View.GetMinWidthHeight(Size) View.SetMinWidthHeight() View.TextFormatter View.SuperView View.UpdateTextFormatterText() View.ProcessResizeView() View.SetNeedsDisplay() View.ClearLayoutNeeded() View.SetNeedsDisplay(Rect) View.SetChildNeedsDisplay() View.Add(View) View.Add(View[]) View.RemoveAll() View.Remove(View) View.BringSubviewToFront(View) View.SendSubviewToBack(View) View.SendSubviewBackwards(View) View.BringSubviewForward(View) View.Clear() View.Clear(Rect) View.ScreenToView(Int32, Int32) View.ClipToBounds() View.SetClip(Rect) View.DrawFrame(Rect, Int32, Boolean) View.DrawHotString(ustring, Attribute, Attribute) View.DrawHotString(ustring, Boolean, ColorScheme) View.Move(Int32, Int32, Boolean) View.PositionCursor() View.HasFocus View.OnAdded(View) View.OnRemoved(View) View.OnEnter(View) View.OnLeave(View) View.Focused View.MostFocused View.ColorScheme View.AddRune(Int32, Int32, Rune) View.ClearNeedsDisplay() View.DrawContent View.OnDrawContent(Rect) View.DrawContentComplete View.OnDrawContentComplete(Rect) View.SetFocus() View.KeyPress View.InvokeKeybindings(KeyEvent) View.AddKeyBinding(Key, Command[]) View.ReplaceKeyBinding(Key, Key) View.ContainsKeyBinding(Key) View.ClearKeybindings() View.ClearKeybinding(Key) View.ClearKeybinding(Command[]) View.AddCommand(Command, Func<Nullable<Boolean>>) View.GetSupportedCommands() View.GetKeyFromCommand(Command[]) View.ProcessHotKey(KeyEvent) View.ProcessColdKey(KeyEvent) View.KeyDown View.OnKeyDown(KeyEvent) View.KeyUp View.OnKeyUp(KeyEvent) View.EnsureFocus() View.FocusFirst() View.FocusLast() View.FocusPrev() View.FocusNext() View.LayoutStarted View.LayoutComplete View.Initialized View.LayoutSubviews() View.Text View.AutoSize View.PreserveTrailingSpaces View.TextAlignment View.VerticalTextAlignment View.TextDirection View.IsInitialized View.IsAdded View.Enabled View.Visible View.Border View.ToString() View.GetAutoSize() View.GetHotKeySpecifierLength(Boolean) View.GetTextFormatterBoundsSize() View.GetBoundsTextFormatterSize() View.OnMouseEnter(MouseEvent) View.OnMouseLeave(MouseEvent) View.OnMouseEvent(MouseEvent) View.OnMouseClick(View.MouseEventArgs) View.OnCanFocusChanged() View.OnEnabledChanged() View.OnVisibleChanged() View.Dispose(Boolean) View.BeginInit() View.EndInit() View.SetWidth(Int32, Int32) View.SetHeight(Int32, Int32) View.GetCurrentWidth(Int32) View.GetCurrentHeight(Int32) View.GetNormalColor() View.GetTopSuperView() Responder.MouseEvent(MouseEvent) Responder.Dispose() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Terminal.Gui Assembly : Terminal.Gui.dll Syntax public class GraphView : View, IDisposable, ISupportInitializeNotification, ISupportInitialize Constructors | Improve this Doc View Source GraphView() Creates a new graph with a 1 to 1 graph space with absolute layout Declaration public GraphView() Properties | Improve this Doc View Source Annotations Elements drawn into graph after series have been drawn e.g. Legends etc Declaration public List<IAnnotation> Annotations { get; } Property Value Type Description System.Collections.Generic.List < IAnnotation > | Improve this Doc View Source AxisX Horizontal axis Declaration public HorizontalAxis AxisX { get; set; } Property Value Type Description HorizontalAxis | Improve this Doc View Source AxisY Vertical axis Declaration public VerticalAxis AxisY { get; set; } Property Value Type Description VerticalAxis | Improve this Doc View Source CellSize Translates console width/height into graph space. Defaults to 1 row/col of console space being 1 unit of graph space. Declaration public PointF CellSize { get; set; } Property Value Type Description PointF | Improve this Doc View Source GraphColor The color of the background of the graph and axis/labels Declaration public Attribute? GraphColor { get; set; } Property Value Type Description System.Nullable < Attribute > | Improve this Doc View Source MarginBottom Amount of space to leave on bottom of control. Graph content ( Series ) will not be rendered in margins but axis labels may be Declaration public uint MarginBottom { get; set; } Property Value Type Description System.UInt32 | Improve this Doc View Source MarginLeft Amount of space to leave on left of control. Graph content ( Series ) will not be rendered in margins but axis labels may be Declaration public uint MarginLeft { get; set; } Property Value Type Description System.UInt32 | Improve this Doc View Source ScrollOffset The graph space position of the bottom left of the control. Changing this scrolls the viewport around in the graph Declaration public PointF ScrollOffset { get; set; } Property Value Type Description PointF | Improve this Doc View Source Series Collection of data series that are rendered in the graph Declaration public List<ISeries> Series { get; } Property Value Type Description System.Collections.Generic.List < ISeries > Methods | Improve this Doc View Source DrawLine(Point, Point, Rune) Draws a line between two points in screen space. Can be diagonals. Declaration public void DrawLine(Point start, Point end, Rune symbol) Parameters Type Name Description Point start Point end System.Rune symbol The symbol to use for the line | Improve this Doc View Source GraphSpaceToScreen(PointF) Calculates the screen location for a given point in graph space. Bear in mind these be off screen Declaration public Point GraphSpaceToScreen(PointF location) Parameters Type Name Description PointF location Point in graph space that may or may not be represented in the visible area of graph currently presented. E.g. 0,0 for origin Returns Type Description Point Screen position (Column/Row) which would be used to render the graph location . Note that this can be outside the current client area of the control | Improve this Doc View Source PageDown() Scrolls the graph down 1 page Declaration public void PageDown() | Improve this Doc View Source PageUp() Scrolls the graph up 1 page Declaration public void PageUp() | Improve this Doc View Source ProcessKey(KeyEvent) Declaration public override bool ProcessKey(KeyEvent keyEvent) Parameters Type Name Description KeyEvent keyEvent Returns Type Description System.Boolean Overrides View.ProcessKey(KeyEvent) | Improve this Doc View Source Redraw(Rect) Declaration public override void Redraw(Rect bounds) Parameters Type Name Description Rect bounds Overrides View.Redraw(Rect) | Improve this Doc View Source Reset() Clears all settings configured on the graph and resets all properties to default values ( CellSize , ScrollOffset etc) Declaration public void Reset() | Improve this Doc View Source ScreenToGraphSpace(Int32, Int32) Returns the section of the graph that is represented by the given screen position Declaration public RectangleF ScreenToGraphSpace(int col, int row) Parameters Type Name Description System.Int32 col System.Int32 row Returns Type Description RectangleF | Improve this Doc View Source ScreenToGraphSpace(Rect) Returns the section of the graph that is represented by the screen area Declaration public RectangleF ScreenToGraphSpace(Rect screenArea) Parameters Type Name Description Rect screenArea Returns Type Description RectangleF | Improve this Doc View Source Scroll(Single, Single) Scrolls the view by a given number of units in graph space. See CellSize to translate this into rows/cols Declaration public void Scroll(float offsetX, float offsetY) Parameters Type Name Description System.Single offsetX System.Single offsetY | Improve this Doc View Source SetDriverColorToGraphColor() Sets the color attribute of Driver to the GraphColor (if defined) or ColorScheme otherwise. Declaration public void SetDriverColorToGraphColor() Implements System.IDisposable System.ComponentModel.ISupportInitializeNotification System.ComponentModel.ISupportInitialize"
  },
  "api/Terminal.Gui/Terminal.Gui.HexView.HexViewEventArgs.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.HexView.HexViewEventArgs.html",
    "title": "Class HexView.HexViewEventArgs",
    "keywords": "Class HexView.HexViewEventArgs Defines the event arguments for PositionChanged event. Inheritance System.Object System.EventArgs HexView.HexViewEventArgs Inherited Members System.EventArgs.Empty System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Terminal.Gui Assembly : Terminal.Gui.dll Syntax public class HexViewEventArgs : EventArgs Constructors | Improve this Doc View Source HexViewEventArgs(Int64, Point, Int32) Initializes a new instance of HexView.HexViewEventArgs Declaration public HexViewEventArgs(long pos, Point cursor, int lineLength) Parameters Type Name Description System.Int64 pos The character position. Point cursor The cursor position. System.Int32 lineLength Line bytes length. Properties | Improve this Doc View Source BytesPerLine The bytes length per line. Declaration public int BytesPerLine { get; } Property Value Type Description System.Int32 | Improve this Doc View Source CursorPosition Gets the current cursor position starting at one for both, line and column. Declaration public Point CursorPosition { get; } Property Value Type Description Point | Improve this Doc View Source Position Gets the current character position starting at one, related to the System.IO.Stream . Declaration public long Position { get; } Property Value Type Description System.Int64"
  },
  "api/Terminal.Gui/Terminal.Gui.HexView.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.HexView.html",
    "title": "Class HexView",
    "keywords": "Class HexView An hex viewer and editor View over a System.IO.Stream Inheritance System.Object Responder View HexView Implements System.IDisposable System.ComponentModel.ISupportInitializeNotification System.ComponentModel.ISupportInitialize Remarks HexView provides a hex editor on top of a seekable System.IO.Stream with the left side showing an hex dump of the values in the System.IO.Stream and the right side showing the contents (filtered to non-control sequence ASCII characters). Users can switch from one side to the other by using the tab key. To enable editing, set AllowEdits to true. When AllowEdits is true the user can make changes to the hexadecimal values of the System.IO.Stream . Any changes are tracked in the Edits property (a System.Collections.Generic.SortedDictionary`2 ) indicating the position where the changes were made and the new values. A convenience method, ApplyEdits(Stream) will apply the edits to the System.IO.Stream . Control the first byte shown by setting the DisplayStart property to an offset in the stream. Inherited Members View.Added View.Removed View.Enter View.Leave View.MouseEnter View.MouseLeave View.MouseClick View.CanFocusChanged View.EnabledChanged View.VisibleChanged View.HotKeyChanged View.HotKey View.HotKeySpecifier View.Shortcut View.ShortcutTag View.ShortcutAction View.Data View.Driver View.Subviews View.TabIndexes View.TabIndex View.TabStop View.CanFocus View.Id View.IsCurrentTop View.WantMousePositionReports View.WantContinuousButtonPressed View.LayoutStyle View.Bounds View.X View.Y View.Width View.Height View.ForceValidatePosDim View.GetMinWidthHeight(Size) View.SetMinWidthHeight() View.TextFormatter View.SuperView View.UpdateTextFormatterText() View.ProcessResizeView() View.SetNeedsDisplay() View.ClearLayoutNeeded() View.SetNeedsDisplay(Rect) View.SetChildNeedsDisplay() View.Add(View) View.Add(View[]) View.RemoveAll() View.Remove(View) View.BringSubviewToFront(View) View.SendSubviewToBack(View) View.SendSubviewBackwards(View) View.BringSubviewForward(View) View.Clear() View.Clear(Rect) View.ScreenToView(Int32, Int32) View.ClipToBounds() View.SetClip(Rect) View.DrawFrame(Rect, Int32, Boolean) View.DrawHotString(ustring, Attribute, Attribute) View.DrawHotString(ustring, Boolean, ColorScheme) View.Move(Int32, Int32, Boolean) View.HasFocus View.OnAdded(View) View.OnRemoved(View) View.OnLeave(View) View.Focused View.MostFocused View.ColorScheme View.AddRune(Int32, Int32, Rune) View.ClearNeedsDisplay() View.DrawContent View.OnDrawContent(Rect) View.DrawContentComplete View.OnDrawContentComplete(Rect) View.SetFocus() View.KeyPress View.InvokeKeybindings(KeyEvent) View.AddKeyBinding(Key, Command[]) View.ReplaceKeyBinding(Key, Key) View.ContainsKeyBinding(Key) View.ClearKeybindings() View.ClearKeybinding(Key) View.ClearKeybinding(Command[]) View.AddCommand(Command, Func<Nullable<Boolean>>) View.GetSupportedCommands() View.GetKeyFromCommand(Command[]) View.ProcessHotKey(KeyEvent) View.ProcessColdKey(KeyEvent) View.KeyDown View.OnKeyDown(KeyEvent) View.KeyUp View.OnKeyUp(KeyEvent) View.EnsureFocus() View.FocusFirst() View.FocusLast() View.FocusPrev() View.FocusNext() View.LayoutStarted View.LayoutComplete View.Initialized View.LayoutSubviews() View.Text View.AutoSize View.PreserveTrailingSpaces View.TextAlignment View.VerticalTextAlignment View.TextDirection View.IsInitialized View.IsAdded View.Enabled View.Visible View.Border View.ToString() View.GetAutoSize() View.GetHotKeySpecifierLength(Boolean) View.GetTextFormatterBoundsSize() View.GetBoundsTextFormatterSize() View.OnMouseEnter(MouseEvent) View.OnMouseLeave(MouseEvent) View.OnMouseEvent(MouseEvent) View.OnMouseClick(View.MouseEventArgs) View.OnCanFocusChanged() View.OnEnabledChanged() View.OnVisibleChanged() View.Dispose(Boolean) View.BeginInit() View.EndInit() View.SetWidth(Int32, Int32) View.SetHeight(Int32, Int32) View.GetCurrentWidth(Int32) View.GetCurrentHeight(Int32) View.GetNormalColor() View.GetTopSuperView() Responder.Dispose() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Terminal.Gui Assembly : Terminal.Gui.dll Syntax public class HexView : View, IDisposable, ISupportInitializeNotification, ISupportInitialize Constructors | Improve this Doc View Source HexView() Initializes a HexView class using Computed layout. Declaration public HexView() | Improve this Doc View Source HexView(Stream) Initializes a HexView class using Computed layout. Declaration public HexView(Stream source) Parameters Type Name Description System.IO.Stream source The System.IO.Stream to view and edit as hex, this System.IO.Stream must support seeking, or an exception will be thrown. Properties | Improve this Doc View Source AllowEdits Gets or sets whether this HexView allow editing of the System.IO.Stream of the underlying System.IO.Stream . Declaration public bool AllowEdits { get; set; } Property Value Type Description System.Boolean true if allow edits; otherwise, false . | Improve this Doc View Source BytesPerLine The bytes length per line. Declaration public int BytesPerLine { get; } Property Value Type Description System.Int32 | Improve this Doc View Source CursorPosition Gets the current cursor position starting at one for both, line and column. Declaration public Point CursorPosition { get; } Property Value Type Description Point | Improve this Doc View Source DesiredCursorVisibility Get / Set the wished cursor when the field is focused Declaration public CursorVisibility DesiredCursorVisibility { get; set; } Property Value Type Description CursorVisibility | Improve this Doc View Source DisplayStart Sets or gets the offset into the System.IO.Stream that will displayed at the top of the HexView Declaration public long DisplayStart { get; set; } Property Value Type Description System.Int64 The display start. | Improve this Doc View Source Edits Gets a System.Collections.Generic.SortedDictionary`2 describing the edits done to the HexView . Each Key indicates an offset where an edit was made and the Value is the changed byte. Declaration public IReadOnlyDictionary<long, byte> Edits { get; } Property Value Type Description System.Collections.Generic.IReadOnlyDictionary < System.Int64 , System.Byte > The edits. | Improve this Doc View Source Frame Declaration public override Rect Frame { get; set; } Property Value Type Description Rect Overrides View.Frame | Improve this Doc View Source Position Gets the current character position starting at one, related to the System.IO.Stream . Declaration public long Position { get; } Property Value Type Description System.Int64 | Improve this Doc View Source Source Sets or gets the System.IO.Stream the HexView is operating on; the stream must support seeking ( System.IO.Stream.CanSeek == true). Declaration public Stream Source { get; set; } Property Value Type Description System.IO.Stream The source. Methods | Improve this Doc View Source ApplyEdits(Stream) This method applies and edits made to the System.IO.Stream and resets the contents of the Edits property. Declaration public void ApplyEdits(Stream stream = null) Parameters Type Name Description System.IO.Stream stream If provided also applies the changes to the passed System.IO.Stream | Improve this Doc View Source DiscardEdits() This method discards the edits made to the System.IO.Stream by resetting the contents of the Edits property. Declaration public void DiscardEdits() | Improve this Doc View Source MouseEvent(MouseEvent) Declaration public override bool MouseEvent(MouseEvent me) Parameters Type Name Description MouseEvent me Returns Type Description System.Boolean Overrides Responder.MouseEvent(MouseEvent) | Improve this Doc View Source OnEdited(KeyValuePair<Int64, Byte>) Method used to invoke the Edited event passing the System.Collections.Generic.KeyValuePair<TKey, TValue> . Declaration public virtual void OnEdited(KeyValuePair<long, byte> keyValuePair) Parameters Type Name Description System.Collections.Generic.KeyValuePair < System.Int64 , System.Byte > keyValuePair The key value pair. | Improve this Doc View Source OnEnter(View) Declaration public override bool OnEnter(View view) Parameters Type Name Description View view Returns Type Description System.Boolean Overrides View.OnEnter(View) | Improve this Doc View Source OnPositionChanged() Method used to invoke the PositionChanged event passing the HexView.HexViewEventArgs arguments. Declaration public virtual void OnPositionChanged() | Improve this Doc View Source PositionCursor() Declaration public override void PositionCursor() Overrides View.PositionCursor() | Improve this Doc View Source ProcessKey(KeyEvent) Declaration public override bool ProcessKey(KeyEvent keyEvent) Parameters Type Name Description KeyEvent keyEvent Returns Type Description System.Boolean Overrides View.ProcessKey(KeyEvent) | Improve this Doc View Source Redraw(Rect) Declaration public override void Redraw(Rect bounds) Parameters Type Name Description Rect bounds Overrides View.Redraw(Rect) Events | Improve this Doc View Source Edited Event to be invoked when an edit is made on the System.IO.Stream . Declaration public event Action<KeyValuePair<long, byte>> Edited Event Type Type Description System.Action < System.Collections.Generic.KeyValuePair < System.Int64 , System.Byte >> | Improve this Doc View Source PositionChanged Event to be invoked when the position and cursor position changes. Declaration public event Action<HexView.HexViewEventArgs> PositionChanged Event Type Type Description System.Action < HexView.HexViewEventArgs > Implements System.IDisposable System.ComponentModel.ISupportInitializeNotification System.ComponentModel.ISupportInitialize"
  },
  "api/Terminal.Gui/Terminal.Gui.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.html",
    "title": "Namespace Terminal.Gui",
    "keywords": "Namespace Terminal.Gui Classes Application A static, singleton class providing the main application driver for Terminal.Gui apps. Application.ResizedEventArgs Event arguments for the Resized event. Application.RunState Captures the execution state for the provided Toplevel view. Autocomplete Renders an overlay on another view at a given point that allows selecting from a range of 'autocomplete' options. Border Draws a border, background, or both around another element. Border.ToplevelContainer A sealed Toplevel derived class to implement Border feature. This is only a wrapper to get borders on a toplevel and is recommended using another derived, like Window where is possible to have borders with or without border line or spacing around. Button Button is a View that provides an item that invokes an System.Action when activated by the user. CheckBox The CheckBox View shows an on/off toggle that the user can set Clipboard Provides cut, copy, and paste support for the clipboard with OS interaction. ClipboardBase Shared abstract class to enforce rules from the implementation of the IClipboard interface. ColorPicker The ColorPicker View Color picker. Colors The default ColorScheme s for the application. ColorScheme Color scheme definitions, they cover some common scenarios and are used typically in containers such as Window and FrameView to set the scheme that is used by all the views contained inside. ComboBox Provides a drop-down list of items the user can select from. ConsoleDriver ConsoleDriver is an abstract class that defines the requirements for a console driver. There are currently three implementations: Terminal.Gui.CursesDriver (for Unix and Mac), Terminal.Gui.WindowsDriver , and Terminal.Gui.NetDriver that uses the .NET Console API. ContextMenu A context menu window derived from MenuBar containing menu items which can be opened in any position. DateField Simple Date editing View DateTimeEventArgs<T> Defines the event arguments for DateChanged and TimeChanged events. Dialog The Dialog View is a Window that by default is centered and contains one or more Button s. It defaults to the Dialog color scheme and has a 1 cell padding around the edges. Dim Dim properties of a View to control the position. FakeConsole FakeDriver Implements a mock ConsoleDriver for unit testing FakeMainLoop Mainloop intended to be used with the .NET System.Console API, and can be used on Windows and Unix, it is cross platform but lacks things like file descriptor monitoring. FileDialog Base class for the OpenDialog and the SaveDialog FrameView The FrameView is a container frame that draws a frame around the contents. It is similar to a GroupBox in Windows. GraphView Control for rendering graphs (bar, scatter etc) HexView An hex viewer and editor View over a System.IO.Stream HexView.HexViewEventArgs Defines the event arguments for PositionChanged event. KeyEvent Describes a keyboard event. KeyModifiers Identifies the state of the \"shift\"-keys within a event. Label The Label View displays a string at a given position and supports multiple lines separated by newline characters. Multi-line Labels support word wrap. LineView A straight line control either horizontal or vertical ListView ListView View renders a scrollable list of data where each item can be activated to perform an action. ListViewItemEventArgs System.EventArgs for ListView events. ListViewRowEventArgs System.EventArgs used by the RowRender event. ListWrapper Implements an IListDataSource that renders arbitrary System.Collections.IList instances for ListView . MainLoop Simple main loop implementation that can be used to monitor file descriptor, run timers and idle handlers. MainLoop.Timeout Provides data for timers running manipulation. MenuBar Provides a menu bar with drop-down and cascading menus. MenuBarItem A MenuBarItem contains MenuBarItem s or MenuItem s. MenuClosingEventArgs An System.EventArgs which allows passing a cancelable menu closing event. MenuItem A MenuItem has a title, an associated help text, and an action to execute on activation. MenuOpeningEventArgs An System.EventArgs which allows passing a cancelable menu opening event or replacing with a new MenuBarItem . MessageBox MessageBox displays a modal message to the user, with a title, a message and a series of options that the user can choose from. OpenDialog The OpenDialog provides an interactive dialog box for users to select files or directories. PanelView A container for single Child that will allow to drawn Border in two ways. If UsePanelFrame the borders and the child will be accommodated in the available panel size, otherwise the panel will be resized based on the child and borders thickness sizes. Pos Describes the position of a View which can be an absolute value, a percentage, centered, or relative to the ending dimension. Integer values are implicitly convertible to an absolute Pos . These objects are created using the static methods Percent, AnchorEnd, and Center. The Pos objects can be combined with the addition and subtraction operators. ProgressBar A Progress Bar view that can indicate progress of an activity visually. RadioGroup Displays a group of labels each with a selected indicator. Only one of those can be selected at a given time. Responder Responder base class implemented by objects that want to participate on keyboard and mouse input. SaveDialog The SaveDialog provides an interactive dialog box for users to pick a file to save. ScrollBarView ScrollBarViews are views that display a 1-character scrollbar, either horizontal or vertical ScrollView Scrollviews are views that present a window into a virtual space where subviews are added. Similar to the iOS UIScrollView. SelectedItemChangedArgs Event arguments for the SelectedItemChagned event. ShortcutHelper Represents a helper to manipulate shortcut keys used on views. StackExtensions Extension of System.Collections.Generic.Stack<T> helper to work with specific System.Collections.Generic.IEqualityComparer<T> StatusBar A status bar is a View that snaps to the bottom of a Toplevel displaying set of StatusItem s. The StatusBar should be context sensitive. This means, if the main menu and an open text editor are visible, the items probably shown will be ~F1~ Help ~F2~ Save ~F3~ Load. While a dialog to ask a file to load is executed, the remaining commands will probably be ~F1~ Help. So for each context must be a new instance of a statusbar. StatusItem StatusItem objects are contained by StatusBar View s. Each StatusItem has a title, a shortcut (hotkey), and an Action that will be invoked when the Shortcut is pressed. The Shortcut will be a global hotkey for the application in the current context of the screen. The colour of the Title will be changed after each ~. A Title set to `~F1~ Help` will render as *F1* using HotNormal and *Help* as HotNormal . TableView View for tabular data based on a System.Data.DataTable . See TableView Deep Dive for more information . TableView.CellActivatedEventArgs Defines the event arguments for CellActivated event TableView.CellColorGetterArgs Arguments for a TableView.CellColorGetterDelegate . Describes a cell for which a rendering ColorScheme is being sought TableView.ColumnStyle Describes how to render a given column in a TableView including Alignment and textual representation of cells (e.g. date formats) See TableView Deep Dive for more information . TableView.RowColorGetterArgs Arguments for TableView.RowColorGetterDelegate . Describes a row of data in a System.Data.DataTable for which ColorScheme is sought. TableView.SelectedCellChangedEventArgs Defines the event arguments for SelectedCellChanged TableView.TableSelection Describes a selected region of the table TableView.TableStyle Defines rendering options that affect how the table is displayed. See TableView Deep Dive for more information . TabView Control that hosts multiple sub views, presenting a single one at once TabView.Tab A single tab in a TabView TabView.TabChangedEventArgs Describes a change in SelectedTab TabView.TabStyle Describes render stylistic selections of a TabView TextChangingEventArgs An System.EventArgs which allows passing a cancelable new text value event. TextField Single-line text entry View TextFieldAutocomplete Renders an overlay on another view at a given point that allows selecting from a range of 'autocomplete' options. An implementation on a TextField. TextFormatter Provides text formatting capabilities for console apps. Supports, hotkeys, horizontal alignment, multiple lines, and word-based line wrap. TextValidateField Text field that validates input through a ITextValidateProvider TextView Multi-line text editing View TextViewAutocomplete Renders an overlay on another view at a given point that allows selecting from a range of 'autocomplete' options. An implementation on a TextView. TimeField Time editing View Toplevel Toplevel views can be modally executed. They are used for both an application's main view (filling the entire screeN and for pop-up views such as Dialog , MessageBox , and Wizard . ToplevelClosingEventArgs System.EventArgs implementation for the Closing event. ToplevelComparer Implements the System.Collections.Generic.IComparer<T> to sort the Toplevel from the MdiChildes if needed. ToplevelEqualityComparer Implements the System.Collections.Generic.IEqualityComparer<T> for comparing two Toplevel s used by StackExtensions . TreeView Convenience implementation of generic TreeView<T> for any tree were all nodes implement ITreeNode . See TreeView Deep Dive for more information . TreeView<T> Hierarchical tree view with expandable branches. Branch objects are dynamically determined when expanded using a user defined ITreeBuilder<T> See TreeView Deep Dive for more information . View View is the base class for all views on the screen and represents a visible element that can render itself and contains zero or more nested views. View.FocusEventArgs Defines the event arguments for Terminal.Gui.View.SetFocus(Terminal.Gui.View) View.KeyEventEventArgs Defines the event arguments for KeyEvent View.LayoutEventArgs Event arguments for the LayoutComplete event. View.MouseEventArgs Specifies the event arguments for MouseEvent Window A Toplevel View that draws a border around its Frame with a Title at the top. Window.TitleEventArgs An System.EventArgs which allows passing a cancelable new Title value event. Wizard Provides navigation and a user interface (UI) to collect related data across multiple steps. Each step ( Wizard.WizardStep ) can host arbitrary View s, much like a Dialog . Each step also has a pane for help text. Along the bottom of the Wizard view are customizable buttons enabling the user to navigate forward and backward through the Wizard. Wizard.StepChangeEventArgs System.EventArgs for Wizard.WizardStep events. Wizard.WizardButtonEventArgs System.EventArgs for Wizard.WizardStep transition events. Wizard.WizardStep Represents a basic step that is displayed in a Wizard . The Wizard.WizardStep view is divided horizontally in two. On the left is the content view where View s can be added, On the right is the help for the step. Set HelpText to set the help text. If the help text is empty the help pane will not be shown. If there are no Views added to the WizardStep the HelpText (if not empty) will fill the wizard step. Wizard.WizardStep.TitleEventArgs An System.EventArgs which allows passing a cancelable new Title value event. Structs Attribute Attributes are used as elements that contain both a foreground and a background or platform specific features MouseEvent Describes a mouse event Point Represents an ordered pair of integer x- and y-coordinates that defines a point in a two-dimensional plane. PointF Represents an ordered pair of x and y coordinates that define a point in a two-dimensional plane. Rect Stores a set of four integers that represent the location and size of a rectangle RectangleF Stores the location and size of a rectangular region. Size Stores an ordered pair of integers, which specify a Height and Width. SizeF Represents the size of a rectangular region with an ordered pair of width and height. Thickness Describes the thickness of a frame around a rectangle. Four System.Int32 values describe the Left , Top , Right , and Bottom sides of the rectangle, respectively. Interfaces IAutocomplete Renders an overlay on another view at a given point that allows selecting from a range of 'autocomplete' options. IClipboard Definition to interact with the OS clipboard. IListDataSource Implement IListDataSource to provide custom rendering for a ListView . IMainLoopDriver Public interface to create your own platform specific main loop driver. ITreeView Interface for all non generic members of TreeView<T> See TreeView Deep Dive for more information . Enums BorderStyle Specifies the border style for a View and to be used by the Border class. Color Basic colors that can be used to set the foreground and background colors in console applications. Command Actions which can be performed by the application or bound to keys in a View control. ConsoleDriver.DiagnosticFlags Enables diagnostic functions CursorVisibility Cursors Visibility that are displayed Dialog.ButtonAlignments Determines the horizontal alignment of the Dialog buttons. DisplayModeLayout Used for choose the display mode of this RadioGroup Key The Key enumeration contains special encoding for some keys, but can also encode all the unicode values that can be passed. LayoutStyle Determines the LayoutStyle for a view, if Absolute, during LayoutSubviews, the value from the Frame will be used, if the value is Computed, then the Frame will be updated from the X, Y Pos objects and the Width and Height Dim objects. MenuItemCheckStyle Specifies how a MenuItem shows selection state. MouseFlags Mouse flags reported in MouseEvent . OpenDialog.OpenMode Determine which System.IO type to open. ProgressBarFormat Specifies the format that a ProgressBar uses to indicate the visual presentation. ProgressBarStyle Specifies the style that a ProgressBar uses to indicate the progress of an operation. TextAlignment Text alignment enumeration, controls how text is displayed. TextDirection Text direction enumeration, controls how text is displayed. VerticalTextAlignment Vertical text alignment enumeration, controls how text is displayed. Delegates TableView.CellColorGetterDelegate Delegate for providing color to TableView cells based on the value being rendered TableView.RowColorGetterDelegate Delegate for providing color for a whole row of a TableView"
  },
  "api/Terminal.Gui/Terminal.Gui.IAutocomplete.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.IAutocomplete.html",
    "title": "Interface IAutocomplete",
    "keywords": "Interface IAutocomplete Renders an overlay on another view at a given point that allows selecting from a range of 'autocomplete' options. Namespace : Terminal.Gui Assembly : Terminal.Gui.dll Syntax public interface IAutocomplete Properties | Improve this Doc View Source AllSuggestions The full set of all strings that can be suggested. Declaration List<string> AllSuggestions { get; set; } Property Value Type Description System.Collections.Generic.List < System.String > | Improve this Doc View Source CloseKey The key that the user can press to close the currently popped autocomplete menu Declaration Key CloseKey { get; set; } Property Value Type Description Key | Improve this Doc View Source ColorScheme The colors to use to render the overlay. Accessing this property before the Application has been initialized will cause an error Declaration ColorScheme ColorScheme { get; set; } Property Value Type Description ColorScheme | Improve this Doc View Source HostControl The host control that will use autocomplete. Declaration View HostControl { get; set; } Property Value Type Description View | Improve this Doc View Source MaxHeight The maximum number of visible rows in the autocomplete dropdown to render Declaration int MaxHeight { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source MaxWidth The maximum width of the autocomplete dropdown Declaration int MaxWidth { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source PopupInsideContainer Gets or sets where the popup will be displayed. Declaration bool PopupInsideContainer { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source Reopen The key that the user can press to reopen the currently popped autocomplete menu Declaration Key Reopen { get; set; } Property Value Type Description Key | Improve this Doc View Source SelectedIdx The currently selected index into Suggestions that the user has highlighted Declaration int SelectedIdx { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source SelectionKey The key that the user must press to accept the currently selected autocomplete suggestion Declaration Key SelectionKey { get; set; } Property Value Type Description Key | Improve this Doc View Source Suggestions The strings that form the current list of suggestions to render based on what the user has typed so far. Declaration ReadOnlyCollection<string> Suggestions { get; set; } Property Value Type Description System.Collections.ObjectModel.ReadOnlyCollection < System.String > | Improve this Doc View Source Visible True if the autocomplete should be considered open and visible Declaration bool Visible { get; set; } Property Value Type Description System.Boolean Methods | Improve this Doc View Source ClearSuggestions() Clears Suggestions Declaration void ClearSuggestions() | Improve this Doc View Source GenerateSuggestions() Populates Suggestions with all strings in AllSuggestions that match with the current cursor position/text in the HostControl . Declaration void GenerateSuggestions() | Improve this Doc View Source MouseEvent(MouseEvent, Boolean) Handle mouse events before HostControl e.g. to make mouse events like report/click apply to the autocomplete control instead of changing the cursor position in the underlying text view. Declaration bool MouseEvent(MouseEvent me, bool fromHost = false) Parameters Type Name Description MouseEvent me The mouse event. System.Boolean fromHost If was called from the popup or from the host. Returns Type Description System.Boolean true if the mouse can be handled false otherwise. | Improve this Doc View Source ProcessKey(KeyEvent) Handle key events before HostControl e.g. to make key events like up/down apply to the autocomplete control instead of changing the cursor position in the underlying text view. Declaration bool ProcessKey(KeyEvent kb) Parameters Type Name Description KeyEvent kb The key event. Returns Type Description System.Boolean true if the key can be handled false otherwise. | Improve this Doc View Source RenderOverlay(Point) Renders the autocomplete dialog inside the given HostControl at the given point. Declaration void RenderOverlay(Point renderAt) Parameters Type Name Description Point renderAt"
  },
  "api/Terminal.Gui/Terminal.Gui.IClipboard.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.IClipboard.html",
    "title": "Interface IClipboard",
    "keywords": "Interface IClipboard Definition to interact with the OS clipboard. Namespace : Terminal.Gui Assembly : Terminal.Gui.dll Syntax public interface IClipboard Properties | Improve this Doc View Source IsSupported Returns true if the environmental dependencies are in place to interact with the OS clipboard. Declaration bool IsSupported { get; } Property Value Type Description System.Boolean Methods | Improve this Doc View Source GetClipboardData() Get the operation system clipboard. Declaration string GetClipboardData() Returns Type Description System.String Exceptions Type Condition System.NotSupportedException Thrown if it was not possible to read the clipboard contents. | Improve this Doc View Source SetClipboardData(String) Sets the operation system clipboard. Declaration void SetClipboardData(string text) Parameters Type Name Description System.String text Exceptions Type Condition System.NotSupportedException Thrown if it was not possible to set the clipboard contents. | Improve this Doc View Source TryGetClipboardData(out String) Gets the operation system clipboard if possible. Declaration bool TryGetClipboardData(out string result) Parameters Type Name Description System.String result Clipboard contents read Returns Type Description System.Boolean true if it was possible to read the OS clipboard. | Improve this Doc View Source TrySetClipboardData(String) Sets the operation system clipboard if possible. Declaration bool TrySetClipboardData(string text) Parameters Type Name Description System.String text Returns Type Description System.Boolean True if the clipboard content was set successfully."
  },
  "api/Terminal.Gui/Terminal.Gui.IListDataSource.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.IListDataSource.html",
    "title": "Interface IListDataSource",
    "keywords": "Interface IListDataSource Implement IListDataSource to provide custom rendering for a ListView . Namespace : Terminal.Gui Assembly : Terminal.Gui.dll Syntax public interface IListDataSource Properties | Improve this Doc View Source Count Returns the number of elements to display Declaration int Count { get; } Property Value Type Description System.Int32 | Improve this Doc View Source Length Returns the maximum length of elements to display Declaration int Length { get; } Property Value Type Description System.Int32 Methods | Improve this Doc View Source IsMarked(Int32) Should return whether the specified item is currently marked. Declaration bool IsMarked(int item) Parameters Type Name Description System.Int32 item Item index. Returns Type Description System.Boolean true , if marked, false otherwise. | Improve this Doc View Source Render(ListView, ConsoleDriver, Boolean, Int32, Int32, Int32, Int32, Int32) This method is invoked to render a specified item, the method should cover the entire provided width. Declaration void Render(ListView container, ConsoleDriver driver, bool selected, int item, int col, int line, int width, int start = 0) Parameters Type Name Description ListView container The list view to render. ConsoleDriver driver The console driver to render. System.Boolean selected Describes whether the item being rendered is currently selected by the user. System.Int32 item The index of the item to render, zero for the first item and so on. System.Int32 col The column where the rendering will start System.Int32 line The line where the rendering will be done. System.Int32 width The width that must be filled out. System.Int32 start The index of the string to be displayed. | Improve this Doc View Source SetMark(Int32, Boolean) Flags the item as marked. Declaration void SetMark(int item, bool value) Parameters Type Name Description System.Int32 item Item index. System.Boolean value If set to true value. | Improve this Doc View Source ToList() Return the source as IList. Declaration IList ToList() Returns Type Description System.Collections.IList"
  },
  "api/Terminal.Gui/Terminal.Gui.IMainLoopDriver.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.IMainLoopDriver.html",
    "title": "Interface IMainLoopDriver",
    "keywords": "Interface IMainLoopDriver Public interface to create your own platform specific main loop driver. Namespace : Terminal.Gui Assembly : Terminal.Gui.dll Syntax public interface IMainLoopDriver Methods | Improve this Doc View Source EventsPending(Boolean) Must report whether there are any events pending, or even block waiting for events. Declaration bool EventsPending(bool wait) Parameters Type Name Description System.Boolean wait If set to true wait until an event is available, otherwise return immediately. Returns Type Description System.Boolean true , if there were pending events, false otherwise. | Improve this Doc View Source MainIteration() The iteration function. Declaration void MainIteration() | Improve this Doc View Source Setup(MainLoop) Initializes the main loop driver, gets the calling main loop for the initialization. Declaration void Setup(MainLoop mainLoop) Parameters Type Name Description MainLoop mainLoop Main loop. | Improve this Doc View Source Wakeup() Wakes up the mainloop that might be waiting on input, must be thread safe. Declaration void Wakeup()"
  },
  "api/Terminal.Gui/Terminal.Gui.ITreeView.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.ITreeView.html",
    "title": "Interface ITreeView",
    "keywords": "Interface ITreeView Interface for all non generic members of TreeView<T> See TreeView Deep Dive for more information . Namespace : Terminal.Gui Assembly : Terminal.Gui.dll Syntax public interface ITreeView Properties | Improve this Doc View Source Style Contains options for changing how the tree is rendered Declaration TreeStyle Style { get; set; } Property Value Type Description TreeStyle Methods | Improve this Doc View Source ClearObjects() Removes all objects from the tree and clears selection Declaration void ClearObjects() | Improve this Doc View Source SetNeedsDisplay() Sets a flag indicating this view needs to be redisplayed because its state has changed. Declaration void SetNeedsDisplay()"
  },
  "api/Terminal.Gui/Terminal.Gui.Key.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.Key.html",
    "title": "Enum Key",
    "keywords": "Enum Key The Key enumeration contains special encoding for some keys, but can also encode all the unicode values that can be passed. Remarks If the SpecialMask is set, then the value is that of the special mask, otherwise, the value is the one of the lower bits (as extracted by CharMask ) Numerics keys are the values between 48 and 57 corresponding to 0 to 9 Upper alpha keys are the values between 65 and 90 corresponding to A to Z Unicode runes are also stored here, the letter 'A\" for example is encoded as a value 65 (not surfaced in the enum). Namespace : Terminal.Gui Assembly : Terminal.Gui.dll Syntax [Flags] public enum Key : uint Fields Name Description a The key code for the user pressing A A The key code for the user pressing Shift-A AltMask When this value is set, the Key encodes the sequence Alt-KeyValue. And the actual value must be extracted by removing the AltMask. b The key code for the user pressing B B The key code for the user pressing Shift-B Backspace Backspace key. BackTab Shift-tab key (backwards tab key). c The key code for the user pressing C C The key code for the user pressing Shift-C CharMask Mask that indicates that this is a character value, values outside this range indicate special characters like Alt-key combinations or special keys on the keyboard like function keys, arrows keys and so on. CtrlMask When this value is set, the Key encodes the sequence Ctrl-KeyValue. And the actual value must be extracted by removing the CtrlMask. CursorDown Cursor down key. CursorLeft Cursor left key. CursorRight Cursor right key. CursorUp Cursor up key d The key code for the user pressing D D The key code for the user pressing Shift-D D0 Digit 0. D1 Digit 1. D2 Digit 2. D3 Digit 3. D4 Digit 4. D5 Digit 5. D6 Digit 6. D7 Digit 7. D8 Digit 8. D9 Digit 9. Delete The key code for the user pressing the delete key. DeleteChar Delete character key e The key code for the user pressing E E The key code for the user pressing Shift-E End End key Enter The key code for the user pressing the return key. Esc The key code for the user pressing the escape key f The key code for the user pressing F F The key code for the user pressing Shift-F F1 F1 key. F10 F10 key. F11 F11 key. F12 F12 key. F2 F2 key. F3 F3 key. F4 F4 key. F5 F5 key. F6 F6 key. F7 F7 key. F8 F8 key. F9 F9 key. g The key code for the user pressing G G The key code for the user pressing Shift-G h The key code for the user pressing H H The key code for the user pressing Shift-H Home Home key i The key code for the user pressing I I The key code for the user pressing Shift-I InsertChar Insert character key j The key code for the user pressing J J The key code for the user pressing Shift-J k The key code for the user pressing K K The key code for the user pressing Shift-K l The key code for the user pressing L L The key code for the user pressing Shift-L m The key code for the user pressing M M The key code for the user pressing Shift-M n The key code for the user pressing N N The key code for the user pressing Shift-N Null The key code representing null or empty o The key code for the user pressing O O The key code for the user pressing Shift-O p The key code for the user pressing P P The key code for the user pressing Shift-P PageDown Page Down key. PageUp Page Up key. q The key code for the user pressing Q Q The key code for the user pressing Shift-Q r The key code for the user pressing R R The key code for the user pressing Shift-R s The key code for the user pressing S S The key code for the user pressing Shift-S ShiftMask When this value is set, the Key encodes the sequence Shift-KeyValue. Space The key code for the user pressing the space bar SpecialMask If the SpecialMask is set, then the value is that of the special mask, otherwise, the value is the one of the lower bits (as extracted by CharMask ). t The key code for the user pressing T T The key code for the user pressing Shift-T Tab The key code for the user pressing the tab key (forwards tab key). u The key code for the user pressing U U The key code for the user pressing Shift-U Unknown A key with an unknown mapping was raised. v The key code for the user pressing V V The key code for the user pressing Shift-V w The key code for the user pressing W W The key code for the user pressing Shift-W x The key code for the user pressing X X The key code for the user pressing Shift-X y The key code for the user pressing Y Y The key code for the user pressing Shift-Y z The key code for the user pressing Z Z The key code for the user pressing Shift-Z"
  },
  "api/Terminal.Gui/Terminal.Gui.KeyEvent.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.KeyEvent.html",
    "title": "Class KeyEvent",
    "keywords": "Class KeyEvent Describes a keyboard event. Inheritance System.Object KeyEvent Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Terminal.Gui Assembly : Terminal.Gui.dll Syntax public class KeyEvent Constructors | Improve this Doc View Source KeyEvent() Constructs a new KeyEvent Declaration public KeyEvent() | Improve this Doc View Source KeyEvent(Key, KeyModifiers) Constructs a new KeyEvent from the provided Key value - can be a rune cast into a Key value Declaration public KeyEvent(Key k, KeyModifiers km) Parameters Type Name Description Key k KeyModifiers km Fields | Improve this Doc View Source Key Symb olid definition for the key. Declaration public Key Key Field Value Type Description Key Properties | Improve this Doc View Source IsAlt Gets a value indicating whether the Alt key was pressed (real or synthesized) Declaration public bool IsAlt { get; } Property Value Type Description System.Boolean true if is alternate; otherwise, false . | Improve this Doc View Source IsCapslock Gets a value indicating whether the Caps lock key was pressed (real or synthesized) Declaration public bool IsCapslock { get; } Property Value Type Description System.Boolean true if is alternate; otherwise, false . | Improve this Doc View Source IsCtrl Determines whether the value is a control key (and NOT just the ctrl key) Declaration public bool IsCtrl { get; } Property Value Type Description System.Boolean true if is ctrl; otherwise, false . | Improve this Doc View Source IsNumlock Gets a value indicating whether the Num lock key was pressed (real or synthesized) Declaration public bool IsNumlock { get; } Property Value Type Description System.Boolean true if is alternate; otherwise, false . | Improve this Doc View Source IsScrolllock Gets a value indicating whether the Scroll lock key was pressed (real or synthesized) Declaration public bool IsScrolllock { get; } Property Value Type Description System.Boolean true if is alternate; otherwise, false . | Improve this Doc View Source IsShift Gets a value indicating whether the Shift key was pressed. Declaration public bool IsShift { get; } Property Value Type Description System.Boolean true if is shift; otherwise, false . | Improve this Doc View Source KeyValue The key value cast to an integer, you will typical use this for extracting the Unicode rune value out of a key, when none of the symbolic options are in use. Declaration public int KeyValue { get; } Property Value Type Description System.Int32 Methods | Improve this Doc View Source ToString() Pretty prints the KeyEvent Declaration public override string ToString() Returns Type Description System.String Overrides System.Object.ToString()"
  },
  "api/Terminal.Gui/Terminal.Gui.KeyModifiers.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.KeyModifiers.html",
    "title": "Class KeyModifiers",
    "keywords": "Class KeyModifiers Identifies the state of the \"shift\"-keys within a event. Inheritance System.Object KeyModifiers Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Terminal.Gui Assembly : Terminal.Gui.dll Syntax public class KeyModifiers Fields | Improve this Doc View Source Alt Check if the Alt key was pressed or not. Declaration public bool Alt Field Value Type Description System.Boolean | Improve this Doc View Source Capslock Check if the Caps lock key was pressed or not. Declaration public bool Capslock Field Value Type Description System.Boolean | Improve this Doc View Source Ctrl Check if the Ctrl key was pressed or not. Declaration public bool Ctrl Field Value Type Description System.Boolean | Improve this Doc View Source Numlock Check if the Num lock key was pressed or not. Declaration public bool Numlock Field Value Type Description System.Boolean | Improve this Doc View Source Scrolllock Check if the Scroll lock key was pressed or not. Declaration public bool Scrolllock Field Value Type Description System.Boolean | Improve this Doc View Source Shift Check if the Shift key was pressed or not. Declaration public bool Shift Field Value Type Description System.Boolean"
  },
  "api/Terminal.Gui/Terminal.Gui.Label.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.Label.html",
    "title": "Class Label",
    "keywords": "Class Label The Label View displays a string at a given position and supports multiple lines separated by newline characters. Multi-line Labels support word wrap. Inheritance System.Object Responder View Label Implements System.IDisposable System.ComponentModel.ISupportInitializeNotification System.ComponentModel.ISupportInitialize Remarks The Label view is functionality identical to View and is included for API backwards compatibility. Inherited Members View.Added View.Removed View.Enter View.Leave View.MouseEnter View.MouseLeave View.MouseClick View.CanFocusChanged View.EnabledChanged View.VisibleChanged View.HotKeyChanged View.HotKey View.HotKeySpecifier View.Shortcut View.ShortcutTag View.ShortcutAction View.Data View.Driver View.Subviews View.TabIndexes View.TabIndex View.TabStop View.CanFocus View.Id View.IsCurrentTop View.WantMousePositionReports View.WantContinuousButtonPressed View.Frame View.LayoutStyle View.Bounds View.X View.Y View.Width View.Height View.ForceValidatePosDim View.GetMinWidthHeight(Size) View.SetMinWidthHeight() View.TextFormatter View.SuperView View.UpdateTextFormatterText() View.ProcessResizeView() View.SetNeedsDisplay() View.ClearLayoutNeeded() View.SetNeedsDisplay(Rect) View.SetChildNeedsDisplay() View.Add(View) View.Add(View[]) View.RemoveAll() View.Remove(View) View.BringSubviewToFront(View) View.SendSubviewToBack(View) View.SendSubviewBackwards(View) View.BringSubviewForward(View) View.Clear() View.Clear(Rect) View.ScreenToView(Int32, Int32) View.ClipToBounds() View.SetClip(Rect) View.DrawFrame(Rect, Int32, Boolean) View.DrawHotString(ustring, Attribute, Attribute) View.DrawHotString(ustring, Boolean, ColorScheme) View.Move(Int32, Int32, Boolean) View.PositionCursor() View.HasFocus View.OnAdded(View) View.OnRemoved(View) View.OnLeave(View) View.Focused View.MostFocused View.ColorScheme View.AddRune(Int32, Int32, Rune) View.ClearNeedsDisplay() View.Redraw(Rect) View.DrawContent View.OnDrawContent(Rect) View.DrawContentComplete View.OnDrawContentComplete(Rect) View.SetFocus() View.KeyPress View.ProcessKey(KeyEvent) View.InvokeKeybindings(KeyEvent) View.AddKeyBinding(Key, Command[]) View.ReplaceKeyBinding(Key, Key) View.ContainsKeyBinding(Key) View.ClearKeybindings() View.ClearKeybinding(Key) View.ClearKeybinding(Command[]) View.AddCommand(Command, Func<Nullable<Boolean>>) View.GetSupportedCommands() View.GetKeyFromCommand(Command[]) View.ProcessColdKey(KeyEvent) View.KeyDown View.OnKeyDown(KeyEvent) View.KeyUp View.OnKeyUp(KeyEvent) View.EnsureFocus() View.FocusFirst() View.FocusLast() View.FocusPrev() View.FocusNext() View.LayoutStarted View.LayoutComplete View.Initialized View.LayoutSubviews() View.Text View.AutoSize View.PreserveTrailingSpaces View.TextAlignment View.VerticalTextAlignment View.TextDirection View.IsInitialized View.IsAdded View.Enabled View.Visible View.Border View.ToString() View.GetAutoSize() View.GetHotKeySpecifierLength(Boolean) View.GetTextFormatterBoundsSize() View.GetBoundsTextFormatterSize() View.OnMouseEnter(MouseEvent) View.OnMouseLeave(MouseEvent) View.OnMouseClick(View.MouseEventArgs) View.OnCanFocusChanged() View.OnEnabledChanged() View.OnVisibleChanged() View.Dispose(Boolean) View.BeginInit() View.EndInit() View.SetWidth(Int32, Int32) View.SetHeight(Int32, Int32) View.GetCurrentWidth(Int32) View.GetCurrentHeight(Int32) View.GetNormalColor() View.GetTopSuperView() Responder.MouseEvent(MouseEvent) Responder.Dispose() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Terminal.Gui Assembly : Terminal.Gui.dll Syntax public class Label : View, IDisposable, ISupportInitializeNotification, ISupportInitialize Constructors | Improve this Doc View Source Label() Declaration public Label() | Improve this Doc View Source Label(ustring, Boolean) Declaration public Label(ustring text, bool autosize = true) Parameters Type Name Description NStack.ustring text System.Boolean autosize | Improve this Doc View Source Label(ustring, TextDirection, Boolean) Declaration public Label(ustring text, TextDirection direction, bool autosize = true) Parameters Type Name Description NStack.ustring text TextDirection direction System.Boolean autosize | Improve this Doc View Source Label(Int32, Int32, ustring, Boolean) Declaration public Label(int x, int y, ustring text, bool autosize = true) Parameters Type Name Description System.Int32 x System.Int32 y NStack.ustring text System.Boolean autosize | Improve this Doc View Source Label(Rect, ustring, Boolean) Declaration public Label(Rect rect, ustring text, bool autosize = false) Parameters Type Name Description Rect rect NStack.ustring text System.Boolean autosize | Improve this Doc View Source Label(Rect, Boolean) Declaration public Label(Rect frame, bool autosize = false) Parameters Type Name Description Rect frame System.Boolean autosize Methods | Improve this Doc View Source OnClicked() Virtual method to invoke the Clicked event. Declaration public virtual void OnClicked() | Improve this Doc View Source OnEnter(View) Declaration public override bool OnEnter(View view) Parameters Type Name Description View view Returns Type Description System.Boolean Overrides View.OnEnter(View) | Improve this Doc View Source OnMouseEvent(MouseEvent) Method invoked when a mouse event is generated Declaration public override bool OnMouseEvent(MouseEvent mouseEvent) Parameters Type Name Description MouseEvent mouseEvent Returns Type Description System.Boolean true , if the event was handled, false otherwise. Overrides View.OnMouseEvent(MouseEvent) | Improve this Doc View Source ProcessHotKey(KeyEvent) Declaration public override bool ProcessHotKey(KeyEvent ke) Parameters Type Name Description KeyEvent ke Returns Type Description System.Boolean Overrides View.ProcessHotKey(KeyEvent) Events | Improve this Doc View Source Clicked Clicked System.Action , raised when the user clicks the primary mouse button within the Bounds of this View or if the user presses the action key while this view is focused. (TODO: IsDefault) Declaration public event Action Clicked Event Type Type Description System.Action Implements System.IDisposable System.ComponentModel.ISupportInitializeNotification System.ComponentModel.ISupportInitialize"
  },
  "api/Terminal.Gui/Terminal.Gui.LayoutStyle.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.LayoutStyle.html",
    "title": "Enum LayoutStyle",
    "keywords": "Enum LayoutStyle Determines the LayoutStyle for a view, if Absolute, during LayoutSubviews, the value from the Frame will be used, if the value is Computed, then the Frame will be updated from the X, Y Pos objects and the Width and Height Dim objects. Namespace : Terminal.Gui Assembly : Terminal.Gui.dll Syntax public enum LayoutStyle Fields Name Description Absolute The position and size of the view are based on the Frame value. Computed The position and size of the view will be computed based on the X, Y, Width and Height properties and set on the Frame."
  },
  "api/Terminal.Gui/Terminal.Gui.LineView.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.LineView.html",
    "title": "Class LineView",
    "keywords": "Class LineView A straight line control either horizontal or vertical Inheritance System.Object Responder View LineView Implements System.IDisposable System.ComponentModel.ISupportInitializeNotification System.ComponentModel.ISupportInitialize Inherited Members View.Added View.Removed View.Enter View.Leave View.MouseEnter View.MouseLeave View.MouseClick View.CanFocusChanged View.EnabledChanged View.VisibleChanged View.HotKeyChanged View.HotKey View.HotKeySpecifier View.Shortcut View.ShortcutTag View.ShortcutAction View.Data View.Driver View.Subviews View.TabIndexes View.TabIndex View.TabStop View.CanFocus View.Id View.IsCurrentTop View.WantMousePositionReports View.WantContinuousButtonPressed View.Frame View.LayoutStyle View.Bounds View.X View.Y View.Width View.Height View.ForceValidatePosDim View.GetMinWidthHeight(Size) View.SetMinWidthHeight() View.TextFormatter View.SuperView View.UpdateTextFormatterText() View.ProcessResizeView() View.SetNeedsDisplay() View.ClearLayoutNeeded() View.SetNeedsDisplay(Rect) View.SetChildNeedsDisplay() View.Add(View) View.Add(View[]) View.RemoveAll() View.Remove(View) View.BringSubviewToFront(View) View.SendSubviewToBack(View) View.SendSubviewBackwards(View) View.BringSubviewForward(View) View.Clear() View.Clear(Rect) View.ScreenToView(Int32, Int32) View.ClipToBounds() View.SetClip(Rect) View.DrawFrame(Rect, Int32, Boolean) View.DrawHotString(ustring, Attribute, Attribute) View.DrawHotString(ustring, Boolean, ColorScheme) View.Move(Int32, Int32, Boolean) View.PositionCursor() View.HasFocus View.OnAdded(View) View.OnRemoved(View) View.OnEnter(View) View.OnLeave(View) View.Focused View.MostFocused View.ColorScheme View.AddRune(Int32, Int32, Rune) View.ClearNeedsDisplay() View.DrawContent View.OnDrawContent(Rect) View.DrawContentComplete View.OnDrawContentComplete(Rect) View.SetFocus() View.KeyPress View.ProcessKey(KeyEvent) View.InvokeKeybindings(KeyEvent) View.AddKeyBinding(Key, Command[]) View.ReplaceKeyBinding(Key, Key) View.ContainsKeyBinding(Key) View.ClearKeybindings() View.ClearKeybinding(Key) View.ClearKeybinding(Command[]) View.AddCommand(Command, Func<Nullable<Boolean>>) View.GetSupportedCommands() View.GetKeyFromCommand(Command[]) View.ProcessHotKey(KeyEvent) View.ProcessColdKey(KeyEvent) View.KeyDown View.OnKeyDown(KeyEvent) View.KeyUp View.OnKeyUp(KeyEvent) View.EnsureFocus() View.FocusFirst() View.FocusLast() View.FocusPrev() View.FocusNext() View.LayoutStarted View.LayoutComplete View.Initialized View.LayoutSubviews() View.Text View.AutoSize View.PreserveTrailingSpaces View.TextAlignment View.VerticalTextAlignment View.TextDirection View.IsInitialized View.IsAdded View.Enabled View.Visible View.Border View.ToString() View.GetAutoSize() View.GetHotKeySpecifierLength(Boolean) View.GetTextFormatterBoundsSize() View.GetBoundsTextFormatterSize() View.OnMouseEnter(MouseEvent) View.OnMouseLeave(MouseEvent) View.OnMouseEvent(MouseEvent) View.OnMouseClick(View.MouseEventArgs) View.OnCanFocusChanged() View.OnEnabledChanged() View.OnVisibleChanged() View.Dispose(Boolean) View.BeginInit() View.EndInit() View.SetWidth(Int32, Int32) View.SetHeight(Int32, Int32) View.GetCurrentWidth(Int32) View.GetCurrentHeight(Int32) View.GetNormalColor() View.GetTopSuperView() Responder.MouseEvent(MouseEvent) Responder.Dispose() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Terminal.Gui Assembly : Terminal.Gui.dll Syntax public class LineView : View, IDisposable, ISupportInitializeNotification, ISupportInitialize Constructors | Improve this Doc View Source LineView() Creates a horizontal line Declaration public LineView() | Improve this Doc View Source LineView(Orientation) Creates a horizontal or vertical line based on orientation Declaration public LineView(Orientation orientation) Parameters Type Name Description Orientation orientation Properties | Improve this Doc View Source EndingAnchor The rune to display at the end of the line (right end of horizontal line or bottom end of vertical). If not specified then LineRune is used Declaration public Rune? EndingAnchor { get; set; } Property Value Type Description System.Nullable < System.Rune > | Improve this Doc View Source LineRune The symbol to use for drawing the line Declaration public Rune LineRune { get; set; } Property Value Type Description System.Rune | Improve this Doc View Source Orientation The direction of the line. If you change this you will need to manually update the Width/Height of the control to cover a relevant area based on the new direction. Declaration public Orientation Orientation { get; set; } Property Value Type Description Orientation | Improve this Doc View Source StartingAnchor The rune to display at the start of the line (left end of horizontal line or top end of vertical) If not specified then LineRune is used Declaration public Rune? StartingAnchor { get; set; } Property Value Type Description System.Nullable < System.Rune > Methods | Improve this Doc View Source Redraw(Rect) Draws the line including any starting/ending anchors Declaration public override void Redraw(Rect bounds) Parameters Type Name Description Rect bounds Overrides View.Redraw(Rect) Implements System.IDisposable System.ComponentModel.ISupportInitializeNotification System.ComponentModel.ISupportInitialize"
  },
  "api/Terminal.Gui/Terminal.Gui.ListView.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.ListView.html",
    "title": "Class ListView",
    "keywords": "Class ListView ListView View renders a scrollable list of data where each item can be activated to perform an action. Inheritance System.Object Responder View ListView Implements System.IDisposable System.ComponentModel.ISupportInitializeNotification System.ComponentModel.ISupportInitialize Remarks The ListView displays lists of data and allows the user to scroll through the data. Items in the can be activated firing an event (with the ENTER key or a mouse double-click). If the AllowsMarking property is true, elements of the list can be marked by the user. By default ListView uses System.Object.ToString() to render the items of any System.Collections.IList object (e.g. arrays, System.Collections.Generic.List<T> , and other collections). Alternatively, an object that implements the IListDataSource interface can be provided giving full control of what is rendered. ListView can display any object that implements the System.Collections.IList interface. System.String values are converted into NStack.ustring values before rendering, and other values are converted into System.String by calling System.Object.ToString() and then converting to NStack.ustring . To change the contents of the ListView, set the Source property (when providing custom rendering via IListDataSource ) or call SetSource(IList) an System.Collections.IList is being used. When AllowsMarking is set to true the rendering will prefix the rendered items with [x] or [ ] and bind the SPACE key to toggle the selection. To implement a different marking style set AllowsMarking to false and implement custom rendering. Inherited Members View.Added View.Removed View.Enter View.Leave View.MouseEnter View.MouseLeave View.MouseClick View.CanFocusChanged View.EnabledChanged View.VisibleChanged View.HotKeyChanged View.HotKey View.HotKeySpecifier View.Shortcut View.ShortcutTag View.ShortcutAction View.Data View.Driver View.Subviews View.TabIndexes View.TabIndex View.TabStop View.CanFocus View.Id View.IsCurrentTop View.WantMousePositionReports View.WantContinuousButtonPressed View.Frame View.LayoutStyle View.Bounds View.X View.Y View.Width View.Height View.ForceValidatePosDim View.GetMinWidthHeight(Size) View.SetMinWidthHeight() View.TextFormatter View.SuperView View.UpdateTextFormatterText() View.ProcessResizeView() View.SetNeedsDisplay() View.ClearLayoutNeeded() View.SetNeedsDisplay(Rect) View.SetChildNeedsDisplay() View.Add(View) View.Add(View[]) View.RemoveAll() View.Remove(View) View.BringSubviewToFront(View) View.SendSubviewToBack(View) View.SendSubviewBackwards(View) View.BringSubviewForward(View) View.Clear() View.Clear(Rect) View.ScreenToView(Int32, Int32) View.ClipToBounds() View.SetClip(Rect) View.DrawFrame(Rect, Int32, Boolean) View.DrawHotString(ustring, Attribute, Attribute) View.DrawHotString(ustring, Boolean, ColorScheme) View.Move(Int32, Int32, Boolean) View.HasFocus View.OnAdded(View) View.OnRemoved(View) View.Focused View.MostFocused View.ColorScheme View.AddRune(Int32, Int32, Rune) View.ClearNeedsDisplay() View.DrawContent View.OnDrawContent(Rect) View.DrawContentComplete View.OnDrawContentComplete(Rect) View.SetFocus() View.KeyPress View.InvokeKeybindings(KeyEvent) View.AddKeyBinding(Key, Command[]) View.ReplaceKeyBinding(Key, Key) View.ContainsKeyBinding(Key) View.ClearKeybindings() View.ClearKeybinding(Key) View.ClearKeybinding(Command[]) View.AddCommand(Command, Func<Nullable<Boolean>>) View.GetSupportedCommands() View.GetKeyFromCommand(Command[]) View.ProcessHotKey(KeyEvent) View.ProcessColdKey(KeyEvent) View.KeyDown View.OnKeyDown(KeyEvent) View.KeyUp View.OnKeyUp(KeyEvent) View.EnsureFocus() View.FocusFirst() View.FocusLast() View.FocusPrev() View.FocusNext() View.LayoutStarted View.LayoutComplete View.Initialized View.LayoutSubviews() View.Text View.AutoSize View.PreserveTrailingSpaces View.TextAlignment View.VerticalTextAlignment View.TextDirection View.IsInitialized View.IsAdded View.Enabled View.Visible View.Border View.ToString() View.GetAutoSize() View.GetHotKeySpecifierLength(Boolean) View.GetTextFormatterBoundsSize() View.GetBoundsTextFormatterSize() View.OnMouseEnter(MouseEvent) View.OnMouseLeave(MouseEvent) View.OnMouseEvent(MouseEvent) View.OnMouseClick(View.MouseEventArgs) View.OnCanFocusChanged() View.OnEnabledChanged() View.OnVisibleChanged() View.Dispose(Boolean) View.BeginInit() View.EndInit() View.SetWidth(Int32, Int32) View.SetHeight(Int32, Int32) View.GetCurrentWidth(Int32) View.GetCurrentHeight(Int32) View.GetNormalColor() View.GetTopSuperView() Responder.Dispose() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Terminal.Gui Assembly : Terminal.Gui.dll Syntax public class ListView : View, IDisposable, ISupportInitializeNotification, ISupportInitialize Constructors | Improve this Doc View Source ListView() Initializes a new instance of ListView . Set the Source property to display something. Declaration public ListView() | Improve this Doc View Source ListView(IList) Initializes a new instance of ListView that will display the contents of the object implementing the System.Collections.IList interface, with relative positioning. Declaration public ListView(IList source) Parameters Type Name Description System.Collections.IList source An System.Collections.IList data source, if the elements are strings or ustrings, the string is rendered, otherwise the ToString() method is invoked on the result. | Improve this Doc View Source ListView(IListDataSource) Initializes a new instance of ListView that will display the provided data source, using relative positioning. Declaration public ListView(IListDataSource source) Parameters Type Name Description IListDataSource source IListDataSource object that provides a mechanism to render the data. The number of elements on the collection should not change, if you must change, set the \"Source\" property to reset the internal settings of the ListView. | Improve this Doc View Source ListView(Rect, IList) Initializes a new instance of ListView that will display the contents of the object implementing the System.Collections.IList interface with an absolute position. Declaration public ListView(Rect rect, IList source) Parameters Type Name Description Rect rect Frame for the listview. System.Collections.IList source An IList data source, if the elements of the IList are strings or ustrings, the string is rendered, otherwise the ToString() method is invoked on the result. | Improve this Doc View Source ListView(Rect, IListDataSource) Initializes a new instance of ListView with the provided data source and an absolute position Declaration public ListView(Rect rect, IListDataSource source) Parameters Type Name Description Rect rect Frame for the listview. IListDataSource source IListDataSource object that provides a mechanism to render the data. The number of elements on the collection should not change, if you must change, set the \"Source\" property to reset the internal settings of the ListView. Properties | Improve this Doc View Source AllowsMarking Gets or sets whether this ListView allows items to be marked. Declaration public bool AllowsMarking { get; set; } Property Value Type Description System.Boolean true if allows marking elements of the list; otherwise, false . | Improve this Doc View Source AllowsMultipleSelection If set to true allows more than one item to be selected. If false only allow one item selected. Declaration public bool AllowsMultipleSelection { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source LeftItem Gets or sets the left column where the item start to be displayed at on the ListView . Declaration public int LeftItem { get; set; } Property Value Type Description System.Int32 The left position. | Improve this Doc View Source Maxlength Gets the widest item. Declaration public int Maxlength { get; } Property Value Type Description System.Int32 | Improve this Doc View Source SelectedItem Gets or sets the index of the currently selected item. Declaration public int SelectedItem { get; set; } Property Value Type Description System.Int32 The selected item. | Improve this Doc View Source Source Gets or sets the IListDataSource backing this ListView , enabling custom rendering. Declaration public IListDataSource Source { get; set; } Property Value Type Description IListDataSource The source. | Improve this Doc View Source TopItem Gets or sets the item that is displayed at the top of the ListView . Declaration public int TopItem { get; set; } Property Value Type Description System.Int32 The top item. Methods | Improve this Doc View Source AllowsAll() Prevents marking if it's not allowed mark and if it's not allows multiple selection. Declaration public virtual bool AllowsAll() Returns Type Description System.Boolean | Improve this Doc View Source MarkUnmarkRow() Marks an unmarked row. Declaration public virtual bool MarkUnmarkRow() Returns Type Description System.Boolean | Improve this Doc View Source MouseEvent(MouseEvent) Declaration public override bool MouseEvent(MouseEvent me) Parameters Type Name Description MouseEvent me Returns Type Description System.Boolean Overrides Responder.MouseEvent(MouseEvent) | Improve this Doc View Source MoveDown() Moves the selected item index to the next row. Declaration public virtual bool MoveDown() Returns Type Description System.Boolean | Improve this Doc View Source MoveEnd() Moves the selected item index to the last row. Declaration public virtual bool MoveEnd() Returns Type Description System.Boolean | Improve this Doc View Source MoveHome() Moves the selected item index to the first row. Declaration public virtual bool MoveHome() Returns Type Description System.Boolean | Improve this Doc View Source MovePageDown() Moves the selected item index to the previous page. Declaration public virtual bool MovePageDown() Returns Type Description System.Boolean | Improve this Doc View Source MovePageUp() Moves the selected item index to the next page. Declaration public virtual bool MovePageUp() Returns Type Description System.Boolean | Improve this Doc View Source MoveUp() Moves the selected item index to the previous row. Declaration public virtual bool MoveUp() Returns Type Description System.Boolean | Improve this Doc View Source OnEnter(View) Declaration public override bool OnEnter(View view) Parameters Type Name Description View view Returns Type Description System.Boolean Overrides View.OnEnter(View) | Improve this Doc View Source OnLeave(View) Declaration public override bool OnLeave(View view) Parameters Type Name Description View view Returns Type Description System.Boolean Overrides View.OnLeave(View) | Improve this Doc View Source OnOpenSelectedItem() Invokes the OnOpenSelectedItem event if it is defined. Declaration public virtual bool OnOpenSelectedItem() Returns Type Description System.Boolean | Improve this Doc View Source OnRowRender(ListViewRowEventArgs) Virtual method that will invoke the RowRender . Declaration public virtual void OnRowRender(ListViewRowEventArgs rowEventArgs) Parameters Type Name Description ListViewRowEventArgs rowEventArgs | Improve this Doc View Source OnSelectedChanged() Invokes the SelectedChanged event if it is defined. Declaration public virtual bool OnSelectedChanged() Returns Type Description System.Boolean | Improve this Doc View Source PositionCursor() Declaration public override void PositionCursor() Overrides View.PositionCursor() | Improve this Doc View Source ProcessKey(KeyEvent) Declaration public override bool ProcessKey(KeyEvent kb) Parameters Type Name Description KeyEvent kb Returns Type Description System.Boolean Overrides View.ProcessKey(KeyEvent) | Improve this Doc View Source Redraw(Rect) Declaration public override void Redraw(Rect bounds) Parameters Type Name Description Rect bounds Overrides View.Redraw(Rect) | Improve this Doc View Source ScrollDown(Int32) Scrolls the view down. Declaration public virtual bool ScrollDown(int lines) Parameters Type Name Description System.Int32 lines Number of lines to scroll down. Returns Type Description System.Boolean | Improve this Doc View Source ScrollLeft(Int32) Scrolls the view left. Declaration public virtual bool ScrollLeft(int cols) Parameters Type Name Description System.Int32 cols Number of columns to scroll left. Returns Type Description System.Boolean | Improve this Doc View Source ScrollRight(Int32) Scrolls the view right. Declaration public virtual bool ScrollRight(int cols) Parameters Type Name Description System.Int32 cols Number of columns to scroll right. Returns Type Description System.Boolean | Improve this Doc View Source ScrollUp(Int32) Scrolls the view up. Declaration public virtual bool ScrollUp(int lines) Parameters Type Name Description System.Int32 lines Number of lines to scroll up. Returns Type Description System.Boolean | Improve this Doc View Source SetSource(IList) Sets the source of the ListView to an System.Collections.IList . Declaration public void SetSource(IList source) Parameters Type Name Description System.Collections.IList source | Improve this Doc View Source SetSourceAsync(IList) Sets the source to an System.Collections.IList value asynchronously. Declaration public Task SetSourceAsync(IList source) Parameters Type Name Description System.Collections.IList source Returns Type Description System.Threading.Tasks.Task An item implementing the IList interface. Events | Improve this Doc View Source OpenSelectedItem This event is raised when the user Double Clicks on an item or presses ENTER to open the selected item. Declaration public event Action<ListViewItemEventArgs> OpenSelectedItem Event Type Type Description System.Action < ListViewItemEventArgs > | Improve this Doc View Source RowRender This event is invoked when this ListView is being drawn before rendering. Declaration public event Action<ListViewRowEventArgs> RowRender Event Type Type Description System.Action < ListViewRowEventArgs > | Improve this Doc View Source SelectedItemChanged This event is raised when the selected item in the ListView has changed. Declaration public event Action<ListViewItemEventArgs> SelectedItemChanged Event Type Type Description System.Action < ListViewItemEventArgs > Implements System.IDisposable System.ComponentModel.ISupportInitializeNotification System.ComponentModel.ISupportInitialize"
  },
  "api/Terminal.Gui/Terminal.Gui.ListViewItemEventArgs.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.ListViewItemEventArgs.html",
    "title": "Class ListViewItemEventArgs",
    "keywords": "Class ListViewItemEventArgs System.EventArgs for ListView events. Inheritance System.Object System.EventArgs ListViewItemEventArgs Inherited Members System.EventArgs.Empty System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Terminal.Gui Assembly : Terminal.Gui.dll Syntax public class ListViewItemEventArgs : EventArgs Constructors | Improve this Doc View Source ListViewItemEventArgs(Int32, Object) Initializes a new instance of ListViewItemEventArgs Declaration public ListViewItemEventArgs(int item, object value) Parameters Type Name Description System.Int32 item The index of the ListView item. System.Object value The ListView item Properties | Improve this Doc View Source Item The index of the ListView item. Declaration public int Item { get; } Property Value Type Description System.Int32 | Improve this Doc View Source Value The ListView item. Declaration public object Value { get; } Property Value Type Description System.Object"
  },
  "api/Terminal.Gui/Terminal.Gui.ListViewRowEventArgs.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.ListViewRowEventArgs.html",
    "title": "Class ListViewRowEventArgs",
    "keywords": "Class ListViewRowEventArgs System.EventArgs used by the RowRender event. Inheritance System.Object System.EventArgs ListViewRowEventArgs Inherited Members System.EventArgs.Empty System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Terminal.Gui Assembly : Terminal.Gui.dll Syntax public class ListViewRowEventArgs : EventArgs Constructors | Improve this Doc View Source ListViewRowEventArgs(Int32) Initializes with the current row. Declaration public ListViewRowEventArgs(int row) Parameters Type Name Description System.Int32 row Properties | Improve this Doc View Source Row The current row being rendered. Declaration public int Row { get; } Property Value Type Description System.Int32 | Improve this Doc View Source RowAttribute The Attribute used by current row or null to maintain the current attribute. Declaration public Attribute? RowAttribute { get; set; } Property Value Type Description System.Nullable < Attribute >"
  },
  "api/Terminal.Gui/Terminal.Gui.ListWrapper.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.ListWrapper.html",
    "title": "Class ListWrapper",
    "keywords": "Class ListWrapper Implements an IListDataSource that renders arbitrary System.Collections.IList instances for ListView . Inheritance System.Object ListWrapper Implements IListDataSource Remarks Implements support for rendering marked items. Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Terminal.Gui Assembly : Terminal.Gui.dll Syntax public class ListWrapper : IListDataSource Constructors | Improve this Doc View Source ListWrapper(IList) Initializes a new instance of ListWrapper given an System.Collections.IList Declaration public ListWrapper(IList source) Parameters Type Name Description System.Collections.IList source Properties | Improve this Doc View Source Count Gets the number of items in the System.Collections.IList . Declaration public int Count { get; } Property Value Type Description System.Int32 | Improve this Doc View Source Length Gets the maximum item length in the System.Collections.IList . Declaration public int Length { get; } Property Value Type Description System.Int32 Methods | Improve this Doc View Source IsMarked(Int32) Returns true if the item is marked, false otherwise. Declaration public bool IsMarked(int item) Parameters Type Name Description System.Int32 item The item. Returns Type Description System.Boolean true If is marked. false otherwise. | Improve this Doc View Source Render(ListView, ConsoleDriver, Boolean, Int32, Int32, Int32, Int32, Int32) Renders a ListView item to the appropriate type. Declaration public void Render(ListView container, ConsoleDriver driver, bool marked, int item, int col, int line, int width, int start = 0) Parameters Type Name Description ListView container The ListView. ConsoleDriver driver The driver used by the caller. System.Boolean marked Informs if it's marked or not. System.Int32 item The item. System.Int32 col The col where to move. System.Int32 line The line where to move. System.Int32 width The item width. System.Int32 start The index of the string to be displayed. | Improve this Doc View Source SetMark(Int32, Boolean) Sets the item as marked or unmarked based on the value is true or false, respectively. Declaration public void SetMark(int item, bool value) Parameters Type Name Description System.Int32 item The item System.Boolean value Marks the item. Unmarked the item. The value. | Improve this Doc View Source ToList() Returns the source as IList. Declaration public IList ToList() Returns Type Description System.Collections.IList Implements IListDataSource"
  },
  "api/Terminal.Gui/Terminal.Gui.MainLoop.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.MainLoop.html",
    "title": "Class MainLoop",
    "keywords": "Class MainLoop Simple main loop implementation that can be used to monitor file descriptor, run timers and idle handlers. Inheritance System.Object MainLoop Remarks Monitoring of file descriptors is only available on Unix, there does not seem to be a way of supporting this on Windows. Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Terminal.Gui Assembly : Terminal.Gui.dll Syntax public class MainLoop Constructors | Improve this Doc View Source MainLoop(IMainLoopDriver) Creates a new Mainloop. Declaration public MainLoop(IMainLoopDriver driver) Parameters Type Name Description IMainLoopDriver driver Should match the ConsoleDriver (one of the implementations UnixMainLoop, NetMainLoop or WindowsMainLoop). Properties | Improve this Doc View Source Driver The current IMainLoopDriver in use. Declaration public IMainLoopDriver Driver { get; } Property Value Type Description IMainLoopDriver The driver. | Improve this Doc View Source IdleHandlers Gets a copy of the list of all idle handlers. Declaration public ReadOnlyCollection<Func<bool>> IdleHandlers { get; } Property Value Type Description System.Collections.ObjectModel.ReadOnlyCollection < System.Func < System.Boolean >> | Improve this Doc View Source Timeouts Gets the list of all timeouts sorted by the System.TimeSpan time ticks./>. A shorter limit time can be added at the end, but it will be called before an earlier addition that has a longer limit time. Declaration public SortedList<long, MainLoop.Timeout> Timeouts { get; } Property Value Type Description System.Collections.Generic.SortedList < System.Int64 , MainLoop.Timeout > Methods | Improve this Doc View Source AddIdle(Func<Boolean>) Adds specified idle handler function to mainloop processing. The handler function will be called once per iteration of the main loop after other events have been handled. Declaration public Func<bool> AddIdle(Func<bool> idleHandler) Parameters Type Name Description System.Func < System.Boolean > idleHandler Token that can be used to remove the idle handler with RemoveIdle(Func<Boolean>) . Returns Type Description System.Func < System.Boolean > | Improve this Doc View Source AddTimeout(TimeSpan, Func<MainLoop, Boolean>) Adds a timeout to the mainloop. Declaration public object AddTimeout(TimeSpan time, Func<MainLoop, bool> callback) Parameters Type Name Description System.TimeSpan time System.Func < MainLoop , System.Boolean > callback Returns Type Description System.Object | Improve this Doc View Source EventsPending(Boolean) Determines whether there are pending events to be processed. Declaration public bool EventsPending(bool wait = false) Parameters Type Name Description System.Boolean wait Returns Type Description System.Boolean | Improve this Doc View Source Invoke(Action) Runs action on the thread that is processing events Declaration public void Invoke(Action action) Parameters Type Name Description System.Action action the action to be invoked on the main processing thread. | Improve this Doc View Source MainIteration() Runs one iteration of timers and file watches Declaration public void MainIteration() | Improve this Doc View Source RemoveIdle(Func<Boolean>) Removes an idle handler added with AddIdle(Func<Boolean>) from processing. Declaration public bool RemoveIdle(Func<bool> token) Parameters Type Name Description System.Func < System.Boolean > token A token returned by AddIdle(Func<Boolean>) Returns Type Description System.Boolean | Improve this Doc View Source RemoveTimeout(Object) Removes a previously scheduled timeout Declaration public bool RemoveTimeout(object token) Parameters Type Name Description System.Object token Returns Type Description System.Boolean | Improve this Doc View Source Run() Runs the mainloop. Declaration public void Run() | Improve this Doc View Source Stop() Stops the mainloop. Declaration public void Stop() Events | Improve this Doc View Source TimeoutAdded Invoked when a new timeout is added to be used on the case if ExitRunLoopAfterFirstIteration is true, Declaration public event Action<long> TimeoutAdded Event Type Type Description System.Action < System.Int64 >"
  },
  "api/Terminal.Gui/Terminal.Gui.MainLoop.Timeout.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.MainLoop.Timeout.html",
    "title": "Class MainLoop.Timeout",
    "keywords": "Class MainLoop.Timeout Provides data for timers running manipulation. Inheritance System.Object MainLoop.Timeout Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Terminal.Gui Assembly : Terminal.Gui.dll Syntax public sealed class Timeout Fields | Improve this Doc View Source Callback The function that will be invoked. Declaration public Func<MainLoop, bool> Callback Field Value Type Description System.Func < MainLoop , System.Boolean > | Improve this Doc View Source Span Time to wait before invoke the callback. Declaration public TimeSpan Span Field Value Type Description System.TimeSpan"
  },
  "api/Terminal.Gui/Terminal.Gui.MenuBar.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.MenuBar.html",
    "title": "Class MenuBar",
    "keywords": "Class MenuBar Provides a menu bar with drop-down and cascading menus. Inheritance System.Object Responder View MenuBar Implements System.IDisposable System.ComponentModel.ISupportInitializeNotification System.ComponentModel.ISupportInitialize Remarks The MenuBar appears on the first row of the terminal. The MenuBar provides global hotkeys for the application. Inherited Members View.Added View.Removed View.Enter View.Leave View.MouseEnter View.MouseLeave View.MouseClick View.CanFocusChanged View.EnabledChanged View.VisibleChanged View.HotKeyChanged View.HotKey View.Shortcut View.ShortcutTag View.ShortcutAction View.Data View.Driver View.Subviews View.TabIndexes View.TabIndex View.TabStop View.CanFocus View.Id View.IsCurrentTop View.WantMousePositionReports View.WantContinuousButtonPressed View.Frame View.LayoutStyle View.Bounds View.X View.Y View.Width View.Height View.ForceValidatePosDim View.GetMinWidthHeight(Size) View.SetMinWidthHeight() View.TextFormatter View.SuperView View.UpdateTextFormatterText() View.ProcessResizeView() View.SetNeedsDisplay() View.ClearLayoutNeeded() View.SetNeedsDisplay(Rect) View.SetChildNeedsDisplay() View.Add(View) View.Add(View[]) View.RemoveAll() View.Remove(View) View.BringSubviewToFront(View) View.SendSubviewToBack(View) View.SendSubviewBackwards(View) View.BringSubviewForward(View) View.Clear() View.Clear(Rect) View.ScreenToView(Int32, Int32) View.ClipToBounds() View.SetClip(Rect) View.DrawFrame(Rect, Int32, Boolean) View.DrawHotString(ustring, Attribute, Attribute) View.DrawHotString(ustring, Boolean, ColorScheme) View.Move(Int32, Int32, Boolean) View.HasFocus View.OnAdded(View) View.OnRemoved(View) View.Focused View.MostFocused View.ColorScheme View.AddRune(Int32, Int32, Rune) View.ClearNeedsDisplay() View.DrawContent View.OnDrawContent(Rect) View.DrawContentComplete View.OnDrawContentComplete(Rect) View.SetFocus() View.KeyPress View.InvokeKeybindings(KeyEvent) View.AddKeyBinding(Key, Command[]) View.ReplaceKeyBinding(Key, Key) View.ContainsKeyBinding(Key) View.ClearKeybindings() View.ClearKeybinding(Key) View.ClearKeybinding(Command[]) View.AddCommand(Command, Func<Nullable<Boolean>>) View.GetSupportedCommands() View.GetKeyFromCommand(Command[]) View.KeyDown View.KeyUp View.EnsureFocus() View.FocusFirst() View.FocusLast() View.FocusPrev() View.FocusNext() View.LayoutStarted View.LayoutComplete View.Initialized View.LayoutSubviews() View.Text View.AutoSize View.PreserveTrailingSpaces View.TextAlignment View.VerticalTextAlignment View.TextDirection View.IsInitialized View.IsAdded View.Enabled View.Visible View.Border View.ToString() View.GetAutoSize() View.GetHotKeySpecifierLength(Boolean) View.GetTextFormatterBoundsSize() View.GetBoundsTextFormatterSize() View.OnMouseEnter(MouseEvent) View.OnMouseLeave(MouseEvent) View.OnMouseEvent(MouseEvent) View.OnMouseClick(View.MouseEventArgs) View.OnCanFocusChanged() View.OnEnabledChanged() View.OnVisibleChanged() View.Dispose(Boolean) View.BeginInit() View.EndInit() View.SetWidth(Int32, Int32) View.SetHeight(Int32, Int32) View.GetCurrentWidth(Int32) View.GetCurrentHeight(Int32) View.GetNormalColor() View.GetTopSuperView() Responder.Dispose() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Terminal.Gui Assembly : Terminal.Gui.dll Syntax public class MenuBar : View, IDisposable, ISupportInitializeNotification, ISupportInitialize Constructors | Improve this Doc View Source MenuBar() Initializes a new instance of the MenuBar . Declaration public MenuBar() | Improve this Doc View Source MenuBar(MenuBarItem[]) Initializes a new instance of the MenuBar class with the specified set of toplevel menu items. Declaration public MenuBar(MenuBarItem[] menus) Parameters Type Name Description MenuBarItem [] menus Individual menu items; a null item will result in a separator being drawn. Properties | Improve this Doc View Source HotKeySpecifier The specifier character for the hotkey to all menus. Declaration public static Rune HotKeySpecifier { get; } Property Value Type Description System.Rune | Improve this Doc View Source IsMenuOpen True if the menu is open; otherwise false. Declaration public bool IsMenuOpen { get; protected set; } Property Value Type Description System.Boolean | Improve this Doc View Source LastFocused Get the lasted focused view before open the menu. Declaration public View LastFocused { get; } Property Value Type Description View | Improve this Doc View Source Menus Gets or sets the array of MenuBarItem s for the menu. Only set this when the MenuBar is visible. Declaration public MenuBarItem[] Menus { get; set; } Property Value Type Description MenuBarItem [] The menu array. | Improve this Doc View Source ShortcutDelimiter Used for change the shortcut delimiter separator. Declaration public static ustring ShortcutDelimiter { get; set; } Property Value Type Description NStack.ustring | Improve this Doc View Source UseKeysUpDownAsKeysLeftRight Used for change the navigation key style. Declaration public bool UseKeysUpDownAsKeysLeftRight { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source UseSubMenusSingleFrame Gets or sets if the sub-menus must be displayed in a single or multiple frames. Declaration public bool UseSubMenusSingleFrame { get; set; } Property Value Type Description System.Boolean Methods | Improve this Doc View Source CloseMenu(Boolean) Closes the current Menu programatically, if open and not canceled. Declaration public bool CloseMenu(bool ignoreUseSubMenusSingleFrame = false) Parameters Type Name Description System.Boolean ignoreUseSubMenusSingleFrame Returns Type Description System.Boolean | Improve this Doc View Source MouseEvent(MouseEvent) Declaration public override bool MouseEvent(MouseEvent me) Parameters Type Name Description MouseEvent me Returns Type Description System.Boolean Overrides Responder.MouseEvent(MouseEvent) | Improve this Doc View Source OnEnter(View) Declaration public override bool OnEnter(View view) Parameters Type Name Description View view Returns Type Description System.Boolean Overrides View.OnEnter(View) | Improve this Doc View Source OnKeyDown(KeyEvent) Declaration public override bool OnKeyDown(KeyEvent keyEvent) Parameters Type Name Description KeyEvent keyEvent Returns Type Description System.Boolean Overrides View.OnKeyDown(KeyEvent) | Improve this Doc View Source OnKeyUp(KeyEvent) Declaration public override bool OnKeyUp(KeyEvent keyEvent) Parameters Type Name Description KeyEvent keyEvent Returns Type Description System.Boolean Overrides View.OnKeyUp(KeyEvent) | Improve this Doc View Source OnLeave(View) Declaration public override bool OnLeave(View view) Parameters Type Name Description View view Returns Type Description System.Boolean Overrides View.OnLeave(View) | Improve this Doc View Source OnMenuAllClosed() Virtual method that will invoke the MenuAllClosed Declaration public virtual void OnMenuAllClosed() | Improve this Doc View Source OnMenuClosing(MenuBarItem, Boolean, Boolean) Virtual method that will invoke the MenuClosing Declaration public virtual MenuClosingEventArgs OnMenuClosing(MenuBarItem currentMenu, bool reopen, bool isSubMenu) Parameters Type Name Description MenuBarItem currentMenu The current menu to be closed. System.Boolean reopen Whether the current menu will be reopen. System.Boolean isSubMenu Whether is a sub-menu or not. Returns Type Description MenuClosingEventArgs | Improve this Doc View Source OnMenuOpened() Virtual method that will invoke the MenuOpened event if it's defined. Declaration public virtual void OnMenuOpened() | Improve this Doc View Source OnMenuOpening(MenuBarItem) Virtual method that will invoke the MenuOpening event if it's defined. Declaration public virtual MenuOpeningEventArgs OnMenuOpening(MenuBarItem currentMenu) Parameters Type Name Description MenuBarItem currentMenu The current menu to be replaced. Returns Type Description MenuOpeningEventArgs Returns the MenuOpeningEventArgs | Improve this Doc View Source OpenMenu() Opens the current Menu programatically. Declaration public void OpenMenu() | Improve this Doc View Source PositionCursor() Declaration public override void PositionCursor() Overrides View.PositionCursor() | Improve this Doc View Source ProcessColdKey(KeyEvent) Declaration public override bool ProcessColdKey(KeyEvent kb) Parameters Type Name Description KeyEvent kb Returns Type Description System.Boolean Overrides View.ProcessColdKey(KeyEvent) | Improve this Doc View Source ProcessHotKey(KeyEvent) Declaration public override bool ProcessHotKey(KeyEvent kb) Parameters Type Name Description KeyEvent kb Returns Type Description System.Boolean Overrides View.ProcessHotKey(KeyEvent) | Improve this Doc View Source ProcessKey(KeyEvent) Declaration public override bool ProcessKey(KeyEvent kb) Parameters Type Name Description KeyEvent kb Returns Type Description System.Boolean Overrides View.ProcessKey(KeyEvent) | Improve this Doc View Source Redraw(Rect) Declaration public override void Redraw(Rect bounds) Parameters Type Name Description Rect bounds Overrides View.Redraw(Rect) Events | Improve this Doc View Source MenuAllClosed Raised when all the menu are closed. Declaration public event Action MenuAllClosed Event Type Type Description System.Action | Improve this Doc View Source MenuClosing Raised when a menu is closing passing MenuClosingEventArgs . Declaration public event Action<MenuClosingEventArgs> MenuClosing Event Type Type Description System.Action < MenuClosingEventArgs > | Improve this Doc View Source MenuOpened Raised when a menu is opened. Declaration public event Action<MenuItem> MenuOpened Event Type Type Description System.Action < MenuItem > | Improve this Doc View Source MenuOpening Raised as a menu is opening. Declaration public event Action<MenuOpeningEventArgs> MenuOpening Event Type Type Description System.Action < MenuOpeningEventArgs > Implements System.IDisposable System.ComponentModel.ISupportInitializeNotification System.ComponentModel.ISupportInitialize"
  },
  "api/Terminal.Gui/Terminal.Gui.MenuBarItem.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.MenuBarItem.html",
    "title": "Class MenuBarItem",
    "keywords": "Class MenuBarItem A MenuBarItem contains MenuBarItem s or MenuItem s. Inheritance System.Object MenuItem MenuBarItem Inherited Members MenuItem.Data MenuItem.HotKey MenuItem.Shortcut MenuItem.ShortcutTag MenuItem.Title MenuItem.Help MenuItem.Action MenuItem.CanExecute MenuItem.IsEnabled() MenuItem.Checked MenuItem.CheckType MenuItem.Parent MenuItem.GetMenuItem() MenuItem.GetMenuBarItem() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Terminal.Gui Assembly : Terminal.Gui.dll Syntax public class MenuBarItem : MenuItem Constructors | Improve this Doc View Source MenuBarItem() Initializes a new MenuBarItem . Declaration public MenuBarItem() | Improve this Doc View Source MenuBarItem(ustring, ustring, Action, Func<Boolean>, MenuItem) Initializes a new MenuBarItem as a MenuItem . Declaration public MenuBarItem(ustring title, ustring help, Action action, Func<bool> canExecute = null, MenuItem parent = null) Parameters Type Name Description NStack.ustring title Title for the menu item. NStack.ustring help Help text to display. System.Action action Action to invoke when the menu item is activated. System.Func < System.Boolean > canExecute Function to determine if the action can currently be executed. MenuItem parent The parent MenuItem of this if exist, otherwise is null. | Improve this Doc View Source MenuBarItem(ustring, List<MenuItem[]>, MenuItem) Initializes a new MenuBarItem with separate list of items. Declaration public MenuBarItem(ustring title, List<MenuItem[]> children, MenuItem parent = null) Parameters Type Name Description NStack.ustring title Title for the menu item. System.Collections.Generic.List < MenuItem []> children The list of items in the current menu. MenuItem parent The parent MenuItem of this if exist, otherwise is null. | Improve this Doc View Source MenuBarItem(ustring, MenuItem[], MenuItem) Initializes a new MenuBarItem . Declaration public MenuBarItem(ustring title, MenuItem[] children, MenuItem parent = null) Parameters Type Name Description NStack.ustring title Title for the menu item. MenuItem [] children The items in the current menu. MenuItem parent The parent MenuItem of this if exist, otherwise is null. | Improve this Doc View Source MenuBarItem(MenuItem[]) Initializes a new MenuBarItem . Declaration public MenuBarItem(MenuItem[] children) Parameters Type Name Description MenuItem [] children The items in the current menu. Properties | Improve this Doc View Source Children Gets or sets an array of MenuItem objects that are the children of this MenuBarItem Declaration public MenuItem[] Children { get; set; } Property Value Type Description MenuItem [] The children. Methods | Improve this Doc View Source GetChildrenIndex(MenuItem) Get the index of the MenuItem parameter. Declaration public int GetChildrenIndex(MenuItem children) Parameters Type Name Description MenuItem children Returns Type Description System.Int32 Returns a value bigger than -1 if the MenuItem is a child of this. | Improve this Doc View Source IsSubMenuOf(MenuItem) Check if the MenuItem parameter is a child of this. Declaration public bool IsSubMenuOf(MenuItem menuItem) Parameters Type Name Description MenuItem menuItem Returns Type Description System.Boolean Returns true if it is a child of this. false otherwise. | Improve this Doc View Source SubMenu(MenuItem) Check if the children parameter is a MenuBarItem . Declaration public MenuBarItem SubMenu(MenuItem children) Parameters Type Name Description MenuItem children Returns Type Description MenuBarItem Returns a MenuBarItem or null otherwise."
  },
  "api/Terminal.Gui/Terminal.Gui.MenuClosingEventArgs.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.MenuClosingEventArgs.html",
    "title": "Class MenuClosingEventArgs",
    "keywords": "Class MenuClosingEventArgs An System.EventArgs which allows passing a cancelable menu closing event. Inheritance System.Object System.EventArgs MenuClosingEventArgs Inherited Members System.EventArgs.Empty System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Terminal.Gui Assembly : Terminal.Gui.dll Syntax public class MenuClosingEventArgs : EventArgs Constructors | Improve this Doc View Source MenuClosingEventArgs(MenuBarItem, Boolean, Boolean) Initializes a new instance of MenuClosingEventArgs Declaration public MenuClosingEventArgs(MenuBarItem currentMenu, bool reopen, bool isSubMenu) Parameters Type Name Description MenuBarItem currentMenu The current MenuBarItem parent. System.Boolean reopen Whether the current menu will be reopen. System.Boolean isSubMenu Indicates whether it is a sub-menu. Properties | Improve this Doc View Source Cancel Flag that allows you to cancel the opening of the menu. Declaration public bool Cancel { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source CurrentMenu The current MenuBarItem parent. Declaration public MenuBarItem CurrentMenu { get; } Property Value Type Description MenuBarItem | Improve this Doc View Source IsSubMenu Indicates whether the current menu is a sub-menu. Declaration public bool IsSubMenu { get; } Property Value Type Description System.Boolean | Improve this Doc View Source Reopen Indicates whether the current menu will be reopen. Declaration public bool Reopen { get; } Property Value Type Description System.Boolean"
  },
  "api/Terminal.Gui/Terminal.Gui.MenuItem.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.MenuItem.html",
    "title": "Class MenuItem",
    "keywords": "Class MenuItem A MenuItem has a title, an associated help text, and an action to execute on activation. Inheritance System.Object MenuItem MenuBarItem Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Terminal.Gui Assembly : Terminal.Gui.dll Syntax public class MenuItem Constructors | Improve this Doc View Source MenuItem(ustring, ustring, Action, Func<Boolean>, MenuItem, Key) Initializes a new instance of MenuItem . Declaration public MenuItem(ustring title, ustring help, Action action, Func<bool> canExecute = null, MenuItem parent = null, Key shortcut = Key.Null) Parameters Type Name Description NStack.ustring title Title for the menu item. NStack.ustring help Help text to display. System.Action action Action to invoke when the menu item is activated. System.Func < System.Boolean > canExecute Function to determine if the action can currently be executed. MenuItem parent The Parent of this menu item. Key shortcut The Shortcut keystroke combination. | Improve this Doc View Source MenuItem(Key) Initializes a new instance of MenuItem Declaration public MenuItem(Key shortcut = Key.Null) Parameters Type Name Description Key shortcut Fields | Improve this Doc View Source HotKey The HotKey is used when the menu is active, the shortcut can be triggered when the menu is not active. For example HotKey would be \"N\" when the File Menu is open (assuming there is a \"_New\" entry if the Shortcut is set to \"Control-N\", this would be a global hotkey that would trigger as well Declaration public Rune HotKey Field Value Type Description System.Rune Properties | Improve this Doc View Source Action Gets or sets the action to be invoked when the menu is triggered Declaration public Action Action { get; set; } Property Value Type Description System.Action Method to invoke. | Improve this Doc View Source CanExecute Gets or sets the action to be invoked if the menu can be triggered Declaration public Func<bool> CanExecute { get; set; } Property Value Type Description System.Func < System.Boolean > Function to determine if action is ready to be executed. | Improve this Doc View Source Checked Sets or gets whether the MenuItem shows a check indicator or not. See MenuItemCheckStyle . Declaration public bool Checked { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source CheckType Sets or gets the type selection indicator the menu item will be displayed with. Declaration public MenuItemCheckStyle CheckType { get; set; } Property Value Type Description MenuItemCheckStyle | Improve this Doc View Source Data Gets or sets arbitrary data for the menu item. Declaration public object Data { get; set; } Property Value Type Description System.Object | Improve this Doc View Source Help Gets or sets the help text for the menu item. Declaration public ustring Help { get; set; } Property Value Type Description NStack.ustring The help text. | Improve this Doc View Source Parent Gets or sets the parent for this MenuItem . Declaration public MenuItem Parent { get; } Property Value Type Description MenuItem The parent. | Improve this Doc View Source Shortcut This is the global setting that can be used as a global Shortcut to invoke the action on the menu. Declaration public Key Shortcut { get; set; } Property Value Type Description Key | Improve this Doc View Source ShortcutTag The keystroke combination used in the ShortcutTag as string. Declaration public ustring ShortcutTag { get; } Property Value Type Description NStack.ustring | Improve this Doc View Source Title Gets or sets the title. Declaration public ustring Title { get; set; } Property Value Type Description NStack.ustring The title. Methods | Improve this Doc View Source GetMenuBarItem() Merely a debugging aid to see the interaction with main Declaration public bool GetMenuBarItem() Returns Type Description System.Boolean | Improve this Doc View Source GetMenuItem() Merely a debugging aid to see the interaction with main Declaration public MenuItem GetMenuItem() Returns Type Description MenuItem | Improve this Doc View Source IsEnabled() Shortcut to check if the menu item is enabled Declaration public bool IsEnabled() Returns Type Description System.Boolean"
  },
  "api/Terminal.Gui/Terminal.Gui.MenuItemCheckStyle.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.MenuItemCheckStyle.html",
    "title": "Enum MenuItemCheckStyle",
    "keywords": "Enum MenuItemCheckStyle Specifies how a MenuItem shows selection state. Namespace : Terminal.Gui Assembly : Terminal.Gui.dll Syntax [Flags] public enum MenuItemCheckStyle Fields Name Description Checked The menu item will indicate checked/un-checked state (see Checked . NoCheck The menu item will be shown normally, with no check indicator. Radio The menu item is part of a menu radio group (see Checked and will indicate selected state."
  },
  "api/Terminal.Gui/Terminal.Gui.MenuOpeningEventArgs.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.MenuOpeningEventArgs.html",
    "title": "Class MenuOpeningEventArgs",
    "keywords": "Class MenuOpeningEventArgs An System.EventArgs which allows passing a cancelable menu opening event or replacing with a new MenuBarItem . Inheritance System.Object System.EventArgs MenuOpeningEventArgs Inherited Members System.EventArgs.Empty System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Terminal.Gui Assembly : Terminal.Gui.dll Syntax public class MenuOpeningEventArgs : EventArgs Constructors | Improve this Doc View Source MenuOpeningEventArgs(MenuBarItem) Initializes a new instance of MenuOpeningEventArgs Declaration public MenuOpeningEventArgs(MenuBarItem currentMenu) Parameters Type Name Description MenuBarItem currentMenu The current MenuBarItem parent. Properties | Improve this Doc View Source Cancel Flag that allows you to cancel the opening of the menu. Declaration public bool Cancel { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source CurrentMenu The current MenuBarItem parent. Declaration public MenuBarItem CurrentMenu { get; } Property Value Type Description MenuBarItem | Improve this Doc View Source NewMenuBarItem The new MenuBarItem to be replaced. Declaration public MenuBarItem NewMenuBarItem { get; set; } Property Value Type Description MenuBarItem"
  },
  "api/Terminal.Gui/Terminal.Gui.MessageBox.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.MessageBox.html",
    "title": "Class MessageBox",
    "keywords": "Class MessageBox MessageBox displays a modal message to the user, with a title, a message and a series of options that the user can choose from. Inheritance System.Object MessageBox Examples var n = MessageBox.Query (\"Quit Demo\", \"Are you sure you want to quit this demo?\", \"Yes\", \"No\"); if (n == 0) quit = true; else quit = false; Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Terminal.Gui Assembly : Terminal.Gui.dll Syntax public static class MessageBox Properties | Improve this Doc View Source Clicked The index of the selected button, or -1 if the user pressed ESC to close the dialog. This is useful for web based console where by default there is no SynchronizationContext or TaskScheduler. Declaration public static int Clicked { get; } Property Value Type Description System.Int32 Methods | Improve this Doc View Source ErrorQuery(ustring, ustring, ustring[]) Presents an error MessageBox with the specified title and message and a list of buttons to show to the user. Declaration public static int ErrorQuery(ustring title, ustring message, params ustring[] buttons) Parameters Type Name Description NStack.ustring title Title for the query. NStack.ustring message Message to display, might contain multiple lines. NStack.ustring [] buttons Array of buttons to add. Returns Type Description System.Int32 The index of the selected button, or -1 if the user pressed ESC to close the dialog. | Improve this Doc View Source ErrorQuery(ustring, ustring, Int32, ustring[]) Presents an error MessageBox with the specified title and message and a list of buttons to show to the user. Declaration public static int ErrorQuery(ustring title, ustring message, int defaultButton = 0, params ustring[] buttons) Parameters Type Name Description NStack.ustring title Title for the query. NStack.ustring message Message to display, might contain multiple lines. System.Int32 defaultButton Index of the default button. NStack.ustring [] buttons Array of buttons to add. Returns Type Description System.Int32 The index of the selected button, or -1 if the user pressed ESC to close the dialog. | Improve this Doc View Source ErrorQuery(ustring, ustring, Int32, Border, ustring[]) Presents an error MessageBox with the specified title and message and a list of buttons to show to the user. Declaration public static int ErrorQuery(ustring title, ustring message, int defaultButton = 0, Border border = null, params ustring[] buttons) Parameters Type Name Description NStack.ustring title Title for the query. NStack.ustring message Message to display, might contain multiple lines. System.Int32 defaultButton Index of the default button. Border border The border settings. NStack.ustring [] buttons Array of buttons to add. Returns Type Description System.Int32 The index of the selected button, or -1 if the user pressed ESC to close the dialog. | Improve this Doc View Source ErrorQuery(Int32, Int32, ustring, ustring, ustring[]) Presents an error MessageBox with the specified title and message and a list of buttons to show to the user. Declaration public static int ErrorQuery(int width, int height, ustring title, ustring message, params ustring[] buttons) Parameters Type Name Description System.Int32 width Width for the window. System.Int32 height Height for the window. NStack.ustring title Title for the query. NStack.ustring message Message to display, might contain multiple lines. NStack.ustring [] buttons Array of buttons to add. Returns Type Description System.Int32 The index of the selected button, or -1 if the user pressed ESC to close the dialog. | Improve this Doc View Source ErrorQuery(Int32, Int32, ustring, ustring, Int32, ustring[]) Presents an error MessageBox with the specified title and message and a list of buttons to show to the user. Declaration public static int ErrorQuery(int width, int height, ustring title, ustring message, int defaultButton = 0, params ustring[] buttons) Parameters Type Name Description System.Int32 width Width for the window. System.Int32 height Height for the window. NStack.ustring title Title for the query. NStack.ustring message Message to display, might contain multiple lines. System.Int32 defaultButton Index of the default button. NStack.ustring [] buttons Array of buttons to add. Returns Type Description System.Int32 The index of the selected button, or -1 if the user pressed ESC to close the dialog. | Improve this Doc View Source ErrorQuery(Int32, Int32, ustring, ustring, Int32, Border, ustring[]) Presents an error MessageBox with the specified title and message and a list of buttons to show to the user. Declaration public static int ErrorQuery(int width, int height, ustring title, ustring message, int defaultButton = 0, Border border = null, params ustring[] buttons) Parameters Type Name Description System.Int32 width Width for the window. System.Int32 height Height for the window. NStack.ustring title Title for the query. NStack.ustring message Message to display, might contain multiple lines. System.Int32 defaultButton Index of the default button. Border border The border settings. NStack.ustring [] buttons Array of buttons to add. Returns Type Description System.Int32 The index of the selected button, or -1 if the user pressed ESC to close the dialog. | Improve this Doc View Source Query(ustring, ustring, ustring[]) Presents an error MessageBox with the specified title and message and a list of buttons to show to the user. Declaration public static int Query(ustring title, ustring message, params ustring[] buttons) Parameters Type Name Description NStack.ustring title Title for the query. NStack.ustring message Message to display, might contain multiple lines. NStack.ustring [] buttons Array of buttons to add. Returns Type Description System.Int32 The index of the selected button, or -1 if the user pressed ESC to close the dialog. | Improve this Doc View Source Query(ustring, ustring, Int32, ustring[]) Presents an error MessageBox with the specified title and message and a list of buttons to show to the user. Declaration public static int Query(ustring title, ustring message, int defaultButton = 0, params ustring[] buttons) Parameters Type Name Description NStack.ustring title Title for the query. NStack.ustring message Message to display, might contain multiple lines. System.Int32 defaultButton Index of the default button. NStack.ustring [] buttons Array of buttons to add. Returns Type Description System.Int32 The index of the selected button, or -1 if the user pressed ESC to close the dialog. | Improve this Doc View Source Query(ustring, ustring, Int32, Border, ustring[]) Presents an error MessageBox with the specified title and message and a list of buttons to show to the user. Declaration public static int Query(ustring title, ustring message, int defaultButton = 0, Border border = null, params ustring[] buttons) Parameters Type Name Description NStack.ustring title Title for the query. NStack.ustring message Message to display, might contain multiple lines. System.Int32 defaultButton Index of the default button. Border border The border settings. NStack.ustring [] buttons Array of buttons to add. Returns Type Description System.Int32 The index of the selected button, or -1 if the user pressed ESC to close the dialog. | Improve this Doc View Source Query(Int32, Int32, ustring, ustring, ustring[]) Presents a normal MessageBox with the specified title and message and a list of buttons to show to the user. Declaration public static int Query(int width, int height, ustring title, ustring message, params ustring[] buttons) Parameters Type Name Description System.Int32 width Width for the window. System.Int32 height Height for the window. NStack.ustring title Title for the query. NStack.ustring message Message to display, might contain multiple lines. NStack.ustring [] buttons Array of buttons to add. Returns Type Description System.Int32 The index of the selected button, or -1 if the user pressed ESC to close the dialog. | Improve this Doc View Source Query(Int32, Int32, ustring, ustring, Int32, ustring[]) Presents a normal MessageBox with the specified title and message and a list of buttons to show to the user. Declaration public static int Query(int width, int height, ustring title, ustring message, int defaultButton = 0, params ustring[] buttons) Parameters Type Name Description System.Int32 width Width for the window. System.Int32 height Height for the window. NStack.ustring title Title for the query. NStack.ustring message Message to display, might contain multiple lines. System.Int32 defaultButton Index of the default button. NStack.ustring [] buttons Array of buttons to add. Returns Type Description System.Int32 The index of the selected button, or -1 if the user pressed ESC to close the dialog. | Improve this Doc View Source Query(Int32, Int32, ustring, ustring, Int32, Border, ustring[]) Presents a normal MessageBox with the specified title and message and a list of buttons to show to the user. Declaration public static int Query(int width, int height, ustring title, ustring message, int defaultButton = 0, Border border = null, params ustring[] buttons) Parameters Type Name Description System.Int32 width Width for the window. System.Int32 height Height for the window. NStack.ustring title Title for the query. NStack.ustring message Message to display, might contain multiple lines. System.Int32 defaultButton Index of the default button. Border border The border settings. NStack.ustring [] buttons Array of buttons to add. Returns Type Description System.Int32 The index of the selected button, or -1 if the user pressed ESC to close the dialog."
  },
  "api/Terminal.Gui/Terminal.Gui.MouseEvent.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.MouseEvent.html",
    "title": "Struct MouseEvent",
    "keywords": "Struct MouseEvent Describes a mouse event Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Terminal.Gui Assembly : Terminal.Gui.dll Syntax public struct MouseEvent Fields | Improve this Doc View Source Flags Flags indicating the kind of mouse event that is being posted. Declaration public MouseFlags Flags Field Value Type Description MouseFlags | Improve this Doc View Source OfX The offset X (column) location for the mouse event. Declaration public int OfX Field Value Type Description System.Int32 | Improve this Doc View Source OfY The offset Y (column) location for the mouse event. Declaration public int OfY Field Value Type Description System.Int32 | Improve this Doc View Source View The current view at the location for the mouse event. Declaration public View View Field Value Type Description View | Improve this Doc View Source X The X (column) location for the mouse event. Declaration public int X Field Value Type Description System.Int32 | Improve this Doc View Source Y The Y (column) location for the mouse event. Declaration public int Y Field Value Type Description System.Int32 Methods | Improve this Doc View Source ToString() Returns a System.String that represents the current MouseEvent . Declaration public override string ToString() Returns Type Description System.String A System.String that represents the current MouseEvent . Overrides System.ValueType.ToString()"
  },
  "api/Terminal.Gui/Terminal.Gui.MouseFlags.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.MouseFlags.html",
    "title": "Enum MouseFlags",
    "keywords": "Enum MouseFlags Mouse flags reported in MouseEvent . Remarks They just happen to map to the ncurses ones. Namespace : Terminal.Gui Assembly : Terminal.Gui.dll Syntax [Flags] public enum MouseFlags Fields Name Description AllEvents Mask that captures all the events. Button1Clicked The first mouse button was clicked (press+release). Button1DoubleClicked The first mouse button was double-clicked. Button1Pressed The first mouse button was pressed. Button1Released The first mouse button was released. Button1TripleClicked The first mouse button was triple-clicked. Button2Clicked The second mouse button was clicked (press+release). Button2DoubleClicked The second mouse button was double-clicked. Button2Pressed The second mouse button was pressed. Button2Released The second mouse button was released. Button2TripleClicked The second mouse button was triple-clicked. Button3Clicked The third mouse button was clicked (press+release). Button3DoubleClicked The third mouse button was double-clicked. Button3Pressed The third mouse button was pressed. Button3Released The third mouse button was released. Button3TripleClicked The third mouse button was triple-clicked. Button4Clicked The fourth button was clicked (press+release). Button4DoubleClicked The fourth button was double-clicked. Button4Pressed The fourth mouse button was pressed. Button4Released The fourth mouse button was released. Button4TripleClicked The fourth button was triple-clicked. ButtonAlt Flag: the alt key was pressed when the mouse button took place. ButtonCtrl Flag: the ctrl key was pressed when the mouse button took place. ButtonShift Flag: the shift key was pressed when the mouse button took place. ReportMousePosition The mouse position is being reported in this event. WheeledDown Vertical button wheeled up. WheeledLeft Vertical button wheeled up while pressing ButtonShift. WheeledRight Vertical button wheeled down while pressing ButtonShift. WheeledUp Vertical button wheeled up."
  },
  "api/Terminal.Gui/Terminal.Gui.OpenDialog.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.OpenDialog.html",
    "title": "Class OpenDialog",
    "keywords": "Class OpenDialog The OpenDialog provides an interactive dialog box for users to select files or directories. Inheritance System.Object Responder View Toplevel Window Dialog FileDialog OpenDialog Implements System.IDisposable System.ComponentModel.ISupportInitializeNotification System.ComponentModel.ISupportInitialize Remarks The open dialog can be used to select files for opening, it can be configured to allow multiple items to be selected (based on the AllowsMultipleSelection) variable and you can control whether this should allow files or directories to be selected. To use, create an instance of OpenDialog , and pass it to Run(Func<Exception, Boolean>) . This will run the dialog modally, and when this returns, the list of files will be available on the FilePaths property. To select more than one file, users can use the spacebar, or control-t. Inherited Members FileDialog.WillPresent() FileDialog.Prompt FileDialog.NameDirLabel FileDialog.NameFieldLabel FileDialog.Message FileDialog.CanCreateDirectories FileDialog.IsExtensionHidden FileDialog.DirectoryPath FileDialog.AllowedFileTypes FileDialog.AllowsOtherFileTypes FileDialog.FilePath FileDialog.Canceled Dialog.AddButton(Button) Dialog.ButtonAlignment Dialog.ProcessKey(KeyEvent) Window.Title Window.Border Window.Add(View) Window.Remove(View) Window.RemoveAll() Window.Redraw(Rect) Window.OnCanFocusChanged() Window.Text Window.TextAlignment Window.OnTitleChanging(ustring, ustring) Window.TitleChanging Window.OnTitleChanged(ustring, ustring) Window.TitleChanged Toplevel.Running Toplevel.Loaded Toplevel.Ready Toplevel.Unloaded Toplevel.Activate Toplevel.Deactivate Toplevel.ChildClosed Toplevel.AllChildClosed Toplevel.Closing Toplevel.Closed Toplevel.ChildLoaded Toplevel.ChildUnloaded Toplevel.Resized Toplevel.OnLoaded() Toplevel.AlternateForwardKeyChanged Toplevel.OnAlternateForwardKeyChanged(Key) Toplevel.AlternateBackwardKeyChanged Toplevel.OnAlternateBackwardKeyChanged(Key) Toplevel.QuitKeyChanged Toplevel.OnQuitKeyChanged(Key) Toplevel.Create() Toplevel.CanFocus Toplevel.Modal Toplevel.MenuBar Toplevel.StatusBar Toplevel.IsMdiContainer Toplevel.IsMdiChild Toplevel.OnKeyDown(KeyEvent) Toplevel.OnKeyUp(KeyEvent) Toplevel.ProcessColdKey(KeyEvent) Toplevel.PositionToplevel(Toplevel) Toplevel.MouseEvent(MouseEvent) Toplevel.MoveNext() Toplevel.MovePrevious() Toplevel.RequestStop() Toplevel.RequestStop(Toplevel) Toplevel.PositionCursor() Toplevel.GetTopMdiChild(Type, String[]) Toplevel.ShowChild(Toplevel) View.Added View.Removed View.Enter View.Leave View.MouseEnter View.MouseLeave View.MouseClick View.CanFocusChanged View.EnabledChanged View.VisibleChanged View.HotKeyChanged View.HotKey View.HotKeySpecifier View.Shortcut View.ShortcutTag View.ShortcutAction View.Data View.Driver View.Subviews View.TabIndexes View.TabIndex View.TabStop View.Id View.IsCurrentTop View.WantMousePositionReports View.WantContinuousButtonPressed View.Frame View.LayoutStyle View.Bounds View.X View.Y View.Width View.Height View.ForceValidatePosDim View.GetMinWidthHeight(Size) View.SetMinWidthHeight() View.TextFormatter View.SuperView View.UpdateTextFormatterText() View.ProcessResizeView() View.SetNeedsDisplay() View.ClearLayoutNeeded() View.SetNeedsDisplay(Rect) View.SetChildNeedsDisplay() View.Add(View[]) View.BringSubviewToFront(View) View.SendSubviewToBack(View) View.SendSubviewBackwards(View) View.BringSubviewForward(View) View.Clear() View.Clear(Rect) View.ScreenToView(Int32, Int32) View.ClipToBounds() View.SetClip(Rect) View.DrawFrame(Rect, Int32, Boolean) View.DrawHotString(ustring, Attribute, Attribute) View.DrawHotString(ustring, Boolean, ColorScheme) View.Move(Int32, Int32, Boolean) View.HasFocus View.OnAdded(View) View.OnRemoved(View) View.OnEnter(View) View.OnLeave(View) View.Focused View.MostFocused View.ColorScheme View.AddRune(Int32, Int32, Rune) View.ClearNeedsDisplay() View.DrawContent View.OnDrawContent(Rect) View.DrawContentComplete View.OnDrawContentComplete(Rect) View.SetFocus() View.KeyPress View.InvokeKeybindings(KeyEvent) View.AddKeyBinding(Key, Command[]) View.ReplaceKeyBinding(Key, Key) View.ContainsKeyBinding(Key) View.ClearKeybindings() View.ClearKeybinding(Key) View.ClearKeybinding(Command[]) View.AddCommand(Command, Func<Nullable<Boolean>>) View.GetSupportedCommands() View.GetKeyFromCommand(Command[]) View.ProcessHotKey(KeyEvent) View.KeyDown View.KeyUp View.EnsureFocus() View.FocusFirst() View.FocusLast() View.FocusPrev() View.FocusNext() View.LayoutStarted View.LayoutComplete View.Initialized View.LayoutSubviews() View.AutoSize View.PreserveTrailingSpaces View.VerticalTextAlignment View.TextDirection View.IsInitialized View.IsAdded View.Enabled View.Visible View.ToString() View.GetAutoSize() View.GetHotKeySpecifierLength(Boolean) View.GetTextFormatterBoundsSize() View.GetBoundsTextFormatterSize() View.OnMouseEnter(MouseEvent) View.OnMouseLeave(MouseEvent) View.OnMouseEvent(MouseEvent) View.OnMouseClick(View.MouseEventArgs) View.OnEnabledChanged() View.OnVisibleChanged() View.Dispose(Boolean) View.BeginInit() View.EndInit() View.SetWidth(Int32, Int32) View.SetHeight(Int32, Int32) View.GetCurrentWidth(Int32) View.GetCurrentHeight(Int32) View.GetNormalColor() View.GetTopSuperView() Responder.Dispose() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Terminal.Gui Assembly : Terminal.Gui.dll Syntax public class OpenDialog : FileDialog, IDisposable, ISupportInitializeNotification, ISupportInitialize Constructors | Improve this Doc View Source OpenDialog() Initializes a new OpenDialog . Declaration public OpenDialog() | Improve this Doc View Source OpenDialog(ustring, ustring, List<String>, OpenDialog.OpenMode) Initializes a new OpenDialog . Declaration public OpenDialog(ustring title, ustring message, List<string> allowedTypes = null, OpenDialog.OpenMode openMode = OpenDialog.OpenMode.File) Parameters Type Name Description NStack.ustring title The title. NStack.ustring message The message. System.Collections.Generic.List < System.String > allowedTypes The allowed types. OpenDialog.OpenMode openMode The open mode. Properties | Improve this Doc View Source AllowsMultipleSelection Gets or sets a value indicating whether this OpenDialog allows multiple selection. Declaration public bool AllowsMultipleSelection { get; set; } Property Value Type Description System.Boolean true if allows multiple selection; otherwise, false , defaults to false. | Improve this Doc View Source CanChooseDirectories Gets or sets a value indicating whether this OpenDialog can choose directories. Declaration public bool CanChooseDirectories { get; set; } Property Value Type Description System.Boolean true if can choose directories; otherwise, false defaults to false . | Improve this Doc View Source CanChooseFiles Gets or sets a value indicating whether this OpenDialog can choose files. Declaration public bool CanChooseFiles { get; set; } Property Value Type Description System.Boolean true if can choose files; otherwise, false . Defaults to true | Improve this Doc View Source FilePaths Returns the selected files, or an empty list if nothing has been selected Declaration public IReadOnlyList<string> FilePaths { get; } Property Value Type Description System.Collections.Generic.IReadOnlyList < System.String > The file paths. Implements System.IDisposable System.ComponentModel.ISupportInitializeNotification System.ComponentModel.ISupportInitialize"
  },
  "api/Terminal.Gui/Terminal.Gui.OpenDialog.OpenMode.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.OpenDialog.OpenMode.html",
    "title": "Enum OpenDialog.OpenMode",
    "keywords": "Enum OpenDialog.OpenMode Determine which System.IO type to open. Namespace : Terminal.Gui Assembly : Terminal.Gui.dll Syntax public enum OpenMode Fields Name Description Directory Opens only directory or directories. File Opens only file or files. Mixed Opens files and directories."
  },
  "api/Terminal.Gui/Terminal.Gui.PanelView.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.PanelView.html",
    "title": "Class PanelView",
    "keywords": "Class PanelView A container for single Child that will allow to drawn Border in two ways. If UsePanelFrame the borders and the child will be accommodated in the available panel size, otherwise the panel will be resized based on the child and borders thickness sizes. Inheritance System.Object Responder View PanelView Implements System.IDisposable System.ComponentModel.ISupportInitializeNotification System.ComponentModel.ISupportInitialize Inherited Members View.Added View.Removed View.Enter View.Leave View.MouseEnter View.MouseLeave View.MouseClick View.CanFocusChanged View.EnabledChanged View.VisibleChanged View.HotKeyChanged View.HotKey View.HotKeySpecifier View.Shortcut View.ShortcutTag View.ShortcutAction View.Data View.Driver View.Subviews View.TabIndexes View.TabIndex View.TabStop View.CanFocus View.Id View.IsCurrentTop View.WantMousePositionReports View.WantContinuousButtonPressed View.Frame View.LayoutStyle View.Bounds View.X View.Y View.Width View.Height View.ForceValidatePosDim View.GetMinWidthHeight(Size) View.SetMinWidthHeight() View.TextFormatter View.SuperView View.UpdateTextFormatterText() View.ProcessResizeView() View.SetNeedsDisplay() View.ClearLayoutNeeded() View.SetNeedsDisplay(Rect) View.SetChildNeedsDisplay() View.Add(View[]) View.BringSubviewToFront(View) View.SendSubviewToBack(View) View.SendSubviewBackwards(View) View.BringSubviewForward(View) View.Clear() View.Clear(Rect) View.ScreenToView(Int32, Int32) View.ClipToBounds() View.SetClip(Rect) View.DrawFrame(Rect, Int32, Boolean) View.DrawHotString(ustring, Attribute, Attribute) View.DrawHotString(ustring, Boolean, ColorScheme) View.Move(Int32, Int32, Boolean) View.PositionCursor() View.HasFocus View.OnAdded(View) View.OnRemoved(View) View.OnEnter(View) View.OnLeave(View) View.Focused View.MostFocused View.ColorScheme View.AddRune(Int32, Int32, Rune) View.ClearNeedsDisplay() View.DrawContent View.OnDrawContent(Rect) View.DrawContentComplete View.OnDrawContentComplete(Rect) View.SetFocus() View.KeyPress View.ProcessKey(KeyEvent) View.InvokeKeybindings(KeyEvent) View.AddKeyBinding(Key, Command[]) View.ReplaceKeyBinding(Key, Key) View.ContainsKeyBinding(Key) View.ClearKeybindings() View.ClearKeybinding(Key) View.ClearKeybinding(Command[]) View.AddCommand(Command, Func<Nullable<Boolean>>) View.GetSupportedCommands() View.GetKeyFromCommand(Command[]) View.ProcessHotKey(KeyEvent) View.ProcessColdKey(KeyEvent) View.KeyDown View.OnKeyDown(KeyEvent) View.KeyUp View.OnKeyUp(KeyEvent) View.EnsureFocus() View.FocusFirst() View.FocusLast() View.FocusPrev() View.FocusNext() View.LayoutStarted View.LayoutComplete View.Initialized View.LayoutSubviews() View.Text View.AutoSize View.PreserveTrailingSpaces View.TextAlignment View.VerticalTextAlignment View.TextDirection View.IsInitialized View.IsAdded View.Enabled View.Visible View.ToString() View.GetAutoSize() View.GetHotKeySpecifierLength(Boolean) View.GetTextFormatterBoundsSize() View.GetBoundsTextFormatterSize() View.OnMouseEnter(MouseEvent) View.OnMouseLeave(MouseEvent) View.OnMouseEvent(MouseEvent) View.OnMouseClick(View.MouseEventArgs) View.OnCanFocusChanged() View.OnEnabledChanged() View.OnVisibleChanged() View.Dispose(Boolean) View.BeginInit() View.EndInit() View.SetWidth(Int32, Int32) View.SetHeight(Int32, Int32) View.GetCurrentWidth(Int32) View.GetCurrentHeight(Int32) View.GetNormalColor() View.GetTopSuperView() Responder.MouseEvent(MouseEvent) Responder.Dispose() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Terminal.Gui Assembly : Terminal.Gui.dll Syntax public class PanelView : View, IDisposable, ISupportInitializeNotification, ISupportInitialize Constructors | Improve this Doc View Source PanelView() Initializes a panel with a null child. Declaration public PanelView() | Improve this Doc View Source PanelView(View) Initializes a panel with a valid child. Declaration public PanelView(View child) Parameters Type Name Description View child Properties | Improve this Doc View Source Border Declaration public override Border Border { get; set; } Property Value Type Description Border Overrides View.Border | Improve this Doc View Source Child The child that will use this panel. Declaration public View Child { get; set; } Property Value Type Description View | Improve this Doc View Source UsePanelFrame Gets or sets if the panel size will used, otherwise the child size. Declaration public bool UsePanelFrame { get; set; } Property Value Type Description System.Boolean Methods | Improve this Doc View Source Add(View) Declaration public override void Add(View view) Parameters Type Name Description View view Overrides View.Add(View) | Improve this Doc View Source Redraw(Rect) Declaration public override void Redraw(Rect bounds) Parameters Type Name Description Rect bounds Overrides View.Redraw(Rect) | Improve this Doc View Source Remove(View) Declaration public override void Remove(View view) Parameters Type Name Description View view Overrides View.Remove(View) | Improve this Doc View Source RemoveAll() Declaration public override void RemoveAll() Overrides View.RemoveAll() Implements System.IDisposable System.ComponentModel.ISupportInitializeNotification System.ComponentModel.ISupportInitialize"
  },
  "api/Terminal.Gui/Terminal.Gui.Point.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.Point.html",
    "title": "Struct Point",
    "keywords": "Struct Point Represents an ordered pair of integer x- and y-coordinates that defines a point in a two-dimensional plane. Inherited Members System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Terminal.Gui Assembly : Terminal.Gui.dll Syntax public struct Point Constructors | Improve this Doc View Source Point(Int32, Int32) Point Constructor Declaration public Point(int x, int y) Parameters Type Name Description System.Int32 x System.Int32 y | Improve this Doc View Source Point(Size) Point Constructor Declaration public Point(Size sz) Parameters Type Name Description Size sz Fields | Improve this Doc View Source Empty Empty Shared Field Declaration public static readonly Point Empty Field Value Type Description Point | Improve this Doc View Source X Gets or sets the x-coordinate of this Point. Declaration public int X Field Value Type Description System.Int32 | Improve this Doc View Source Y Gets or sets the y-coordinate of this Point. Declaration public int Y Field Value Type Description System.Int32 Properties | Improve this Doc View Source IsEmpty IsEmpty Property Declaration public readonly bool IsEmpty { get; } Property Value Type Description System.Boolean Methods | Improve this Doc View Source Add(Point, Size) Adds the specified Size to the specified Point. Declaration public static Point Add(Point pt, Size sz) Parameters Type Name Description Point pt The Point to add. Size sz The Size to add. Returns Type Description Point The Point that is the result of the addition operation. | Improve this Doc View Source Equals(Object) Equals Method Declaration public override bool Equals(object obj) Parameters Type Name Description System.Object obj Returns Type Description System.Boolean Overrides System.ValueType.Equals(System.Object) | Improve this Doc View Source GetHashCode() GetHashCode Method Declaration public override int GetHashCode() Returns Type Description System.Int32 Overrides System.ValueType.GetHashCode() | Improve this Doc View Source Offset(Int32, Int32) Offset Method Declaration public void Offset(int dx, int dy) Parameters Type Name Description System.Int32 dx System.Int32 dy | Improve this Doc View Source Offset(Point) Translates this Point by the specified Point. Declaration public void Offset(Point p) Parameters Type Name Description Point p The Point used offset this Point. | Improve this Doc View Source Subtract(Point, Size) Returns the result of subtracting specified Size from the specified Point. Declaration public static Point Subtract(Point pt, Size sz) Parameters Type Name Description Point pt The Point to be subtracted from. Size sz The Size to subtract from the Point. Returns Type Description Point The Point that is the result of the subtraction operation. | Improve this Doc View Source ToString() ToString Method Declaration public override string ToString() Returns Type Description System.String Overrides System.ValueType.ToString() Operators | Improve this Doc View Source Addition(Point, Size) Addition Operator Declaration public static Point operator +(Point pt, Size sz) Parameters Type Name Description Point pt Size sz Returns Type Description Point | Improve this Doc View Source Equality(Point, Point) Equality Operator Declaration public static bool operator ==(Point left, Point right) Parameters Type Name Description Point left Point right Returns Type Description System.Boolean | Improve this Doc View Source Explicit(Point to Size) Point to Size Conversion Declaration public static explicit operator Size(Point p) Parameters Type Name Description Point p Returns Type Description Size | Improve this Doc View Source Inequality(Point, Point) Inequality Operator Declaration public static bool operator !=(Point left, Point right) Parameters Type Name Description Point left Point right Returns Type Description System.Boolean | Improve this Doc View Source Subtraction(Point, Size) Subtraction Operator Declaration public static Point operator -(Point pt, Size sz) Parameters Type Name Description Point pt Size sz Returns Type Description Point"
  },
  "api/Terminal.Gui/Terminal.Gui.PointF.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.PointF.html",
    "title": "Struct PointF",
    "keywords": "Struct PointF Represents an ordered pair of x and y coordinates that define a point in a two-dimensional plane. Implements System.IEquatable < PointF > Inherited Members System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Terminal.Gui Assembly : Terminal.Gui.dll Syntax public struct PointF : IEquatable<PointF> Constructors | Improve this Doc View Source PointF(Single, Single) Initializes a new instance of the PointF class with the specified coordinates. Declaration public PointF(float x, float y) Parameters Type Name Description System.Single x System.Single y Fields | Improve this Doc View Source Empty Creates a new instance of the PointF class with member data left uninitialized. Declaration public static readonly PointF Empty Field Value Type Description PointF Properties | Improve this Doc View Source IsEmpty Gets a value indicating whether this PointF is empty. Declaration [Browsable(false)] public readonly bool IsEmpty { get; } Property Value Type Description System.Boolean | Improve this Doc View Source X Gets the x-coordinate of this PointF . Declaration public float X { get; set; } Property Value Type Description System.Single | Improve this Doc View Source Y Gets the y-coordinate of this PointF . Declaration public float Y { get; set; } Property Value Type Description System.Single Methods | Improve this Doc View Source Add(PointF, Size) Translates a PointF by a given Size . Declaration public static PointF Add(PointF pt, Size sz) Parameters Type Name Description PointF pt Size sz Returns Type Description PointF | Improve this Doc View Source Add(PointF, SizeF) Translates a PointF by a given SizeF . Declaration public static PointF Add(PointF pt, SizeF sz) Parameters Type Name Description PointF pt SizeF sz Returns Type Description PointF | Improve this Doc View Source Equals(Object) Compares two PointF objects. The result specifies whether the values of the X and Y properties of the two PointF objects are equal. Declaration public override bool Equals(object obj) Parameters Type Name Description System.Object obj Returns Type Description System.Boolean Overrides System.ValueType.Equals(System.Object) | Improve this Doc View Source Equals(PointF) Compares two PointF objects. The result specifies whether the values of the X and Y properties of the two PointF objects are equal. Declaration public bool Equals(PointF other) Parameters Type Name Description PointF other Returns Type Description System.Boolean | Improve this Doc View Source GetHashCode() Generates a hashcode from the X and Y components Declaration public override int GetHashCode() Returns Type Description System.Int32 Overrides System.ValueType.GetHashCode() | Improve this Doc View Source Subtract(PointF, Size) Translates a PointF by the negative of a given Size . Declaration public static PointF Subtract(PointF pt, Size sz) Parameters Type Name Description PointF pt Size sz Returns Type Description PointF | Improve this Doc View Source Subtract(PointF, SizeF) Translates a PointF by the negative of a given SizeF . Declaration public static PointF Subtract(PointF pt, SizeF sz) Parameters Type Name Description PointF pt SizeF sz Returns Type Description PointF | Improve this Doc View Source ToString() Returns a string including the X and Y values Declaration public override string ToString() Returns Type Description System.String Overrides System.ValueType.ToString() Operators | Improve this Doc View Source Addition(PointF, Size) Translates a PointF by a given Size . Declaration public static PointF operator +(PointF pt, Size sz) Parameters Type Name Description PointF pt Size sz Returns Type Description PointF | Improve this Doc View Source Addition(PointF, SizeF) Translates a PointF by a given SizeF . Declaration public static PointF operator +(PointF pt, SizeF sz) Parameters Type Name Description PointF pt SizeF sz Returns Type Description PointF | Improve this Doc View Source Equality(PointF, PointF) Compares two PointF objects. The result specifies whether the values of the X and Y properties of the two PointF objects are equal. Declaration public static bool operator ==(PointF left, PointF right) Parameters Type Name Description PointF left PointF right Returns Type Description System.Boolean | Improve this Doc View Source Inequality(PointF, PointF) Compares two PointF objects. The result specifies whether the values of the X or Y properties of the two PointF objects are unequal. Declaration public static bool operator !=(PointF left, PointF right) Parameters Type Name Description PointF left PointF right Returns Type Description System.Boolean | Improve this Doc View Source Subtraction(PointF, Size) Translates a PointF by the negative of a given Size . Declaration public static PointF operator -(PointF pt, Size sz) Parameters Type Name Description PointF pt Size sz Returns Type Description PointF | Improve this Doc View Source Subtraction(PointF, SizeF) Translates a PointF by the negative of a given SizeF . Declaration public static PointF operator -(PointF pt, SizeF sz) Parameters Type Name Description PointF pt SizeF sz Returns Type Description PointF Implements System.IEquatable<T>"
  },
  "api/Terminal.Gui/Terminal.Gui.Pos.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.Pos.html",
    "title": "Class Pos",
    "keywords": "Class Pos Describes the position of a View which can be an absolute value, a percentage, centered, or relative to the ending dimension. Integer values are implicitly convertible to an absolute Pos . These objects are created using the static methods Percent, AnchorEnd, and Center. The Pos objects can be combined with the addition and subtraction operators. Inheritance System.Object Pos Remarks Use the Pos objects on the X or Y properties of a view to control the position. These can be used to set the absolute position, when merely assigning an integer value (via the implicit integer to Pos conversion), and they can be combined to produce more useful layouts, like: Pos.Center - 3, which would shift the position of the View 3 characters to the left after centering for example. It is possible to reference coordinates of another view by using the methods Left(View), Right(View), Bottom(View), Top(View). The X(View) and Y(View) are aliases to Left(View) and Top(View) respectively. Inherited Members System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Terminal.Gui Assembly : Terminal.Gui.dll Syntax public class Pos Methods | Improve this Doc View Source AnchorEnd(Int32) Creates a Pos object that is anchored to the end (right side or bottom) of the dimension, useful to flush the layout from the right or bottom. Declaration public static Pos AnchorEnd(int margin = 0) Parameters Type Name Description System.Int32 margin Optional margin to place to the right or below. Returns Type Description Pos The Pos object anchored to the end (the bottom or the right side). | Improve this Doc View Source At(Int32) Creates an Absolute Pos from the specified integer value. Declaration public static Pos At(int n) Parameters Type Name Description System.Int32 n The value to convert to the Pos . Returns Type Description Pos The Absolute Pos . | Improve this Doc View Source Bottom(View) Returns a Pos object tracks the Bottom (Y+Height) coordinate of the specified View Declaration public static Pos Bottom(View view) Parameters Type Name Description View view The View that will be tracked. Returns Type Description Pos The Pos that depends on the other view. | Improve this Doc View Source Center() Returns a Pos object that can be used to center the View Declaration public static Pos Center() Returns Type Description Pos The center Pos. | Improve this Doc View Source Equals(Object) Determines whether the specified object is equal to the current object. Declaration public override bool Equals(object other) Parameters Type Name Description System.Object other The object to compare with the current object. Returns Type Description System.Boolean true if the specified object is equal to the current object; otherwise, false . Overrides System.Object.Equals(System.Object) | Improve this Doc View Source Function(Func<Int32>) Creates a \"PosFunc\" from the specified function. Declaration public static Pos Function(Func<int> function) Parameters Type Name Description System.Func < System.Int32 > function The function to be executed. Returns Type Description Pos The Pos returned from the function. | Improve this Doc View Source GetHashCode() Serves as the default hash function. Declaration public override int GetHashCode() Returns Type Description System.Int32 A hash code for the current object. Overrides System.Object.GetHashCode() | Improve this Doc View Source Left(View) Returns a Pos object tracks the Left (X) position of the specified View . Declaration public static Pos Left(View view) Parameters Type Name Description View view The View that will be tracked. Returns Type Description Pos The Pos that depends on the other view. | Improve this Doc View Source Percent(Single) Creates a percentage Pos object Declaration public static Pos Percent(float n) Parameters Type Name Description System.Single n A value between 0 and 100 representing the percentage. Returns Type Description Pos The percent Pos object. | Improve this Doc View Source Right(View) Returns a Pos object tracks the Right (X+Width) coordinate of the specified View . Declaration public static Pos Right(View view) Parameters Type Name Description View view The View that will be tracked. Returns Type Description Pos The Pos that depends on the other view. | Improve this Doc View Source Top(View) Returns a Pos object tracks the Top (Y) position of the specified View . Declaration public static Pos Top(View view) Parameters Type Name Description View view The View that will be tracked. Returns Type Description Pos The Pos that depends on the other view. | Improve this Doc View Source X(View) Returns a Pos object tracks the Left (X) position of the specified View . Declaration public static Pos X(View view) Parameters Type Name Description View view The View that will be tracked. Returns Type Description Pos The Pos that depends on the other view. | Improve this Doc View Source Y(View) Returns a Pos object tracks the Top (Y) position of the specified View . Declaration public static Pos Y(View view) Parameters Type Name Description View view The View that will be tracked. Returns Type Description Pos The Pos that depends on the other view. Operators | Improve this Doc View Source Addition(Pos, Pos) Adds a Pos to a Pos , yielding a new Pos . Declaration public static Pos operator +(Pos left, Pos right) Parameters Type Name Description Pos left The first Pos to add. Pos right The second Pos to add. Returns Type Description Pos The Pos that is the sum of the values of left and right . | Improve this Doc View Source Implicit(Int32 to Pos) Creates an Absolute Pos from the specified integer value. Declaration public static implicit operator Pos(int n) Parameters Type Name Description System.Int32 n The value to convert to the Pos . Returns Type Description Pos The Absolute Pos . | Improve this Doc View Source Subtraction(Pos, Pos) Subtracts a Pos from a Pos , yielding a new Pos . Declaration public static Pos operator -(Pos left, Pos right) Parameters Type Name Description Pos left The Pos to subtract from (the minuend). Pos right The Pos to subtract (the subtrahend). Returns Type Description Pos The Pos that is the left minus right ."
  },
  "api/Terminal.Gui/Terminal.Gui.ProgressBar.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.ProgressBar.html",
    "title": "Class ProgressBar",
    "keywords": "Class ProgressBar A Progress Bar view that can indicate progress of an activity visually. Inheritance System.Object Responder View ProgressBar Implements System.IDisposable System.ComponentModel.ISupportInitializeNotification System.ComponentModel.ISupportInitialize Remarks ProgressBar can operate in two modes, percentage mode, or activity mode. The progress bar starts in percentage mode and setting the Fraction property will reflect on the UI the progress made so far. Activity mode is used when the application has no way of knowing how much time is left, and is started when the Pulse() method is called. Call Pulse() repeatedly as progress is made. Inherited Members View.Added View.Removed View.Enter View.Leave View.MouseEnter View.MouseLeave View.MouseClick View.CanFocusChanged View.EnabledChanged View.VisibleChanged View.HotKeyChanged View.HotKey View.HotKeySpecifier View.Shortcut View.ShortcutTag View.ShortcutAction View.Data View.Driver View.Subviews View.TabIndexes View.TabIndex View.TabStop View.CanFocus View.Id View.IsCurrentTop View.WantMousePositionReports View.WantContinuousButtonPressed View.Frame View.LayoutStyle View.Bounds View.X View.Y View.Width View.Height View.ForceValidatePosDim View.GetMinWidthHeight(Size) View.SetMinWidthHeight() View.TextFormatter View.SuperView View.UpdateTextFormatterText() View.ProcessResizeView() View.SetNeedsDisplay() View.ClearLayoutNeeded() View.SetNeedsDisplay(Rect) View.SetChildNeedsDisplay() View.Add(View) View.Add(View[]) View.RemoveAll() View.Remove(View) View.BringSubviewToFront(View) View.SendSubviewToBack(View) View.SendSubviewBackwards(View) View.BringSubviewForward(View) View.Clear() View.Clear(Rect) View.ScreenToView(Int32, Int32) View.ClipToBounds() View.SetClip(Rect) View.DrawFrame(Rect, Int32, Boolean) View.DrawHotString(ustring, Attribute, Attribute) View.DrawHotString(ustring, Boolean, ColorScheme) View.Move(Int32, Int32, Boolean) View.PositionCursor() View.HasFocus View.OnAdded(View) View.OnRemoved(View) View.OnLeave(View) View.Focused View.MostFocused View.ColorScheme View.AddRune(Int32, Int32, Rune) View.ClearNeedsDisplay() View.DrawContent View.OnDrawContent(Rect) View.DrawContentComplete View.OnDrawContentComplete(Rect) View.SetFocus() View.KeyPress View.ProcessKey(KeyEvent) View.InvokeKeybindings(KeyEvent) View.AddKeyBinding(Key, Command[]) View.ReplaceKeyBinding(Key, Key) View.ContainsKeyBinding(Key) View.ClearKeybindings() View.ClearKeybinding(Key) View.ClearKeybinding(Command[]) View.AddCommand(Command, Func<Nullable<Boolean>>) View.GetSupportedCommands() View.GetKeyFromCommand(Command[]) View.ProcessHotKey(KeyEvent) View.ProcessColdKey(KeyEvent) View.KeyDown View.OnKeyDown(KeyEvent) View.KeyUp View.OnKeyUp(KeyEvent) View.EnsureFocus() View.FocusFirst() View.FocusLast() View.FocusPrev() View.FocusNext() View.LayoutStarted View.LayoutComplete View.Initialized View.LayoutSubviews() View.AutoSize View.PreserveTrailingSpaces View.TextAlignment View.VerticalTextAlignment View.TextDirection View.IsInitialized View.IsAdded View.Enabled View.Visible View.Border View.ToString() View.GetAutoSize() View.GetHotKeySpecifierLength(Boolean) View.GetTextFormatterBoundsSize() View.GetBoundsTextFormatterSize() View.OnMouseEnter(MouseEvent) View.OnMouseLeave(MouseEvent) View.OnMouseEvent(MouseEvent) View.OnMouseClick(View.MouseEventArgs) View.OnCanFocusChanged() View.OnEnabledChanged() View.OnVisibleChanged() View.Dispose(Boolean) View.BeginInit() View.EndInit() View.SetWidth(Int32, Int32) View.SetHeight(Int32, Int32) View.GetCurrentWidth(Int32) View.GetCurrentHeight(Int32) View.GetNormalColor() View.GetTopSuperView() Responder.MouseEvent(MouseEvent) Responder.Dispose() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Terminal.Gui Assembly : Terminal.Gui.dll Syntax public class ProgressBar : View, IDisposable, ISupportInitializeNotification, ISupportInitialize Constructors | Improve this Doc View Source ProgressBar() Initializes a new instance of the ProgressBar class, starts in percentage mode and uses relative layout. Declaration public ProgressBar() | Improve this Doc View Source ProgressBar(Rect) Initializes a new instance of the ProgressBar class, starts in percentage mode with an absolute position and size. Declaration public ProgressBar(Rect rect) Parameters Type Name Description Rect rect Rect. Properties | Improve this Doc View Source BidirectionalMarquee Specifies if the MarqueeBlocks or the MarqueeContinuous styles is unidirectional or bidirectional. Declaration public bool BidirectionalMarquee { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source Fraction Gets or sets the ProgressBar fraction to display, must be a value between 0 and 1. Declaration public float Fraction { get; set; } Property Value Type Description System.Single The fraction representing the progress. | Improve this Doc View Source ProgressBarFormat Specifies the format that a ProgressBar uses to indicate the visual presentation. Declaration public ProgressBarFormat ProgressBarFormat { get; set; } Property Value Type Description ProgressBarFormat | Improve this Doc View Source ProgressBarStyle Gets/Sets the progress bar style based on the ProgressBarStyle Declaration public ProgressBarStyle ProgressBarStyle { get; set; } Property Value Type Description ProgressBarStyle | Improve this Doc View Source SegmentCharacter Segment indicator for meter views. Declaration public Rune SegmentCharacter { get; set; } Property Value Type Description System.Rune | Improve this Doc View Source Text Declaration public override ustring Text { get; set; } Property Value Type Description NStack.ustring Overrides View.Text Methods | Improve this Doc View Source OnEnter(View) Declaration public override bool OnEnter(View view) Parameters Type Name Description View view Returns Type Description System.Boolean Overrides View.OnEnter(View) | Improve this Doc View Source Pulse() Notifies the ProgressBar that some progress has taken place. Declaration public void Pulse() | Improve this Doc View Source Redraw(Rect) Declaration public override void Redraw(Rect region) Parameters Type Name Description Rect region Overrides View.Redraw(Rect) Implements System.IDisposable System.ComponentModel.ISupportInitializeNotification System.ComponentModel.ISupportInitialize"
  },
  "api/Terminal.Gui/Terminal.Gui.ProgressBarFormat.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.ProgressBarFormat.html",
    "title": "Enum ProgressBarFormat",
    "keywords": "Enum ProgressBarFormat Specifies the format that a ProgressBar uses to indicate the visual presentation. Namespace : Terminal.Gui Assembly : Terminal.Gui.dll Syntax public enum ProgressBarFormat Fields Name Description Framed A framed visual presentation showing only the progress bar. FramedPlusPercentage A framed visual presentation showing the progress bar and the percentage. FramedProgressPadded A framed visual presentation showing all with the progress bar padded. Simple A simple visual presentation showing only the progress bar. SimplePlusPercentage A simple visual presentation showing the progress bar and the percentage."
  },
  "api/Terminal.Gui/Terminal.Gui.ProgressBarStyle.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.ProgressBarStyle.html",
    "title": "Enum ProgressBarStyle",
    "keywords": "Enum ProgressBarStyle Specifies the style that a ProgressBar uses to indicate the progress of an operation. Namespace : Terminal.Gui Assembly : Terminal.Gui.dll Syntax public enum ProgressBarStyle Fields Name Description Blocks Indicates progress by increasing the number of segmented blocks in a ProgressBar . Continuous Indicates progress by increasing the size of a smooth, continuous bar in a ProgressBar . MarqueeBlocks Indicates progress by continuously scrolling a block across a ProgressBar in a marquee fashion. MarqueeContinuous Indicates progress by continuously scrolling a block across a ProgressBar in a marquee fashion."
  },
  "api/Terminal.Gui/Terminal.Gui.RadioGroup.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.RadioGroup.html",
    "title": "Class RadioGroup",
    "keywords": "Class RadioGroup Displays a group of labels each with a selected indicator. Only one of those can be selected at a given time. Inheritance System.Object Responder View RadioGroup Implements System.IDisposable System.ComponentModel.ISupportInitializeNotification System.ComponentModel.ISupportInitialize Inherited Members View.Added View.Removed View.Enter View.Leave View.MouseEnter View.MouseLeave View.MouseClick View.CanFocusChanged View.EnabledChanged View.VisibleChanged View.HotKeyChanged View.HotKey View.HotKeySpecifier View.Shortcut View.ShortcutTag View.ShortcutAction View.Data View.Driver View.Subviews View.TabIndexes View.TabIndex View.TabStop View.CanFocus View.Id View.IsCurrentTop View.WantMousePositionReports View.WantContinuousButtonPressed View.Frame View.LayoutStyle View.Bounds View.X View.Y View.Width View.Height View.ForceValidatePosDim View.GetMinWidthHeight(Size) View.SetMinWidthHeight() View.TextFormatter View.SuperView View.UpdateTextFormatterText() View.ProcessResizeView() View.SetNeedsDisplay() View.ClearLayoutNeeded() View.SetNeedsDisplay(Rect) View.SetChildNeedsDisplay() View.Add(View) View.Add(View[]) View.RemoveAll() View.Remove(View) View.BringSubviewToFront(View) View.SendSubviewToBack(View) View.SendSubviewBackwards(View) View.BringSubviewForward(View) View.Clear() View.Clear(Rect) View.ScreenToView(Int32, Int32) View.ClipToBounds() View.SetClip(Rect) View.DrawFrame(Rect, Int32, Boolean) View.DrawHotString(ustring, Attribute, Attribute) View.DrawHotString(ustring, Boolean, ColorScheme) View.Move(Int32, Int32, Boolean) View.HasFocus View.OnAdded(View) View.OnRemoved(View) View.OnLeave(View) View.Focused View.MostFocused View.ColorScheme View.AddRune(Int32, Int32, Rune) View.ClearNeedsDisplay() View.DrawContent View.OnDrawContent(Rect) View.DrawContentComplete View.OnDrawContentComplete(Rect) View.SetFocus() View.KeyPress View.InvokeKeybindings(KeyEvent) View.AddKeyBinding(Key, Command[]) View.ReplaceKeyBinding(Key, Key) View.ContainsKeyBinding(Key) View.ClearKeybindings() View.ClearKeybinding(Key) View.ClearKeybinding(Command[]) View.AddCommand(Command, Func<Nullable<Boolean>>) View.GetSupportedCommands() View.GetKeyFromCommand(Command[]) View.ProcessHotKey(KeyEvent) View.KeyDown View.OnKeyDown(KeyEvent) View.KeyUp View.OnKeyUp(KeyEvent) View.EnsureFocus() View.FocusFirst() View.FocusLast() View.FocusPrev() View.FocusNext() View.LayoutStarted View.LayoutComplete View.Initialized View.LayoutSubviews() View.Text View.AutoSize View.PreserveTrailingSpaces View.TextAlignment View.VerticalTextAlignment View.TextDirection View.IsInitialized View.IsAdded View.Enabled View.Visible View.Border View.ToString() View.GetAutoSize() View.GetHotKeySpecifierLength(Boolean) View.GetTextFormatterBoundsSize() View.GetBoundsTextFormatterSize() View.OnMouseEnter(MouseEvent) View.OnMouseLeave(MouseEvent) View.OnMouseEvent(MouseEvent) View.OnMouseClick(View.MouseEventArgs) View.OnCanFocusChanged() View.OnEnabledChanged() View.OnVisibleChanged() View.Dispose(Boolean) View.BeginInit() View.EndInit() View.SetWidth(Int32, Int32) View.SetHeight(Int32, Int32) View.GetCurrentWidth(Int32) View.GetCurrentHeight(Int32) View.GetNormalColor() View.GetTopSuperView() Responder.Dispose() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Terminal.Gui Assembly : Terminal.Gui.dll Syntax public class RadioGroup : View, IDisposable, ISupportInitializeNotification, ISupportInitialize Constructors | Improve this Doc View Source RadioGroup() Initializes a new instance of the RadioGroup class using Computed layout. Declaration public RadioGroup() | Improve this Doc View Source RadioGroup(ustring[], Int32) Initializes a new instance of the RadioGroup class using Computed layout. Declaration public RadioGroup(ustring[] radioLabels, int selected = 0) Parameters Type Name Description NStack.ustring [] radioLabels The radio labels; an array of strings that can contain hotkeys using an underscore before the letter. System.Int32 selected The index of the item to be selected, the value is clamped to the number of items. | Improve this Doc View Source RadioGroup(Int32, Int32, ustring[], Int32) Initializes a new instance of the RadioGroup class using Absolute layout. The View frame is computed from the provided radio labels. Declaration public RadioGroup(int x, int y, ustring[] radioLabels, int selected = 0) Parameters Type Name Description System.Int32 x The x coordinate. System.Int32 y The y coordinate. NStack.ustring [] radioLabels The radio labels; an array of strings that can contain hotkeys using an underscore before the letter. System.Int32 selected The item to be selected, the value is clamped to the number of items. | Improve this Doc View Source RadioGroup(Rect, ustring[], Int32) Initializes a new instance of the RadioGroup class using Absolute layout. Declaration public RadioGroup(Rect rect, ustring[] radioLabels, int selected = 0) Parameters Type Name Description Rect rect Boundaries for the radio group. NStack.ustring [] radioLabels The radio labels; an array of strings that can contain hotkeys using an underscore before the letter. System.Int32 selected The index of item to be selected, the value is clamped to the number of items. Properties | Improve this Doc View Source DisplayMode Gets or sets the DisplayModeLayout for this RadioGroup . Declaration public DisplayModeLayout DisplayMode { get; set; } Property Value Type Description DisplayModeLayout | Improve this Doc View Source HorizontalSpace Gets or sets the horizontal space for this RadioGroup if the DisplayMode is Horizontal Declaration public int HorizontalSpace { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source RadioLabels The radio labels to display Declaration public ustring[] RadioLabels { get; set; } Property Value Type Description NStack.ustring [] The radio labels. | Improve this Doc View Source SelectedItem The currently selected item from the list of radio labels Declaration public int SelectedItem { get; set; } Property Value Type Description System.Int32 The selected. Methods | Improve this Doc View Source MouseEvent(MouseEvent) Declaration public override bool MouseEvent(MouseEvent me) Parameters Type Name Description MouseEvent me Returns Type Description System.Boolean Overrides Responder.MouseEvent(MouseEvent) | Improve this Doc View Source OnEnter(View) Declaration public override bool OnEnter(View view) Parameters Type Name Description View view Returns Type Description System.Boolean Overrides View.OnEnter(View) | Improve this Doc View Source OnSelectedItemChanged(Int32, Int32) Called whenever the current selected item changes. Invokes the SelectedItemChanged event. Declaration public virtual void OnSelectedItemChanged(int selectedItem, int previousSelectedItem) Parameters Type Name Description System.Int32 selectedItem System.Int32 previousSelectedItem | Improve this Doc View Source PositionCursor() Declaration public override void PositionCursor() Overrides View.PositionCursor() | Improve this Doc View Source ProcessColdKey(KeyEvent) Declaration public override bool ProcessColdKey(KeyEvent kb) Parameters Type Name Description KeyEvent kb Returns Type Description System.Boolean Overrides View.ProcessColdKey(KeyEvent) | Improve this Doc View Source ProcessKey(KeyEvent) Declaration public override bool ProcessKey(KeyEvent kb) Parameters Type Name Description KeyEvent kb Returns Type Description System.Boolean Overrides View.ProcessKey(KeyEvent) | Improve this Doc View Source Redraw(Rect) Declaration public override void Redraw(Rect bounds) Parameters Type Name Description Rect bounds Overrides View.Redraw(Rect) | Improve this Doc View Source Refresh() Allow to invoke the SelectedItemChanged after their creation. Declaration public void Refresh() Events | Improve this Doc View Source SelectedItemChanged Invoked when the selected radio label has changed. Declaration public event Action<SelectedItemChangedArgs> SelectedItemChanged Event Type Type Description System.Action < SelectedItemChangedArgs > Implements System.IDisposable System.ComponentModel.ISupportInitializeNotification System.ComponentModel.ISupportInitialize"
  },
  "api/Terminal.Gui/Terminal.Gui.Rect.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.Rect.html",
    "title": "Struct Rect",
    "keywords": "Struct Rect Stores a set of four integers that represent the location and size of a rectangle Inherited Members System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Terminal.Gui Assembly : Terminal.Gui.dll Syntax public struct Rect Constructors | Improve this Doc View Source Rect(Int32, Int32, Int32, Int32) Rectangle Constructor Declaration public Rect(int x, int y, int width, int height) Parameters Type Name Description System.Int32 x System.Int32 y System.Int32 width System.Int32 height | Improve this Doc View Source Rect(Point, Size) Rectangle Constructor Declaration public Rect(Point location, Size size) Parameters Type Name Description Point location Size size Fields | Improve this Doc View Source Empty Empty Shared Field Declaration public static readonly Rect Empty Field Value Type Description Rect | Improve this Doc View Source X Gets or sets the x-coordinate of the upper-left corner of this Rectangle structure. Declaration public int X Field Value Type Description System.Int32 | Improve this Doc View Source Y Gets or sets the y-coordinate of the upper-left corner of this Rectangle structure. Declaration public int Y Field Value Type Description System.Int32 Properties | Improve this Doc View Source Bottom Bottom Property Declaration public readonly int Bottom { get; } Property Value Type Description System.Int32 | Improve this Doc View Source Height Gets or sets the height of this Rectangle structure. Declaration public int Height { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source IsEmpty IsEmpty Property Declaration public readonly bool IsEmpty { get; } Property Value Type Description System.Boolean | Improve this Doc View Source Left Left Property Declaration public readonly int Left { get; } Property Value Type Description System.Int32 | Improve this Doc View Source Location Location Property Declaration public Point Location { get; set; } Property Value Type Description Point | Improve this Doc View Source Right Right Property Declaration public readonly int Right { get; } Property Value Type Description System.Int32 | Improve this Doc View Source Size Size Property Declaration public Size Size { get; set; } Property Value Type Description Size | Improve this Doc View Source Top Top Property Declaration public readonly int Top { get; } Property Value Type Description System.Int32 | Improve this Doc View Source Width Gets or sets the width of this Rect structure. Declaration public int Width { get; set; } Property Value Type Description System.Int32 Methods | Improve this Doc View Source Contains(Int32, Int32) Contains Method Declaration public bool Contains(int x, int y) Parameters Type Name Description System.Int32 x System.Int32 y Returns Type Description System.Boolean | Improve this Doc View Source Contains(Point) Contains Method Declaration public bool Contains(Point pt) Parameters Type Name Description Point pt Returns Type Description System.Boolean | Improve this Doc View Source Contains(Rect) Contains Method Declaration public bool Contains(Rect rect) Parameters Type Name Description Rect rect Returns Type Description System.Boolean | Improve this Doc View Source Equals(Object) Equals Method Declaration public override bool Equals(object obj) Parameters Type Name Description System.Object obj Returns Type Description System.Boolean Overrides System.ValueType.Equals(System.Object) | Improve this Doc View Source FromLTRB(Int32, Int32, Int32, Int32) FromLTRB Shared Method Declaration public static Rect FromLTRB(int left, int top, int right, int bottom) Parameters Type Name Description System.Int32 left System.Int32 top System.Int32 right System.Int32 bottom Returns Type Description Rect | Improve this Doc View Source GetHashCode() GetHashCode Method Declaration public override int GetHashCode() Returns Type Description System.Int32 Overrides System.ValueType.GetHashCode() | Improve this Doc View Source Inflate(Int32, Int32) Inflate Method Declaration public void Inflate(int width, int height) Parameters Type Name Description System.Int32 width System.Int32 height | Improve this Doc View Source Inflate(Rect, Int32, Int32) Inflate Shared Method Declaration public static Rect Inflate(Rect rect, int x, int y) Parameters Type Name Description Rect rect System.Int32 x System.Int32 y Returns Type Description Rect | Improve this Doc View Source Inflate(Size) Inflate Method Declaration public void Inflate(Size size) Parameters Type Name Description Size size | Improve this Doc View Source Intersect(Rect) Intersect Method Declaration public void Intersect(Rect rect) Parameters Type Name Description Rect rect | Improve this Doc View Source Intersect(Rect, Rect) Intersect Shared Method Declaration public static Rect Intersect(Rect a, Rect b) Parameters Type Name Description Rect a Rect b Returns Type Description Rect | Improve this Doc View Source IntersectsWith(Rect) IntersectsWith Method Declaration public bool IntersectsWith(Rect rect) Parameters Type Name Description Rect rect Returns Type Description System.Boolean | Improve this Doc View Source Offset(Int32, Int32) Offset Method Declaration public void Offset(int x, int y) Parameters Type Name Description System.Int32 x System.Int32 y | Improve this Doc View Source Offset(Point) Offset Method Declaration public void Offset(Point pos) Parameters Type Name Description Point pos | Improve this Doc View Source ToString() ToString Method Declaration public override string ToString() Returns Type Description System.String Overrides System.ValueType.ToString() | Improve this Doc View Source Union(Rect, Rect) Union Shared Method Declaration public static Rect Union(Rect a, Rect b) Parameters Type Name Description Rect a Rect b Returns Type Description Rect Operators | Improve this Doc View Source Equality(Rect, Rect) Equality Operator Declaration public static bool operator ==(Rect left, Rect right) Parameters Type Name Description Rect left Rect right Returns Type Description System.Boolean | Improve this Doc View Source Inequality(Rect, Rect) Inequality Operator Declaration public static bool operator !=(Rect left, Rect right) Parameters Type Name Description Rect left Rect right Returns Type Description System.Boolean"
  },
  "api/Terminal.Gui/Terminal.Gui.RectangleF.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.RectangleF.html",
    "title": "Struct RectangleF",
    "keywords": "Struct RectangleF Stores the location and size of a rectangular region. Implements System.IEquatable < RectangleF > Inherited Members System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Terminal.Gui Assembly : Terminal.Gui.dll Syntax public struct RectangleF : IEquatable<RectangleF> Constructors | Improve this Doc View Source RectangleF(Single, Single, Single, Single) Initializes a new instance of the RectangleF class with the specified location and size. Declaration public RectangleF(float x, float y, float width, float height) Parameters Type Name Description System.Single x System.Single y System.Single width System.Single height | Improve this Doc View Source RectangleF(PointF, SizeF) Initializes a new instance of the RectangleF class with the specified location and size. Declaration public RectangleF(PointF location, SizeF size) Parameters Type Name Description PointF location SizeF size Fields | Improve this Doc View Source Empty Initializes a new instance of the RectangleF class. Declaration public static readonly RectangleF Empty Field Value Type Description RectangleF Properties | Improve this Doc View Source Bottom Gets the y-coordinate of the lower-right corner of the rectangular region defined by this RectangleF . Declaration [Browsable(false)] public readonly float Bottom { get; } Property Value Type Description System.Single | Improve this Doc View Source Height Gets or sets the height of the rectangular region defined by this RectangleF . Declaration public float Height { get; set; } Property Value Type Description System.Single | Improve this Doc View Source IsEmpty Tests whether this RectangleF has a Width or a Height of 0. Declaration [Browsable(false)] public readonly bool IsEmpty { get; } Property Value Type Description System.Boolean | Improve this Doc View Source Left Gets the x-coordinate of the upper-left corner of the rectangular region defined by this RectangleF . Declaration [Browsable(false)] public readonly float Left { get; } Property Value Type Description System.Single | Improve this Doc View Source Location Gets or sets the coordinates of the upper-left corner of the rectangular region represented by this RectangleF . Declaration [Browsable(false)] public PointF Location { get; set; } Property Value Type Description PointF | Improve this Doc View Source Right Gets the x-coordinate of the lower-right corner of the rectangular region defined by this RectangleF . Declaration [Browsable(false)] public readonly float Right { get; } Property Value Type Description System.Single | Improve this Doc View Source Size Gets or sets the size of this RectangleF . Declaration [Browsable(false)] public SizeF Size { get; set; } Property Value Type Description SizeF | Improve this Doc View Source Top Gets the y-coordinate of the upper-left corner of the rectangular region defined by this RectangleF . Declaration [Browsable(false)] public readonly float Top { get; } Property Value Type Description System.Single | Improve this Doc View Source Width Gets or sets the width of the rectangular region defined by this RectangleF . Declaration public float Width { get; set; } Property Value Type Description System.Single | Improve this Doc View Source X Gets or sets the x-coordinate of the upper-left corner of the rectangular region defined by this RectangleF . Declaration public float X { get; set; } Property Value Type Description System.Single | Improve this Doc View Source Y Gets or sets the y-coordinate of the upper-left corner of the rectangular region defined by this RectangleF . Declaration public float Y { get; set; } Property Value Type Description System.Single Methods | Improve this Doc View Source Contains(Single, Single) Determines if the specified point is contained within the rectangular region defined by this Rect . Declaration public bool Contains(float x, float y) Parameters Type Name Description System.Single x System.Single y Returns Type Description System.Boolean | Improve this Doc View Source Contains(PointF) Determines if the specified point is contained within the rectangular region defined by this Rect . Declaration public bool Contains(PointF pt) Parameters Type Name Description PointF pt Returns Type Description System.Boolean | Improve this Doc View Source Contains(RectangleF) Determines if the rectangular region represented by rect is entirely contained within the rectangular region represented by this Rect . Declaration public bool Contains(RectangleF rect) Parameters Type Name Description RectangleF rect Returns Type Description System.Boolean | Improve this Doc View Source Equals(Object) Tests whether obj is a RectangleF with the same location and size of this RectangleF . Declaration public override bool Equals(object obj) Parameters Type Name Description System.Object obj Returns Type Description System.Boolean Overrides System.ValueType.Equals(System.Object) | Improve this Doc View Source Equals(RectangleF) Returns true if two RectangleF objects have equal location and size. Declaration public bool Equals(RectangleF other) Parameters Type Name Description RectangleF other Returns Type Description System.Boolean | Improve this Doc View Source FromLTRB(Single, Single, Single, Single) Creates a new RectangleF with the specified location and size. Declaration public static RectangleF FromLTRB(float left, float top, float right, float bottom) Parameters Type Name Description System.Single left System.Single top System.Single right System.Single bottom Returns Type Description RectangleF | Improve this Doc View Source GetHashCode() Gets the hash code for this RectangleF . Declaration public override int GetHashCode() Returns Type Description System.Int32 Overrides System.ValueType.GetHashCode() | Improve this Doc View Source Inflate(Single, Single) Inflates this Rect by the specified amount. Declaration public void Inflate(float x, float y) Parameters Type Name Description System.Single x System.Single y | Improve this Doc View Source Inflate(RectangleF, Single, Single) Creates a Rect that is inflated by the specified amount. Declaration public static RectangleF Inflate(RectangleF rect, float x, float y) Parameters Type Name Description RectangleF rect System.Single x System.Single y Returns Type Description RectangleF | Improve this Doc View Source Inflate(SizeF) Inflates this Rect by the specified amount. Declaration public void Inflate(SizeF size) Parameters Type Name Description SizeF size | Improve this Doc View Source Intersect(RectangleF) Creates a Rectangle that represents the intersection between this Rectangle and rect. Declaration public void Intersect(RectangleF rect) Parameters Type Name Description RectangleF rect | Improve this Doc View Source Intersect(RectangleF, RectangleF) Creates a rectangle that represents the intersection between a and b. If there is no intersection, an empty rectangle is returned. Declaration public static RectangleF Intersect(RectangleF a, RectangleF b) Parameters Type Name Description RectangleF a RectangleF b Returns Type Description RectangleF | Improve this Doc View Source IntersectsWith(RectangleF) Determines if this rectangle intersects with rect. Declaration public bool IntersectsWith(RectangleF rect) Parameters Type Name Description RectangleF rect Returns Type Description System.Boolean | Improve this Doc View Source Offset(Single, Single) Adjusts the location of this rectangle by the specified amount. Declaration public void Offset(float x, float y) Parameters Type Name Description System.Single x System.Single y | Improve this Doc View Source Offset(PointF) Adjusts the location of this rectangle by the specified amount. Declaration public void Offset(PointF pos) Parameters Type Name Description PointF pos | Improve this Doc View Source ToString() Converts the Location and Size of this RectangleF to a human-readable string. Declaration public override string ToString() Returns Type Description System.String Overrides System.ValueType.ToString() | Improve this Doc View Source Union(RectangleF, RectangleF) Creates a rectangle that represents the union between a and b. Declaration public static RectangleF Union(RectangleF a, RectangleF b) Parameters Type Name Description RectangleF a RectangleF b Returns Type Description RectangleF Operators | Improve this Doc View Source Equality(RectangleF, RectangleF) Tests whether two RectangleF objects have equal location and size. Declaration public static bool operator ==(RectangleF left, RectangleF right) Parameters Type Name Description RectangleF left RectangleF right Returns Type Description System.Boolean | Improve this Doc View Source Implicit(Rect to RectangleF) Converts the specified Rect to a RectangleF . Declaration public static implicit operator RectangleF(Rect r) Parameters Type Name Description Rect r Returns Type Description RectangleF | Improve this Doc View Source Inequality(RectangleF, RectangleF) Tests whether two RectangleF objects differ in location or size. Declaration public static bool operator !=(RectangleF left, RectangleF right) Parameters Type Name Description RectangleF left RectangleF right Returns Type Description System.Boolean Implements System.IEquatable<T>"
  },
  "api/Terminal.Gui/Terminal.Gui.Responder.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.Responder.html",
    "title": "Class Responder",
    "keywords": "Class Responder Responder base class implemented by objects that want to participate on keyboard and mouse input. Inheritance System.Object Responder View Implements System.IDisposable Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Terminal.Gui Assembly : Terminal.Gui.dll Syntax public class Responder : IDisposable Properties | Improve this Doc View Source CanFocus Gets or sets a value indicating whether this Responder can focus. Declaration public virtual bool CanFocus { get; set; } Property Value Type Description System.Boolean true if can focus; otherwise, false . | Improve this Doc View Source Enabled Gets or sets a value indicating whether this Responder can respond to user interaction. Declaration public virtual bool Enabled { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source HasFocus Gets or sets a value indicating whether this Responder has focus. Declaration public virtual bool HasFocus { get; } Property Value Type Description System.Boolean true if has focus; otherwise, false . | Improve this Doc View Source Visible Gets or sets a value indicating whether this Responder and all its child controls are displayed. Declaration public virtual bool Visible { get; set; } Property Value Type Description System.Boolean Methods | Improve this Doc View Source Dispose() Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resource. Declaration public void Dispose() | Improve this Doc View Source Dispose(Boolean) Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources. Declaration protected virtual void Dispose(bool disposing) Parameters Type Name Description System.Boolean disposing | Improve this Doc View Source MouseEvent(MouseEvent) Method invoked when a mouse event is generated Declaration public virtual bool MouseEvent(MouseEvent mouseEvent) Parameters Type Name Description MouseEvent mouseEvent Contains the details about the mouse event. Returns Type Description System.Boolean true , if the event was handled, false otherwise. | Improve this Doc View Source OnCanFocusChanged() Method invoked when the CanFocus property from a view is changed. Declaration public virtual void OnCanFocusChanged() | Improve this Doc View Source OnEnabledChanged() Method invoked when the Enabled property from a view is changed. Declaration public virtual void OnEnabledChanged() | Improve this Doc View Source OnEnter(View) Method invoked when a view gets focus. Declaration public virtual bool OnEnter(View view) Parameters Type Name Description View view The view that is losing focus. Returns Type Description System.Boolean true , if the event was handled, false otherwise. | Improve this Doc View Source OnKeyDown(KeyEvent) Method invoked when a key is pressed. Declaration public virtual bool OnKeyDown(KeyEvent keyEvent) Parameters Type Name Description KeyEvent keyEvent Contains the details about the key that produced the event. Returns Type Description System.Boolean true if the event was handled | Improve this Doc View Source OnKeyUp(KeyEvent) Method invoked when a key is released. Declaration public virtual bool OnKeyUp(KeyEvent keyEvent) Parameters Type Name Description KeyEvent keyEvent Contains the details about the key that produced the event. Returns Type Description System.Boolean true if the event was handled | Improve this Doc View Source OnLeave(View) Method invoked when a view loses focus. Declaration public virtual bool OnLeave(View view) Parameters Type Name Description View view The view that is getting focus. Returns Type Description System.Boolean true , if the event was handled, false otherwise. | Improve this Doc View Source OnMouseEnter(MouseEvent) Method invoked when a mouse event is generated for the first time. Declaration public virtual bool OnMouseEnter(MouseEvent mouseEvent) Parameters Type Name Description MouseEvent mouseEvent Returns Type Description System.Boolean true , if the event was handled, false otherwise. | Improve this Doc View Source OnMouseLeave(MouseEvent) Method invoked when a mouse event is generated for the last time. Declaration public virtual bool OnMouseLeave(MouseEvent mouseEvent) Parameters Type Name Description MouseEvent mouseEvent Returns Type Description System.Boolean true , if the event was handled, false otherwise. | Improve this Doc View Source OnVisibleChanged() Method invoked when the Visible property from a view is changed. Declaration public virtual void OnVisibleChanged() | Improve this Doc View Source ProcessColdKey(KeyEvent) This method can be overwritten by views that want to provide accelerator functionality (Alt-key for example), but without interefering with normal ProcessKey behavior. Declaration public virtual bool ProcessColdKey(KeyEvent keyEvent) Parameters Type Name Description KeyEvent keyEvent Contains the details about the key that produced the event. Returns Type Description System.Boolean | Improve this Doc View Source ProcessHotKey(KeyEvent) This method can be overwritten by view that want to provide accelerator functionality (Alt-key for example). Declaration public virtual bool ProcessHotKey(KeyEvent kb) Parameters Type Name Description KeyEvent kb Returns Type Description System.Boolean | Improve this Doc View Source ProcessKey(KeyEvent) If the view is focused, gives the view a chance to process the keystroke. Declaration public virtual bool ProcessKey(KeyEvent keyEvent) Parameters Type Name Description KeyEvent keyEvent Contains the details about the key that produced the event. Returns Type Description System.Boolean Implements System.IDisposable"
  },
  "api/Terminal.Gui/Terminal.Gui.SaveDialog.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.SaveDialog.html",
    "title": "Class SaveDialog",
    "keywords": "Class SaveDialog The SaveDialog provides an interactive dialog box for users to pick a file to save. Inheritance System.Object Responder View Toplevel Window Dialog FileDialog SaveDialog Implements System.IDisposable System.ComponentModel.ISupportInitializeNotification System.ComponentModel.ISupportInitialize Remarks To use, create an instance of SaveDialog , and pass it to Run(Func<Exception, Boolean>) . This will run the dialog modally, and when this returns, the FileName property will contain the selected file name or null if the user canceled. Inherited Members FileDialog.WillPresent() FileDialog.Prompt FileDialog.NameDirLabel FileDialog.NameFieldLabel FileDialog.Message FileDialog.CanCreateDirectories FileDialog.IsExtensionHidden FileDialog.DirectoryPath FileDialog.AllowedFileTypes FileDialog.AllowsOtherFileTypes FileDialog.FilePath FileDialog.Canceled Dialog.AddButton(Button) Dialog.ButtonAlignment Dialog.ProcessKey(KeyEvent) Window.Title Window.Border Window.Add(View) Window.Remove(View) Window.RemoveAll() Window.Redraw(Rect) Window.OnCanFocusChanged() Window.Text Window.TextAlignment Window.OnTitleChanging(ustring, ustring) Window.TitleChanging Window.OnTitleChanged(ustring, ustring) Window.TitleChanged Toplevel.Running Toplevel.Loaded Toplevel.Ready Toplevel.Unloaded Toplevel.Activate Toplevel.Deactivate Toplevel.ChildClosed Toplevel.AllChildClosed Toplevel.Closing Toplevel.Closed Toplevel.ChildLoaded Toplevel.ChildUnloaded Toplevel.Resized Toplevel.OnLoaded() Toplevel.AlternateForwardKeyChanged Toplevel.OnAlternateForwardKeyChanged(Key) Toplevel.AlternateBackwardKeyChanged Toplevel.OnAlternateBackwardKeyChanged(Key) Toplevel.QuitKeyChanged Toplevel.OnQuitKeyChanged(Key) Toplevel.Create() Toplevel.CanFocus Toplevel.Modal Toplevel.MenuBar Toplevel.StatusBar Toplevel.IsMdiContainer Toplevel.IsMdiChild Toplevel.OnKeyDown(KeyEvent) Toplevel.OnKeyUp(KeyEvent) Toplevel.ProcessColdKey(KeyEvent) Toplevel.PositionToplevel(Toplevel) Toplevel.MouseEvent(MouseEvent) Toplevel.MoveNext() Toplevel.MovePrevious() Toplevel.RequestStop() Toplevel.RequestStop(Toplevel) Toplevel.PositionCursor() Toplevel.GetTopMdiChild(Type, String[]) Toplevel.ShowChild(Toplevel) View.Added View.Removed View.Enter View.Leave View.MouseEnter View.MouseLeave View.MouseClick View.CanFocusChanged View.EnabledChanged View.VisibleChanged View.HotKeyChanged View.HotKey View.HotKeySpecifier View.Shortcut View.ShortcutTag View.ShortcutAction View.Data View.Driver View.Subviews View.TabIndexes View.TabIndex View.TabStop View.Id View.IsCurrentTop View.WantMousePositionReports View.WantContinuousButtonPressed View.Frame View.LayoutStyle View.Bounds View.X View.Y View.Width View.Height View.ForceValidatePosDim View.GetMinWidthHeight(Size) View.SetMinWidthHeight() View.TextFormatter View.SuperView View.UpdateTextFormatterText() View.ProcessResizeView() View.SetNeedsDisplay() View.ClearLayoutNeeded() View.SetNeedsDisplay(Rect) View.SetChildNeedsDisplay() View.Add(View[]) View.BringSubviewToFront(View) View.SendSubviewToBack(View) View.SendSubviewBackwards(View) View.BringSubviewForward(View) View.Clear() View.Clear(Rect) View.ScreenToView(Int32, Int32) View.ClipToBounds() View.SetClip(Rect) View.DrawFrame(Rect, Int32, Boolean) View.DrawHotString(ustring, Attribute, Attribute) View.DrawHotString(ustring, Boolean, ColorScheme) View.Move(Int32, Int32, Boolean) View.HasFocus View.OnAdded(View) View.OnRemoved(View) View.OnEnter(View) View.OnLeave(View) View.Focused View.MostFocused View.ColorScheme View.AddRune(Int32, Int32, Rune) View.ClearNeedsDisplay() View.DrawContent View.OnDrawContent(Rect) View.DrawContentComplete View.OnDrawContentComplete(Rect) View.SetFocus() View.KeyPress View.InvokeKeybindings(KeyEvent) View.AddKeyBinding(Key, Command[]) View.ReplaceKeyBinding(Key, Key) View.ContainsKeyBinding(Key) View.ClearKeybindings() View.ClearKeybinding(Key) View.ClearKeybinding(Command[]) View.AddCommand(Command, Func<Nullable<Boolean>>) View.GetSupportedCommands() View.GetKeyFromCommand(Command[]) View.ProcessHotKey(KeyEvent) View.KeyDown View.KeyUp View.EnsureFocus() View.FocusFirst() View.FocusLast() View.FocusPrev() View.FocusNext() View.LayoutStarted View.LayoutComplete View.Initialized View.LayoutSubviews() View.AutoSize View.PreserveTrailingSpaces View.VerticalTextAlignment View.TextDirection View.IsInitialized View.IsAdded View.Enabled View.Visible View.ToString() View.GetAutoSize() View.GetHotKeySpecifierLength(Boolean) View.GetTextFormatterBoundsSize() View.GetBoundsTextFormatterSize() View.OnMouseEnter(MouseEvent) View.OnMouseLeave(MouseEvent) View.OnMouseEvent(MouseEvent) View.OnMouseClick(View.MouseEventArgs) View.OnEnabledChanged() View.OnVisibleChanged() View.Dispose(Boolean) View.BeginInit() View.EndInit() View.SetWidth(Int32, Int32) View.SetHeight(Int32, Int32) View.GetCurrentWidth(Int32) View.GetCurrentHeight(Int32) View.GetNormalColor() View.GetTopSuperView() Responder.Dispose() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Terminal.Gui Assembly : Terminal.Gui.dll Syntax public class SaveDialog : FileDialog, IDisposable, ISupportInitializeNotification, ISupportInitialize Constructors | Improve this Doc View Source SaveDialog() Initializes a new SaveDialog . Declaration public SaveDialog() | Improve this Doc View Source SaveDialog(ustring, ustring, List<String>) Initializes a new SaveDialog . Declaration public SaveDialog(ustring title, ustring message, List<string> allowedTypes = null) Parameters Type Name Description NStack.ustring title The title. NStack.ustring message The message. System.Collections.Generic.List < System.String > allowedTypes The allowed types. Properties | Improve this Doc View Source FileName Gets the name of the file the user selected for saving, or null if the user canceled the SaveDialog . Declaration public ustring FileName { get; } Property Value Type Description NStack.ustring The name of the file. Implements System.IDisposable System.ComponentModel.ISupportInitializeNotification System.ComponentModel.ISupportInitialize"
  },
  "api/Terminal.Gui/Terminal.Gui.ScrollBarView.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.ScrollBarView.html",
    "title": "Class ScrollBarView",
    "keywords": "Class ScrollBarView ScrollBarViews are views that display a 1-character scrollbar, either horizontal or vertical Inheritance System.Object Responder View ScrollBarView Implements System.IDisposable System.ComponentModel.ISupportInitializeNotification System.ComponentModel.ISupportInitialize Remarks The scrollbar is drawn to be a representation of the Size, assuming that the scroll position is set at Position. If the region to display the scrollbar is larger than three characters, arrow indicators are drawn. Inherited Members View.Added View.Removed View.Enter View.Leave View.MouseEnter View.MouseLeave View.MouseClick View.CanFocusChanged View.EnabledChanged View.VisibleChanged View.HotKeyChanged View.HotKey View.HotKeySpecifier View.Shortcut View.ShortcutTag View.ShortcutAction View.Data View.Driver View.Subviews View.TabIndexes View.TabIndex View.TabStop View.CanFocus View.Id View.IsCurrentTop View.WantMousePositionReports View.WantContinuousButtonPressed View.Frame View.LayoutStyle View.Bounds View.X View.Y View.Width View.Height View.ForceValidatePosDim View.GetMinWidthHeight(Size) View.SetMinWidthHeight() View.TextFormatter View.SuperView View.UpdateTextFormatterText() View.ProcessResizeView() View.SetNeedsDisplay() View.ClearLayoutNeeded() View.SetNeedsDisplay(Rect) View.SetChildNeedsDisplay() View.Add(View) View.Add(View[]) View.RemoveAll() View.Remove(View) View.BringSubviewToFront(View) View.SendSubviewToBack(View) View.SendSubviewBackwards(View) View.BringSubviewForward(View) View.Clear() View.Clear(Rect) View.ScreenToView(Int32, Int32) View.ClipToBounds() View.SetClip(Rect) View.DrawFrame(Rect, Int32, Boolean) View.DrawHotString(ustring, Attribute, Attribute) View.DrawHotString(ustring, Boolean, ColorScheme) View.Move(Int32, Int32, Boolean) View.PositionCursor() View.HasFocus View.OnAdded(View) View.OnRemoved(View) View.OnLeave(View) View.Focused View.MostFocused View.ColorScheme View.AddRune(Int32, Int32, Rune) View.ClearNeedsDisplay() View.DrawContent View.OnDrawContent(Rect) View.DrawContentComplete View.OnDrawContentComplete(Rect) View.SetFocus() View.KeyPress View.ProcessKey(KeyEvent) View.InvokeKeybindings(KeyEvent) View.AddKeyBinding(Key, Command[]) View.ReplaceKeyBinding(Key, Key) View.ContainsKeyBinding(Key) View.ClearKeybindings() View.ClearKeybinding(Key) View.ClearKeybinding(Command[]) View.AddCommand(Command, Func<Nullable<Boolean>>) View.GetSupportedCommands() View.GetKeyFromCommand(Command[]) View.ProcessHotKey(KeyEvent) View.ProcessColdKey(KeyEvent) View.KeyDown View.OnKeyDown(KeyEvent) View.KeyUp View.OnKeyUp(KeyEvent) View.EnsureFocus() View.FocusFirst() View.FocusLast() View.FocusPrev() View.FocusNext() View.LayoutStarted View.LayoutComplete View.Initialized View.LayoutSubviews() View.Text View.AutoSize View.PreserveTrailingSpaces View.TextAlignment View.VerticalTextAlignment View.TextDirection View.IsInitialized View.IsAdded View.Enabled View.Visible View.Border View.ToString() View.GetAutoSize() View.GetHotKeySpecifierLength(Boolean) View.GetTextFormatterBoundsSize() View.GetBoundsTextFormatterSize() View.OnMouseEnter(MouseEvent) View.OnMouseLeave(MouseEvent) View.OnMouseEvent(MouseEvent) View.OnMouseClick(View.MouseEventArgs) View.OnCanFocusChanged() View.OnEnabledChanged() View.OnVisibleChanged() View.Dispose(Boolean) View.BeginInit() View.EndInit() View.SetWidth(Int32, Int32) View.SetHeight(Int32, Int32) View.GetCurrentWidth(Int32) View.GetCurrentHeight(Int32) View.GetNormalColor() View.GetTopSuperView() Responder.Dispose() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Terminal.Gui Assembly : Terminal.Gui.dll Syntax public class ScrollBarView : View, IDisposable, ISupportInitializeNotification, ISupportInitialize Constructors | Improve this Doc View Source ScrollBarView() Initializes a new instance of the ScrollBarView class using Computed layout. Declaration public ScrollBarView() | Improve this Doc View Source ScrollBarView(Int32, Int32, Boolean) Initializes a new instance of the ScrollBarView class using Computed layout. Declaration public ScrollBarView(int size, int position, bool isVertical) Parameters Type Name Description System.Int32 size The size that this scrollbar represents. System.Int32 position The position within this scrollbar. System.Boolean isVertical If set to true this is a vertical scrollbar, otherwise, the scrollbar is horizontal. | Improve this Doc View Source ScrollBarView(Rect) Initializes a new instance of the ScrollBarView class using Absolute layout. Declaration public ScrollBarView(Rect rect) Parameters Type Name Description Rect rect Frame for the scrollbar. | Improve this Doc View Source ScrollBarView(Rect, Int32, Int32, Boolean) Initializes a new instance of the ScrollBarView class using Absolute layout. Declaration public ScrollBarView(Rect rect, int size, int position, bool isVertical) Parameters Type Name Description Rect rect Frame for the scrollbar. System.Int32 size The size that this scrollbar represents. Sets the Size property. System.Int32 position The position within this scrollbar. Sets the Position property. System.Boolean isVertical If set to true this is a vertical scrollbar, otherwise, the scrollbar is horizontal. Sets the IsVertical property. | Improve this Doc View Source ScrollBarView(View, Boolean, Boolean) Initializes a new instance of the ScrollBarView class using Computed layout. Declaration public ScrollBarView(View host, bool isVertical, bool showBothScrollIndicator = true) Parameters Type Name Description View host The view that will host this scrollbar. System.Boolean isVertical If set to true this is a vertical scrollbar, otherwise, the scrollbar is horizontal. System.Boolean showBothScrollIndicator If set to true (default) will have the other scrollbar, otherwise will have only one. Properties | Improve this Doc View Source AutoHideScrollBars If true the vertical/horizontal scroll bars won't be showed if it's not needed. Declaration public bool AutoHideScrollBars { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source Host Get or sets the view that host this View Declaration public View Host { get; } Property Value Type Description View | Improve this Doc View Source IsVertical If set to true this is a vertical scrollbar, otherwise, the scrollbar is horizontal. Declaration public bool IsVertical { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source KeepContentAlwaysInViewport Get or sets if the view-port is kept always visible in the area of this ScrollBarView Declaration public bool KeepContentAlwaysInViewport { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source OtherScrollBarView Represent a vertical or horizontal ScrollBarView other than this. Declaration public ScrollBarView OtherScrollBarView { get; set; } Property Value Type Description ScrollBarView | Improve this Doc View Source Position The position, relative to Size , to set the scrollbar at. Declaration public int Position { get; set; } Property Value Type Description System.Int32 The position. | Improve this Doc View Source ShowScrollIndicator Gets or sets the visibility for the vertical or horizontal scroll indicator. Declaration public bool ShowScrollIndicator { get; set; } Property Value Type Description System.Boolean true if show vertical or horizontal scroll indicator; otherwise, false . | Improve this Doc View Source Size The size of content the scrollbar represents. Declaration public int Size { get; set; } Property Value Type Description System.Int32 The size. Methods | Improve this Doc View Source MouseEvent(MouseEvent) Declaration public override bool MouseEvent(MouseEvent me) Parameters Type Name Description MouseEvent me Returns Type Description System.Boolean Overrides Responder.MouseEvent(MouseEvent) | Improve this Doc View Source OnChangedPosition() Virtual method to invoke the ChangedPosition action event. Declaration public virtual void OnChangedPosition() | Improve this Doc View Source OnEnter(View) Declaration public override bool OnEnter(View view) Parameters Type Name Description View view Returns Type Description System.Boolean Overrides View.OnEnter(View) | Improve this Doc View Source Redraw(Rect) Declaration public override void Redraw(Rect region) Parameters Type Name Description Rect region Overrides View.Redraw(Rect) | Improve this Doc View Source Refresh() Only used for a hosted view that will update and redraw the scrollbars. Declaration public virtual void Refresh() Events | Improve this Doc View Source ChangedPosition This event is raised when the position on the scrollbar has changed. Declaration public event Action ChangedPosition Event Type Type Description System.Action Implements System.IDisposable System.ComponentModel.ISupportInitializeNotification System.ComponentModel.ISupportInitialize"
  },
  "api/Terminal.Gui/Terminal.Gui.ScrollView.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.ScrollView.html",
    "title": "Class ScrollView",
    "keywords": "Class ScrollView Scrollviews are views that present a window into a virtual space where subviews are added. Similar to the iOS UIScrollView. Inheritance System.Object Responder View ScrollView Implements System.IDisposable System.ComponentModel.ISupportInitializeNotification System.ComponentModel.ISupportInitialize Remarks The subviews that are added to this ScrollView are offset by the ContentOffset property. The view itself is a window into the space represented by the ContentSize . Use the Inherited Members View.Added View.Removed View.Enter View.Leave View.MouseEnter View.MouseLeave View.MouseClick View.CanFocusChanged View.EnabledChanged View.VisibleChanged View.HotKeyChanged View.HotKey View.HotKeySpecifier View.Shortcut View.ShortcutTag View.ShortcutAction View.Data View.Driver View.Subviews View.TabIndexes View.TabIndex View.TabStop View.CanFocus View.Id View.IsCurrentTop View.WantMousePositionReports View.WantContinuousButtonPressed View.Frame View.LayoutStyle View.Bounds View.X View.Y View.Width View.Height View.ForceValidatePosDim View.GetMinWidthHeight(Size) View.SetMinWidthHeight() View.TextFormatter View.SuperView View.UpdateTextFormatterText() View.ProcessResizeView() View.SetNeedsDisplay() View.ClearLayoutNeeded() View.SetNeedsDisplay(Rect) View.SetChildNeedsDisplay() View.Add(View[]) View.Remove(View) View.BringSubviewToFront(View) View.SendSubviewToBack(View) View.SendSubviewBackwards(View) View.BringSubviewForward(View) View.Clear() View.Clear(Rect) View.ScreenToView(Int32, Int32) View.ClipToBounds() View.SetClip(Rect) View.DrawFrame(Rect, Int32, Boolean) View.DrawHotString(ustring, Attribute, Attribute) View.DrawHotString(ustring, Boolean, ColorScheme) View.Move(Int32, Int32, Boolean) View.HasFocus View.OnAdded(View) View.OnRemoved(View) View.OnLeave(View) View.Focused View.MostFocused View.ColorScheme View.AddRune(Int32, Int32, Rune) View.ClearNeedsDisplay() View.DrawContent View.OnDrawContent(Rect) View.DrawContentComplete View.OnDrawContentComplete(Rect) View.SetFocus() View.KeyPress View.InvokeKeybindings(KeyEvent) View.AddKeyBinding(Key, Command[]) View.ReplaceKeyBinding(Key, Key) View.ContainsKeyBinding(Key) View.ClearKeybindings() View.ClearKeybinding(Key) View.ClearKeybinding(Command[]) View.AddCommand(Command, Func<Nullable<Boolean>>) View.GetSupportedCommands() View.GetKeyFromCommand(Command[]) View.ProcessHotKey(KeyEvent) View.ProcessColdKey(KeyEvent) View.KeyDown View.OnKeyDown(KeyEvent) View.KeyUp View.OnKeyUp(KeyEvent) View.EnsureFocus() View.FocusFirst() View.FocusLast() View.FocusPrev() View.FocusNext() View.LayoutStarted View.LayoutComplete View.Initialized View.LayoutSubviews() View.Text View.AutoSize View.PreserveTrailingSpaces View.TextAlignment View.VerticalTextAlignment View.TextDirection View.IsInitialized View.IsAdded View.Enabled View.Visible View.Border View.ToString() View.GetAutoSize() View.GetHotKeySpecifierLength(Boolean) View.GetTextFormatterBoundsSize() View.GetBoundsTextFormatterSize() View.OnMouseEnter(MouseEvent) View.OnMouseLeave(MouseEvent) View.OnMouseEvent(MouseEvent) View.OnMouseClick(View.MouseEventArgs) View.OnCanFocusChanged() View.OnEnabledChanged() View.OnVisibleChanged() View.BeginInit() View.EndInit() View.SetWidth(Int32, Int32) View.SetHeight(Int32, Int32) View.GetCurrentWidth(Int32) View.GetCurrentHeight(Int32) View.GetNormalColor() View.GetTopSuperView() Responder.Dispose() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Terminal.Gui Assembly : Terminal.Gui.dll Syntax public class ScrollView : View, IDisposable, ISupportInitializeNotification, ISupportInitialize Constructors | Improve this Doc View Source ScrollView() Initializes a new instance of the ScrollView class using Computed positioning. Declaration public ScrollView() | Improve this Doc View Source ScrollView(Rect) Initializes a new instance of the ScrollView class using Absolute positioning. Declaration public ScrollView(Rect frame) Parameters Type Name Description Rect frame Properties | Improve this Doc View Source AutoHideScrollBars If true the vertical/horizontal scroll bars won't be showed if it's not needed. Declaration public bool AutoHideScrollBars { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source ContentOffset Represents the top left corner coordinate that is displayed by the scrollview Declaration public Point ContentOffset { get; set; } Property Value Type Description Point The content offset. | Improve this Doc View Source ContentSize Represents the contents of the data shown inside the scrollview Declaration public Size ContentSize { get; set; } Property Value Type Description Size The size of the content. | Improve this Doc View Source KeepContentAlwaysInViewport Get or sets if the view-port is kept always visible in the area of this ScrollView Declaration public bool KeepContentAlwaysInViewport { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source ShowHorizontalScrollIndicator Gets or sets the visibility for the horizontal scroll indicator. Declaration public bool ShowHorizontalScrollIndicator { get; set; } Property Value Type Description System.Boolean true if show horizontal scroll indicator; otherwise, false . | Improve this Doc View Source ShowVerticalScrollIndicator Gets or sets the visibility for the vertical scroll indicator. Declaration public bool ShowVerticalScrollIndicator { get; set; } Property Value Type Description System.Boolean true if show vertical scroll indicator; otherwise, false . Methods | Improve this Doc View Source Add(View) Adds the view to the scrollview. Declaration public override void Add(View view) Parameters Type Name Description View view The view to add to the scrollview. Overrides View.Add(View) | Improve this Doc View Source Dispose(Boolean) Declaration protected override void Dispose(bool disposing) Parameters Type Name Description System.Boolean disposing Overrides View.Dispose(Boolean) | Improve this Doc View Source MouseEvent(MouseEvent) Declaration public override bool MouseEvent(MouseEvent me) Parameters Type Name Description MouseEvent me Returns Type Description System.Boolean Overrides Responder.MouseEvent(MouseEvent) | Improve this Doc View Source OnEnter(View) Declaration public override bool OnEnter(View view) Parameters Type Name Description View view Returns Type Description System.Boolean Overrides View.OnEnter(View) | Improve this Doc View Source PositionCursor() Declaration public override void PositionCursor() Overrides View.PositionCursor() | Improve this Doc View Source ProcessKey(KeyEvent) Declaration public override bool ProcessKey(KeyEvent kb) Parameters Type Name Description KeyEvent kb Returns Type Description System.Boolean Overrides View.ProcessKey(KeyEvent) | Improve this Doc View Source Redraw(Rect) Declaration public override void Redraw(Rect region) Parameters Type Name Description Rect region Overrides View.Redraw(Rect) | Improve this Doc View Source RemoveAll() Removes all widgets from this container. Declaration public override void RemoveAll() Overrides View.RemoveAll() | Improve this Doc View Source ScrollDown(Int32) Scrolls the view down. Declaration public bool ScrollDown(int lines) Parameters Type Name Description System.Int32 lines Number of lines to scroll. Returns Type Description System.Boolean true , if left was scrolled, false otherwise. | Improve this Doc View Source ScrollLeft(Int32) Scrolls the view to the left Declaration public bool ScrollLeft(int cols) Parameters Type Name Description System.Int32 cols Number of columns to scroll by. Returns Type Description System.Boolean true , if left was scrolled, false otherwise. | Improve this Doc View Source ScrollRight(Int32) Scrolls the view to the right. Declaration public bool ScrollRight(int cols) Parameters Type Name Description System.Int32 cols Number of columns to scroll by. Returns Type Description System.Boolean true , if right was scrolled, false otherwise. | Improve this Doc View Source ScrollUp(Int32) Scrolls the view up. Declaration public bool ScrollUp(int lines) Parameters Type Name Description System.Int32 lines Number of lines to scroll. Returns Type Description System.Boolean true , if left was scrolled, false otherwise. Implements System.IDisposable System.ComponentModel.ISupportInitializeNotification System.ComponentModel.ISupportInitialize"
  },
  "api/Terminal.Gui/Terminal.Gui.SelectedItemChangedArgs.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.SelectedItemChangedArgs.html",
    "title": "Class SelectedItemChangedArgs",
    "keywords": "Class SelectedItemChangedArgs Event arguments for the SelectedItemChagned event. Inheritance System.Object System.EventArgs SelectedItemChangedArgs Inherited Members System.EventArgs.Empty System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Terminal.Gui Assembly : Terminal.Gui.dll Syntax public class SelectedItemChangedArgs : EventArgs Constructors | Improve this Doc View Source SelectedItemChangedArgs(Int32, Int32) Initializes a new SelectedItemChangedArgs class. Declaration public SelectedItemChangedArgs(int selectedItem, int previousSelectedItem) Parameters Type Name Description System.Int32 selectedItem System.Int32 previousSelectedItem Properties | Improve this Doc View Source PreviousSelectedItem Gets the index of the item that was previously selected. -1 if there was no previous selection. Declaration public int PreviousSelectedItem { get; } Property Value Type Description System.Int32 | Improve this Doc View Source SelectedItem Gets the index of the item that is now selected. -1 if there is no selection. Declaration public int SelectedItem { get; } Property Value Type Description System.Int32"
  },
  "api/Terminal.Gui/Terminal.Gui.ShortcutHelper.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.ShortcutHelper.html",
    "title": "Class ShortcutHelper",
    "keywords": "Class ShortcutHelper Represents a helper to manipulate shortcut keys used on views. Inheritance System.Object ShortcutHelper Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Terminal.Gui Assembly : Terminal.Gui.dll Syntax public class ShortcutHelper Properties | Improve this Doc View Source Shortcut This is the global setting that can be used as a global shortcut to invoke the action on the view. Declaration public virtual Key Shortcut { get; set; } Property Value Type Description Key | Improve this Doc View Source ShortcutAction The action to run if the Shortcut is defined. Declaration public virtual Action ShortcutAction { get; set; } Property Value Type Description System.Action | Improve this Doc View Source ShortcutTag The keystroke combination used in the Shortcut as string. Declaration public virtual ustring ShortcutTag { get; } Property Value Type Description NStack.ustring Methods | Improve this Doc View Source CheckKeysFlagRange(Key, Key, Key) Lookup for a Key on range of keys. Declaration public static bool CheckKeysFlagRange(Key key, Key first, Key last) Parameters Type Name Description Key key The source key. Key first First key in range. Key last Last key in range. Returns Type Description System.Boolean | Improve this Doc View Source FindAndOpenByShortcut(KeyEvent, View) Allows a view to run a ShortcutAction if defined. Declaration public static bool FindAndOpenByShortcut(KeyEvent kb, View view = null) Parameters Type Name Description KeyEvent kb The KeyEvent View view The View Returns Type Description System.Boolean true if defined false otherwise. | Improve this Doc View Source GetKeyToString(Key, out Key) Return key as string. Declaration public static ustring GetKeyToString(Key key, out Key knm) Parameters Type Name Description Key key The key to extract. Key knm Correspond to the non modifier key. Returns Type Description NStack.ustring | Improve this Doc View Source GetModifiersKey(KeyEvent) Gets the key with all the keys modifiers, especially the shift key that sometimes have to be injected later. Declaration public static Key GetModifiersKey(KeyEvent kb) Parameters Type Name Description KeyEvent kb The KeyEvent to check. Returns Type Description Key The Key with all the keys modifiers. | Improve this Doc View Source GetShortcutFromTag(ustring, ustring) Allows to retrieve a Key from a ShortcutTag Declaration public static Key GetShortcutFromTag(ustring tag, ustring delimiter = null) Parameters Type Name Description NStack.ustring tag The key as string. NStack.ustring delimiter The delimiter string. Returns Type Description Key | Improve this Doc View Source GetShortcutTag(Key, ustring) Get the Shortcut key as string. Declaration public static ustring GetShortcutTag(Key shortcut, ustring delimiter = null) Parameters Type Name Description Key shortcut The shortcut key. NStack.ustring delimiter The delimiter string. Returns Type Description NStack.ustring | Improve this Doc View Source PostShortcutValidation(Key) Used at key up validation. Declaration public static bool PostShortcutValidation(Key key) Parameters Type Name Description Key key The key to validate. Returns Type Description System.Boolean true if is valid. false otherwise. | Improve this Doc View Source PreShortcutValidation(Key) Used at key down or key press validation. Declaration public static bool PreShortcutValidation(Key key) Parameters Type Name Description Key key The key to validate. Returns Type Description System.Boolean true if is valid. false otherwise."
  },
  "api/Terminal.Gui/Terminal.Gui.Size.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.Size.html",
    "title": "Struct Size",
    "keywords": "Struct Size Stores an ordered pair of integers, which specify a Height and Width. Inherited Members System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Terminal.Gui Assembly : Terminal.Gui.dll Syntax public struct Size Constructors | Improve this Doc View Source Size(Int32, Int32) Size Constructor Declaration public Size(int width, int height) Parameters Type Name Description System.Int32 width System.Int32 height | Improve this Doc View Source Size(Point) Size Constructor Declaration public Size(Point pt) Parameters Type Name Description Point pt Fields | Improve this Doc View Source Empty Gets a Size structure that has a Height and Width value of 0. Declaration public static readonly Size Empty Field Value Type Description Size Properties | Improve this Doc View Source Height Height Property Declaration public int Height { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source IsEmpty IsEmpty Property Declaration public readonly bool IsEmpty { get; } Property Value Type Description System.Boolean | Improve this Doc View Source Width Width Property Declaration public int Width { get; set; } Property Value Type Description System.Int32 Methods | Improve this Doc View Source Add(Size, Size) Adds the width and height of one Size structure to the width and height of another Size structure. Declaration public static Size Add(Size sz1, Size sz2) Parameters Type Name Description Size sz1 The first Size structure to add. Size sz2 The second Size structure to add. Returns Type Description Size The add. | Improve this Doc View Source Equals(Object) Equals Method Declaration public override bool Equals(object obj) Parameters Type Name Description System.Object obj Returns Type Description System.Boolean Overrides System.ValueType.Equals(System.Object) | Improve this Doc View Source GetHashCode() GetHashCode Method Declaration public override int GetHashCode() Returns Type Description System.Int32 Overrides System.ValueType.GetHashCode() | Improve this Doc View Source Subtract(Size, Size) Subtracts the width and height of one Size structure to the width and height of another Size structure. Declaration public static Size Subtract(Size sz1, Size sz2) Parameters Type Name Description Size sz1 The first Size structure to subtract. Size sz2 The second Size structure to subtract. Returns Type Description Size The subtract. | Improve this Doc View Source ToString() ToString Method Declaration public override string ToString() Returns Type Description System.String Overrides System.ValueType.ToString() Operators | Improve this Doc View Source Addition(Size, Size) Addition Operator Declaration public static Size operator +(Size sz1, Size sz2) Parameters Type Name Description Size sz1 Size sz2 Returns Type Description Size | Improve this Doc View Source Equality(Size, Size) Equality Operator Declaration public static bool operator ==(Size sz1, Size sz2) Parameters Type Name Description Size sz1 Size sz2 Returns Type Description System.Boolean | Improve this Doc View Source Explicit(Size to Point) Size to Point Conversion Declaration public static explicit operator Point(Size size) Parameters Type Name Description Size size Returns Type Description Point | Improve this Doc View Source Inequality(Size, Size) Inequality Operator Declaration public static bool operator !=(Size sz1, Size sz2) Parameters Type Name Description Size sz1 Size sz2 Returns Type Description System.Boolean | Improve this Doc View Source Subtraction(Size, Size) Subtraction Operator Declaration public static Size operator -(Size sz1, Size sz2) Parameters Type Name Description Size sz1 Size sz2 Returns Type Description Size"
  },
  "api/Terminal.Gui/Terminal.Gui.SizeF.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.SizeF.html",
    "title": "Struct SizeF",
    "keywords": "Struct SizeF Represents the size of a rectangular region with an ordered pair of width and height. Implements System.IEquatable < SizeF > Inherited Members System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Terminal.Gui Assembly : Terminal.Gui.dll Syntax public struct SizeF : IEquatable<SizeF> Constructors | Improve this Doc View Source SizeF(Single, Single) Initializes a new instance of the SizeF class from the specified dimensions. Declaration public SizeF(float width, float height) Parameters Type Name Description System.Single width System.Single height | Improve this Doc View Source SizeF(PointF) Initializes a new instance of the SizeF class from the specified PointF . Declaration public SizeF(PointF pt) Parameters Type Name Description PointF pt | Improve this Doc View Source SizeF(SizeF) Initializes a new instance of the SizeF class from the specified existing SizeF . Declaration public SizeF(SizeF size) Parameters Type Name Description SizeF size Fields | Improve this Doc View Source Empty Initializes a new instance of the SizeF class. Declaration public static readonly SizeF Empty Field Value Type Description SizeF Properties | Improve this Doc View Source Height Represents the vertical component of this SizeF . Declaration public float Height { get; set; } Property Value Type Description System.Single | Improve this Doc View Source IsEmpty Tests whether this SizeF has zero width and height. Declaration [Browsable(false)] public readonly bool IsEmpty { get; } Property Value Type Description System.Boolean | Improve this Doc View Source Width Represents the horizontal component of this SizeF . Declaration public float Width { get; set; } Property Value Type Description System.Single Methods | Improve this Doc View Source Add(SizeF, SizeF) Performs vector addition of two SizeF objects. Declaration public static SizeF Add(SizeF sz1, SizeF sz2) Parameters Type Name Description SizeF sz1 SizeF sz2 Returns Type Description SizeF | Improve this Doc View Source Equals(Object) Tests to see whether the specified object is a SizeF with the same dimensions as this SizeF . Declaration public override bool Equals(object obj) Parameters Type Name Description System.Object obj Returns Type Description System.Boolean Overrides System.ValueType.Equals(System.Object) | Improve this Doc View Source Equals(SizeF) Tests whether two SizeF objects are identical. Declaration public bool Equals(SizeF other) Parameters Type Name Description SizeF other Returns Type Description System.Boolean | Improve this Doc View Source GetHashCode() Generates a hashcode from the width and height Declaration public override int GetHashCode() Returns Type Description System.Int32 Overrides System.ValueType.GetHashCode() | Improve this Doc View Source Subtract(SizeF, SizeF) Contracts a SizeF by another SizeF . Declaration public static SizeF Subtract(SizeF sz1, SizeF sz2) Parameters Type Name Description SizeF sz1 SizeF sz2 Returns Type Description SizeF | Improve this Doc View Source ToString() Creates a human-readable string that represents this SizeF . Declaration public override string ToString() Returns Type Description System.String Overrides System.ValueType.ToString() Operators | Improve this Doc View Source Addition(SizeF, SizeF) Performs vector addition of two SizeF objects. Declaration public static SizeF operator +(SizeF sz1, SizeF sz2) Parameters Type Name Description SizeF sz1 SizeF sz2 Returns Type Description SizeF | Improve this Doc View Source Division(SizeF, Single) Divides SizeF by a System.Single producing SizeF . Declaration public static SizeF operator /(SizeF left, float right) Parameters Type Name Description SizeF left Dividend of type SizeF . System.Single right Divisor of type System.Int32 . Returns Type Description SizeF Result of type SizeF . | Improve this Doc View Source Equality(SizeF, SizeF) Tests whether two SizeF objects are identical. Declaration public static bool operator ==(SizeF sz1, SizeF sz2) Parameters Type Name Description SizeF sz1 SizeF sz2 Returns Type Description System.Boolean | Improve this Doc View Source Explicit(SizeF to PointF) Converts the specified SizeF to a PointF . Declaration public static explicit operator PointF(SizeF size) Parameters Type Name Description SizeF size Returns Type Description PointF | Improve this Doc View Source Inequality(SizeF, SizeF) Tests whether two SizeF objects are different. Declaration public static bool operator !=(SizeF sz1, SizeF sz2) Parameters Type Name Description SizeF sz1 SizeF sz2 Returns Type Description System.Boolean | Improve this Doc View Source Multiply(Single, SizeF) Multiplies SizeF by a System.Single producing SizeF . Declaration public static SizeF operator *(float left, SizeF right) Parameters Type Name Description System.Single left Multiplier of type System.Single . SizeF right Multiplicand of type SizeF . Returns Type Description SizeF Product of type SizeF . | Improve this Doc View Source Multiply(SizeF, Single) Multiplies SizeF by a System.Single producing SizeF . Declaration public static SizeF operator *(SizeF left, float right) Parameters Type Name Description SizeF left Multiplicand of type SizeF . System.Single right Multiplier of type System.Single . Returns Type Description SizeF Product of type SizeF . | Improve this Doc View Source Subtraction(SizeF, SizeF) Contracts a SizeF by another SizeF Declaration public static SizeF operator -(SizeF sz1, SizeF sz2) Parameters Type Name Description SizeF sz1 SizeF sz2 Returns Type Description SizeF Implements System.IEquatable<T>"
  },
  "api/Terminal.Gui/Terminal.Gui.StackExtensions.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.StackExtensions.html",
    "title": "Class StackExtensions",
    "keywords": "Class StackExtensions Extension of System.Collections.Generic.Stack<T> helper to work with specific System.Collections.Generic.IEqualityComparer<T> Inheritance System.Object StackExtensions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Terminal.Gui Assembly : Terminal.Gui.dll Syntax public static class StackExtensions Methods | Improve this Doc View Source Contains<T>(Stack<T>, T, IEqualityComparer<T>) Check if the stack object contains the value to find. Declaration public static bool Contains<T>(this Stack<T> stack, T valueToFind, IEqualityComparer<T> comparer = null) Parameters Type Name Description System.Collections.Generic.Stack <T> stack The stack object. T valueToFind Value to find. System.Collections.Generic.IEqualityComparer <T> comparer The comparison object. Returns Type Description System.Boolean true If the value was found. false otherwise. Type Parameters Name Description T The stack object type. | Improve this Doc View Source FindDuplicates<T>(Stack<T>, IEqualityComparer<T>) Find all duplicates stack objects values. Declaration public static Stack<T> FindDuplicates<T>(this Stack<T> stack, IEqualityComparer<T> comparer = null) Parameters Type Name Description System.Collections.Generic.Stack <T> stack The stack object. System.Collections.Generic.IEqualityComparer <T> comparer The comparison object. Returns Type Description System.Collections.Generic.Stack <T> The duplicates stack object. Type Parameters Name Description T The stack object type. | Improve this Doc View Source MoveNext<T>(Stack<T>) Move the first stack object value to the end. Declaration public static void MoveNext<T>(this Stack<T> stack) Parameters Type Name Description System.Collections.Generic.Stack <T> stack The stack object. Type Parameters Name Description T The stack object type. | Improve this Doc View Source MovePrevious<T>(Stack<T>) Move the last stack object value to the top. Declaration public static void MovePrevious<T>(this Stack<T> stack) Parameters Type Name Description System.Collections.Generic.Stack <T> stack The stack object. Type Parameters Name Description T The stack object type. | Improve this Doc View Source MoveTo<T>(Stack<T>, T, Int32, IEqualityComparer<T>) Move the stack object value to the index. Declaration public static void MoveTo<T>(this Stack<T> stack, T valueToMove, int index = 0, IEqualityComparer<T> comparer = null) Parameters Type Name Description System.Collections.Generic.Stack <T> stack The stack object. T valueToMove Value to move. System.Int32 index The index where to move. System.Collections.Generic.IEqualityComparer <T> comparer The comparison object. Type Parameters Name Description T The stack object type. | Improve this Doc View Source Replace<T>(Stack<T>, T, T, IEqualityComparer<T>) Replaces an stack object values that match with the value to replace. Declaration public static void Replace<T>(this Stack<T> stack, T valueToReplace, T valueToReplaceWith, IEqualityComparer<T> comparer = null) Parameters Type Name Description System.Collections.Generic.Stack <T> stack The stack object. T valueToReplace Value to replace. T valueToReplaceWith Value to replace with to what matches the value to replace. System.Collections.Generic.IEqualityComparer <T> comparer The comparison object. Type Parameters Name Description T The stack object type. | Improve this Doc View Source Swap<T>(Stack<T>, T, T, IEqualityComparer<T>) Swap two stack objects values that matches with the both values. Declaration public static void Swap<T>(this Stack<T> stack, T valueToSwapFrom, T valueToSwapTo, IEqualityComparer<T> comparer = null) Parameters Type Name Description System.Collections.Generic.Stack <T> stack The stack object. T valueToSwapFrom Value to swap from. T valueToSwapTo Value to swap to. System.Collections.Generic.IEqualityComparer <T> comparer The comparison object. Type Parameters Name Description T The stack object type."
  },
  "api/Terminal.Gui/Terminal.Gui.StatusBar.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.StatusBar.html",
    "title": "Class StatusBar",
    "keywords": "Class StatusBar A status bar is a View that snaps to the bottom of a Toplevel displaying set of StatusItem s. The StatusBar should be context sensitive. This means, if the main menu and an open text editor are visible, the items probably shown will be ~F1~ Help ~F2~ Save ~F3~ Load. While a dialog to ask a file to load is executed, the remaining commands will probably be ~F1~ Help. So for each context must be a new instance of a statusbar. Inheritance System.Object Responder View StatusBar Implements System.IDisposable System.ComponentModel.ISupportInitializeNotification System.ComponentModel.ISupportInitialize Inherited Members View.Added View.Removed View.Enter View.Leave View.MouseEnter View.MouseLeave View.MouseClick View.CanFocusChanged View.EnabledChanged View.VisibleChanged View.HotKeyChanged View.HotKey View.HotKeySpecifier View.Shortcut View.ShortcutTag View.ShortcutAction View.Data View.Driver View.Subviews View.TabIndexes View.TabIndex View.TabStop View.CanFocus View.Id View.IsCurrentTop View.WantMousePositionReports View.WantContinuousButtonPressed View.Frame View.LayoutStyle View.Bounds View.X View.Y View.Width View.Height View.ForceValidatePosDim View.GetMinWidthHeight(Size) View.SetMinWidthHeight() View.TextFormatter View.SuperView View.UpdateTextFormatterText() View.ProcessResizeView() View.SetNeedsDisplay() View.ClearLayoutNeeded() View.SetNeedsDisplay(Rect) View.SetChildNeedsDisplay() View.Add(View) View.Add(View[]) View.RemoveAll() View.Remove(View) View.BringSubviewToFront(View) View.SendSubviewToBack(View) View.SendSubviewBackwards(View) View.BringSubviewForward(View) View.Clear() View.Clear(Rect) View.ScreenToView(Int32, Int32) View.ClipToBounds() View.SetClip(Rect) View.DrawFrame(Rect, Int32, Boolean) View.DrawHotString(ustring, Attribute, Attribute) View.DrawHotString(ustring, Boolean, ColorScheme) View.Move(Int32, Int32, Boolean) View.PositionCursor() View.HasFocus View.OnAdded(View) View.OnRemoved(View) View.OnLeave(View) View.Focused View.MostFocused View.ColorScheme View.AddRune(Int32, Int32, Rune) View.ClearNeedsDisplay() View.DrawContent View.OnDrawContent(Rect) View.DrawContentComplete View.OnDrawContentComplete(Rect) View.SetFocus() View.KeyPress View.ProcessKey(KeyEvent) View.InvokeKeybindings(KeyEvent) View.AddKeyBinding(Key, Command[]) View.ReplaceKeyBinding(Key, Key) View.ContainsKeyBinding(Key) View.ClearKeybindings() View.ClearKeybinding(Key) View.ClearKeybinding(Command[]) View.AddCommand(Command, Func<Nullable<Boolean>>) View.GetSupportedCommands() View.GetKeyFromCommand(Command[]) View.ProcessColdKey(KeyEvent) View.KeyDown View.OnKeyDown(KeyEvent) View.KeyUp View.OnKeyUp(KeyEvent) View.EnsureFocus() View.FocusFirst() View.FocusLast() View.FocusPrev() View.FocusNext() View.LayoutStarted View.LayoutComplete View.Initialized View.LayoutSubviews() View.Text View.AutoSize View.PreserveTrailingSpaces View.TextAlignment View.VerticalTextAlignment View.TextDirection View.IsInitialized View.IsAdded View.Enabled View.Visible View.Border View.ToString() View.GetAutoSize() View.GetHotKeySpecifierLength(Boolean) View.GetTextFormatterBoundsSize() View.GetBoundsTextFormatterSize() View.OnMouseEnter(MouseEvent) View.OnMouseLeave(MouseEvent) View.OnMouseEvent(MouseEvent) View.OnMouseClick(View.MouseEventArgs) View.OnCanFocusChanged() View.OnEnabledChanged() View.OnVisibleChanged() View.BeginInit() View.EndInit() View.SetWidth(Int32, Int32) View.SetHeight(Int32, Int32) View.GetCurrentWidth(Int32) View.GetCurrentHeight(Int32) View.GetNormalColor() View.GetTopSuperView() Responder.Dispose() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Terminal.Gui Assembly : Terminal.Gui.dll Syntax public class StatusBar : View, IDisposable, ISupportInitializeNotification, ISupportInitialize Constructors | Improve this Doc View Source StatusBar() Initializes a new instance of the StatusBar class. Declaration public StatusBar() | Improve this Doc View Source StatusBar(StatusItem[]) Initializes a new instance of the StatusBar class with the specified set of StatusItem s. The StatusBar will be drawn on the lowest line of the terminal or SuperView (if not null). Declaration public StatusBar(StatusItem[] items) Parameters Type Name Description StatusItem [] items A list of statusbar items. Properties | Improve this Doc View Source Items The items that compose the StatusBar Declaration public StatusItem[] Items { get; set; } Property Value Type Description StatusItem [] | Improve this Doc View Source ShortcutDelimiter Used for change the shortcut delimiter separator. Declaration public static ustring ShortcutDelimiter { get; set; } Property Value Type Description NStack.ustring Methods | Improve this Doc View Source AddItemAt(Int32, StatusItem) Inserts a StatusItem in the specified index of Items . Declaration public void AddItemAt(int index, StatusItem item) Parameters Type Name Description System.Int32 index The zero-based index at which item should be inserted. StatusItem item The item to insert. | Improve this Doc View Source Dispose(Boolean) Declaration protected override void Dispose(bool disposing) Parameters Type Name Description System.Boolean disposing Overrides View.Dispose(Boolean) | Improve this Doc View Source MouseEvent(MouseEvent) Declaration public override bool MouseEvent(MouseEvent me) Parameters Type Name Description MouseEvent me Returns Type Description System.Boolean Overrides Responder.MouseEvent(MouseEvent) | Improve this Doc View Source OnEnter(View) Declaration public override bool OnEnter(View view) Parameters Type Name Description View view Returns Type Description System.Boolean Overrides View.OnEnter(View) | Improve this Doc View Source ProcessHotKey(KeyEvent) Declaration public override bool ProcessHotKey(KeyEvent kb) Parameters Type Name Description KeyEvent kb Returns Type Description System.Boolean Overrides View.ProcessHotKey(KeyEvent) | Improve this Doc View Source Redraw(Rect) Declaration public override void Redraw(Rect bounds) Parameters Type Name Description Rect bounds Overrides View.Redraw(Rect) | Improve this Doc View Source RemoveItem(Int32) Removes a StatusItem at specified index of Items . Declaration public StatusItem RemoveItem(int index) Parameters Type Name Description System.Int32 index The zero-based index of the item to remove. Returns Type Description StatusItem The StatusItem removed. Implements System.IDisposable System.ComponentModel.ISupportInitializeNotification System.ComponentModel.ISupportInitialize"
  },
  "api/Terminal.Gui/Terminal.Gui.StatusItem.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.StatusItem.html",
    "title": "Class StatusItem",
    "keywords": "Class StatusItem StatusItem objects are contained by StatusBar View s. Each StatusItem has a title, a shortcut (hotkey), and an Action that will be invoked when the Shortcut is pressed. The Shortcut will be a global hotkey for the application in the current context of the screen. The colour of the Title will be changed after each ~. A Title set to `~F1~ Help` will render as *F1* using HotNormal and *Help* as HotNormal . Inheritance System.Object StatusItem Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Terminal.Gui Assembly : Terminal.Gui.dll Syntax public class StatusItem Constructors | Improve this Doc View Source StatusItem(Key, ustring, Action) Initializes a new StatusItem . Declaration public StatusItem(Key shortcut, ustring title, Action action) Parameters Type Name Description Key shortcut Shortcut to activate the StatusItem . NStack.ustring title Title for the StatusItem . System.Action action Action to invoke when the StatusItem is activated. Properties | Improve this Doc View Source Action Gets or sets the action to be invoked when the statusbar item is triggered Declaration public Action Action { get; } Property Value Type Description System.Action Action to invoke. | Improve this Doc View Source Shortcut Gets the global shortcut to invoke the action on the menu. Declaration public Key Shortcut { get; } Property Value Type Description Key | Improve this Doc View Source Title Gets or sets the title. Declaration public ustring Title { get; set; } Property Value Type Description NStack.ustring The title."
  },
  "api/Terminal.Gui/Terminal.Gui.TableView.CellActivatedEventArgs.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.TableView.CellActivatedEventArgs.html",
    "title": "Class TableView.CellActivatedEventArgs",
    "keywords": "Class TableView.CellActivatedEventArgs Defines the event arguments for CellActivated event Inheritance System.Object System.EventArgs TableView.CellActivatedEventArgs Inherited Members System.EventArgs.Empty System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Terminal.Gui Assembly : Terminal.Gui.dll Syntax public class CellActivatedEventArgs : EventArgs Constructors | Improve this Doc View Source CellActivatedEventArgs(DataTable, Int32, Int32) Creates a new instance of arguments describing a cell being activated in TableView Declaration public CellActivatedEventArgs(DataTable t, int col, int row) Parameters Type Name Description System.Data.DataTable t System.Int32 col System.Int32 row Properties | Improve this Doc View Source Col The column index of the Table cell that is being activated Declaration public int Col { get; } Property Value Type Description System.Int32 | Improve this Doc View Source Row The row index of the Table cell that is being activated Declaration public int Row { get; } Property Value Type Description System.Int32 | Improve this Doc View Source Table The current table to which the new indexes refer. May be null e.g. if selection change is the result of clearing the table from the view Declaration public DataTable Table { get; } Property Value Type Description System.Data.DataTable"
  },
  "api/Terminal.Gui/Terminal.Gui.TableView.CellColorGetterArgs.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.TableView.CellColorGetterArgs.html",
    "title": "Class TableView.CellColorGetterArgs",
    "keywords": "Class TableView.CellColorGetterArgs Arguments for a TableView.CellColorGetterDelegate . Describes a cell for which a rendering ColorScheme is being sought Inheritance System.Object TableView.CellColorGetterArgs Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Terminal.Gui Assembly : Terminal.Gui.dll Syntax public class CellColorGetterArgs Properties | Improve this Doc View Source CellValue The hard typed value being rendered in the cell for which color is needed Declaration public object CellValue { get; } Property Value Type Description System.Object | Improve this Doc View Source ColIdex The index of column in Table for which color is needed Declaration public int ColIdex { get; } Property Value Type Description System.Int32 | Improve this Doc View Source Representation The textual representation of CellValue (what will actually be drawn to the screen) Declaration public string Representation { get; } Property Value Type Description System.String | Improve this Doc View Source RowIndex The index of the row in Table for which color is needed Declaration public int RowIndex { get; } Property Value Type Description System.Int32 | Improve this Doc View Source RowScheme the color scheme that is going to be used to render the cell if no cell specific color scheme is returned Declaration public ColorScheme RowScheme { get; } Property Value Type Description ColorScheme | Improve this Doc View Source Table The data table hosted by the TableView control. Declaration public DataTable Table { get; } Property Value Type Description System.Data.DataTable"
  },
  "api/Terminal.Gui/Terminal.Gui.TableView.CellColorGetterDelegate.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.TableView.CellColorGetterDelegate.html",
    "title": "Delegate TableView.CellColorGetterDelegate",
    "keywords": "Delegate TableView.CellColorGetterDelegate Delegate for providing color to TableView cells based on the value being rendered Namespace : Terminal.Gui Assembly : Terminal.Gui.dll Syntax public delegate ColorScheme CellColorGetterDelegate(TableView.CellColorGetterArgs args); Parameters Type Name Description TableView.CellColorGetterArgs args Contains information about the cell for which color is needed Returns Type Description ColorScheme"
  },
  "api/Terminal.Gui/Terminal.Gui.TableView.ColumnStyle.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.TableView.ColumnStyle.html",
    "title": "Class TableView.ColumnStyle",
    "keywords": "Class TableView.ColumnStyle Describes how to render a given column in a TableView including Alignment and textual representation of cells (e.g. date formats) See TableView Deep Dive for more information . Inheritance System.Object TableView.ColumnStyle Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Terminal.Gui Assembly : Terminal.Gui.dll Syntax public class ColumnStyle Fields | Improve this Doc View Source AlignmentGetter Defines a delegate for returning custom alignment per cell based on cell values. When specified this will override Alignment Declaration public Func<object, TextAlignment> AlignmentGetter Field Value Type Description System.Func < System.Object , TextAlignment > | Improve this Doc View Source ColorGetter Defines a delegate for returning a custom color scheme per cell based on cell values. Return null for the default Declaration public TableView.CellColorGetterDelegate ColorGetter Field Value Type Description TableView.CellColorGetterDelegate | Improve this Doc View Source RepresentationGetter Defines a delegate for returning custom representations of cell values. If not set then System.Object.ToString() is used. Return values from your delegate may be truncated e.g. based on MaxWidth Declaration public Func<object, string> RepresentationGetter Field Value Type Description System.Func < System.Object , System.String > Properties | Improve this Doc View Source Alignment Defines the default alignment for all values rendered in this column. For custom alignment based on cell contents use AlignmentGetter . Declaration public TextAlignment Alignment { get; set; } Property Value Type Description TextAlignment | Improve this Doc View Source Format Defines the format for values e.g. \"yyyy-MM-dd\" for dates Declaration public string Format { get; set; } Property Value Type Description System.String | Improve this Doc View Source MaxWidth Set the maximum width of the column in characters. This value will be ignored if more than the tables MaxCellWidth . Defaults to DefaultMaxCellWidth Declaration public int MaxWidth { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source MinAcceptableWidth Enables flexible sizing of this column based on available screen space to render into. Declaration public int MinAcceptableWidth { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source MinWidth Set the minimum width of the column in characters. Setting this will ensure that even when a column has short content/header it still fills a given width of the control. This value will be ignored if more than the tables MaxCellWidth or the MaxWidth For setting a flexible column width (down to a lower limit) use MinAcceptableWidth instead Declaration public int MinWidth { get; set; } Property Value Type Description System.Int32 Methods | Improve this Doc View Source GetAlignment(Object) Returns the alignment for the cell based on cellValue and AlignmentGetter / Alignment Declaration public TextAlignment GetAlignment(object cellValue) Parameters Type Name Description System.Object cellValue Returns Type Description TextAlignment | Improve this Doc View Source GetRepresentation(Object) Returns the full string to render (which may be truncated if too long) that the current style says best represents the given value Declaration public string GetRepresentation(object value) Parameters Type Name Description System.Object value Returns Type Description System.String"
  },
  "api/Terminal.Gui/Terminal.Gui.TableView.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.TableView.html",
    "title": "Class TableView",
    "keywords": "Class TableView View for tabular data based on a System.Data.DataTable . See TableView Deep Dive for more information . Inheritance System.Object Responder View TableView Implements System.IDisposable System.ComponentModel.ISupportInitializeNotification System.ComponentModel.ISupportInitialize Inherited Members View.Added View.Removed View.Enter View.Leave View.MouseEnter View.MouseLeave View.MouseClick View.CanFocusChanged View.EnabledChanged View.VisibleChanged View.HotKeyChanged View.HotKey View.HotKeySpecifier View.Shortcut View.ShortcutTag View.ShortcutAction View.Data View.Driver View.Subviews View.TabIndexes View.TabIndex View.TabStop View.CanFocus View.Id View.IsCurrentTop View.WantMousePositionReports View.WantContinuousButtonPressed View.Frame View.LayoutStyle View.Bounds View.X View.Y View.Width View.Height View.ForceValidatePosDim View.GetMinWidthHeight(Size) View.SetMinWidthHeight() View.TextFormatter View.SuperView View.UpdateTextFormatterText() View.ProcessResizeView() View.SetNeedsDisplay() View.ClearLayoutNeeded() View.SetNeedsDisplay(Rect) View.SetChildNeedsDisplay() View.Add(View) View.Add(View[]) View.RemoveAll() View.Remove(View) View.BringSubviewToFront(View) View.SendSubviewToBack(View) View.SendSubviewBackwards(View) View.BringSubviewForward(View) View.Clear() View.Clear(Rect) View.ScreenToView(Int32, Int32) View.ClipToBounds() View.SetClip(Rect) View.DrawFrame(Rect, Int32, Boolean) View.DrawHotString(ustring, Attribute, Attribute) View.DrawHotString(ustring, Boolean, ColorScheme) View.Move(Int32, Int32, Boolean) View.HasFocus View.OnAdded(View) View.OnRemoved(View) View.OnEnter(View) View.OnLeave(View) View.Focused View.MostFocused View.ColorScheme View.AddRune(Int32, Int32, Rune) View.ClearNeedsDisplay() View.DrawContent View.OnDrawContent(Rect) View.DrawContentComplete View.OnDrawContentComplete(Rect) View.SetFocus() View.KeyPress View.InvokeKeybindings(KeyEvent) View.AddKeyBinding(Key, Command[]) View.ReplaceKeyBinding(Key, Key) View.ContainsKeyBinding(Key) View.ClearKeybindings() View.ClearKeybinding(Key) View.ClearKeybinding(Command[]) View.AddCommand(Command, Func<Nullable<Boolean>>) View.GetSupportedCommands() View.GetKeyFromCommand(Command[]) View.ProcessHotKey(KeyEvent) View.ProcessColdKey(KeyEvent) View.KeyDown View.OnKeyDown(KeyEvent) View.KeyUp View.OnKeyUp(KeyEvent) View.EnsureFocus() View.FocusFirst() View.FocusLast() View.FocusPrev() View.FocusNext() View.LayoutStarted View.LayoutComplete View.Initialized View.LayoutSubviews() View.Text View.AutoSize View.PreserveTrailingSpaces View.TextAlignment View.VerticalTextAlignment View.TextDirection View.IsInitialized View.IsAdded View.Enabled View.Visible View.Border View.ToString() View.GetAutoSize() View.GetHotKeySpecifierLength(Boolean) View.GetTextFormatterBoundsSize() View.GetBoundsTextFormatterSize() View.OnMouseEnter(MouseEvent) View.OnMouseLeave(MouseEvent) View.OnMouseEvent(MouseEvent) View.OnMouseClick(View.MouseEventArgs) View.OnCanFocusChanged() View.OnEnabledChanged() View.OnVisibleChanged() View.Dispose(Boolean) View.BeginInit() View.EndInit() View.SetWidth(Int32, Int32) View.SetHeight(Int32, Int32) View.GetCurrentWidth(Int32) View.GetCurrentHeight(Int32) View.GetNormalColor() View.GetTopSuperView() Responder.Dispose() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Terminal.Gui Assembly : Terminal.Gui.dll Syntax public class TableView : View, IDisposable, ISupportInitializeNotification, ISupportInitialize Constructors | Improve this Doc View Source TableView() Initialzies a TableView class using Computed layout. Set the Table property to begin editing Declaration public TableView() | Improve this Doc View Source TableView(DataTable) Initialzies a TableView class using Computed layout. Declaration public TableView(DataTable table) Parameters Type Name Description System.Data.DataTable table The table to display in the control Fields | Improve this Doc View Source DefaultMaxCellWidth The default maximum cell width for MaxCellWidth and MaxWidth Declaration public const int DefaultMaxCellWidth = 100 Field Value Type Description System.Int32 | Improve this Doc View Source DefaultMinAcceptableWidth The default minimum cell width for MinAcceptableWidth Declaration public const int DefaultMinAcceptableWidth = 100 Field Value Type Description System.Int32 Properties | Improve this Doc View Source CellActivationKey The key which when pressed should trigger CellActivated event. Defaults to Enter. Declaration public Key CellActivationKey { get; set; } Property Value Type Description Key | Improve this Doc View Source ColumnOffset Horizontal scroll offset. The index of the first column in Table to display when when rendering the view. Declaration public int ColumnOffset { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source FullRowSelect True to select the entire row at once. False to select individual cells. Defaults to false Declaration public bool FullRowSelect { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source MaxCellWidth The maximum number of characters to render in any given column. This prevents one long column from pushing out all the others Declaration public int MaxCellWidth { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source MultiSelect True to allow regions to be selected Declaration public bool MultiSelect { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source MultiSelectedRegions When MultiSelect is enabled this property contain all rectangles of selected cells. Rectangles describe column/rows selected in Table (not screen coordinates) Declaration public Stack<TableView.TableSelection> MultiSelectedRegions { get; } Property Value Type Description System.Collections.Generic.Stack < TableView.TableSelection > | Improve this Doc View Source NullSymbol The text representation that should be rendered for cells with the value System.DBNull.Value Declaration public string NullSymbol { get; set; } Property Value Type Description System.String | Improve this Doc View Source RowOffset Vertical scroll offset. The index of the first row in Table to display in the first non header line of the control when rendering the view. Declaration public int RowOffset { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source SelectedColumn The index of System.Data.DataTable.Columns in Table that the user has currently selected Declaration public int SelectedColumn { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source SelectedRow The index of System.Data.DataTable.Rows in Table that the user has currently selected Declaration public int SelectedRow { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source SeparatorSymbol The symbol to add after each cell value and header value to visually seperate values (if not using vertical gridlines) Declaration public char SeparatorSymbol { get; set; } Property Value Type Description System.Char | Improve this Doc View Source Style Contains options for changing how the table is rendered Declaration public TableView.TableStyle Style { get; set; } Property Value Type Description TableView.TableStyle | Improve this Doc View Source Table The data table to render in the view. Setting this property automatically updates and redraws the control. Declaration public DataTable Table { get; set; } Property Value Type Description System.Data.DataTable Methods | Improve this Doc View Source CellToScreen(Int32, Int32) Returns the screen position (relative to the control client area) that the given cell is rendered or null if it is outside the current scroll area or no table is loaded Declaration public Point? CellToScreen(int tableColumn, int tableRow) Parameters Type Name Description System.Int32 tableColumn The index of the Table column you are looking for, use System.Data.DataColumn.Ordinal System.Int32 tableRow The index of the row in Table that you are looking for Returns Type Description System.Nullable < Point > | Improve this Doc View Source ChangeSelectionByOffset(Int32, Int32, Boolean) Moves the SelectedRow and SelectedColumn by the provided offsets. Optionally starting a box selection (see MultiSelect ) Declaration public void ChangeSelectionByOffset(int offsetX, int offsetY, bool extendExistingSelection) Parameters Type Name Description System.Int32 offsetX Offset in number of columns System.Int32 offsetY Offset in number of rows System.Boolean extendExistingSelection True to create a multi cell selection or adjust an existing one | Improve this Doc View Source ChangeSelectionToEndOfRow(Boolean) Moves or extends the selection to the last cell in the current row Declaration public void ChangeSelectionToEndOfRow(bool extend) Parameters Type Name Description System.Boolean extend true to extend the current selection (if any) instead of replacing | Improve this Doc View Source ChangeSelectionToEndOfTable(Boolean) Moves or extends the selection to the final cell in the table Declaration public void ChangeSelectionToEndOfTable(bool extend) Parameters Type Name Description System.Boolean extend true to extend the current selection (if any) instead of replacing | Improve this Doc View Source ChangeSelectionToStartOfRow(Boolean) Moves or extends the selection to the first cell in the current row Declaration public void ChangeSelectionToStartOfRow(bool extend) Parameters Type Name Description System.Boolean extend true to extend the current selection (if any) instead of replacing | Improve this Doc View Source ChangeSelectionToStartOfTable(Boolean) Moves or extends the selection to the first cell in the table (0,0) Declaration public void ChangeSelectionToStartOfTable(bool extend) Parameters Type Name Description System.Boolean extend true to extend the current selection (if any) instead of replacing | Improve this Doc View Source EnsureSelectedCellIsVisible() Updates scroll offsets to ensure that the selected cell is visible. Has no effect if Table has not been set. Declaration public void EnsureSelectedCellIsVisible() | Improve this Doc View Source EnsureValidScrollOffsets() Updates ColumnOffset and RowOffset where they are outside the bounds of the table (by adjusting them to the nearest existing cell). Has no effect if Table has not been set. Declaration public void EnsureValidScrollOffsets() | Improve this Doc View Source EnsureValidSelection() Updates SelectedColumn , SelectedRow and MultiSelectedRegions where they are outside the bounds of the table (by adjusting them to the nearest existing cell). Has no effect if Table has not been set. Declaration public void EnsureValidSelection() | Improve this Doc View Source GetAllSelectedCells() Returns all cells in any MultiSelectedRegions (if MultiSelect is enabled) and the selected cell Declaration public IEnumerable<Point> GetAllSelectedCells() Returns Type Description System.Collections.Generic.IEnumerable < Point > | Improve this Doc View Source IsSelected(Int32, Int32) Returns true if the given cell is selected either because it is the active cell or part of a multi cell selection (e.g. FullRowSelect ) Declaration public bool IsSelected(int col, int row) Parameters Type Name Description System.Int32 col System.Int32 row Returns Type Description System.Boolean | Improve this Doc View Source MouseEvent(MouseEvent) Declaration public override bool MouseEvent(MouseEvent me) Parameters Type Name Description MouseEvent me Returns Type Description System.Boolean Overrides Responder.MouseEvent(MouseEvent) | Improve this Doc View Source OnCellActivated(TableView.CellActivatedEventArgs) Invokes the CellActivated event Declaration protected virtual void OnCellActivated(TableView.CellActivatedEventArgs args) Parameters Type Name Description TableView.CellActivatedEventArgs args | Improve this Doc View Source OnSelectedCellChanged(TableView.SelectedCellChangedEventArgs) Invokes the SelectedCellChanged event Declaration protected virtual void OnSelectedCellChanged(TableView.SelectedCellChangedEventArgs args) Parameters Type Name Description TableView.SelectedCellChangedEventArgs args | Improve this Doc View Source PageDown(Boolean) Moves the selection down by one page Declaration public void PageDown(bool extend) Parameters Type Name Description System.Boolean extend true to extend the current selection (if any) instead of replacing | Improve this Doc View Source PageUp(Boolean) Moves the selection up by one page Declaration public void PageUp(bool extend) Parameters Type Name Description System.Boolean extend true to extend the current selection (if any) instead of replacing | Improve this Doc View Source PositionCursor() Positions the cursor in the area of the screen in which the start of the active cell is rendered. Calls base implementation if active cell is not visible due to scrolling or table is loaded etc Declaration public override void PositionCursor() Overrides View.PositionCursor() | Improve this Doc View Source ProcessKey(KeyEvent) Declaration public override bool ProcessKey(KeyEvent keyEvent) Parameters Type Name Description KeyEvent keyEvent Returns Type Description System.Boolean Overrides View.ProcessKey(KeyEvent) | Improve this Doc View Source Redraw(Rect) Declaration public override void Redraw(Rect bounds) Parameters Type Name Description Rect bounds Overrides View.Redraw(Rect) | Improve this Doc View Source RenderCell(Attribute, String, Boolean) Override to provide custom multi colouring to cells. Use Driver to with AddStr(ustring) . The driver will already be in the correct place when rendering and you must render the full render or the view will not look right. For simpler provision of color use ColorGetter For changing the content that is rendered use RepresentationGetter Declaration protected virtual void RenderCell(Attribute cellColor, string render, bool isPrimaryCell) Parameters Type Name Description Attribute cellColor System.String render System.Boolean isPrimaryCell | Improve this Doc View Source ScreenToCell(Int32, Int32) Returns the column and row of Table that corresponds to a given point on the screen (relative to the control client area). Returns null if the point is in the header, no table is loaded or outside the control bounds Declaration public Point? ScreenToCell(int clientX, int clientY) Parameters Type Name Description System.Int32 clientX X offset from the top left of the control System.Int32 clientY Y offset from the top left of the control Returns Type Description System.Nullable < Point > | Improve this Doc View Source SelectAll() When MultiSelect is on, creates selection over all cells in the table (replacing any old selection regions) Declaration public void SelectAll() | Improve this Doc View Source SetSelection(Int32, Int32, Boolean) Moves the SelectedRow and SelectedColumn to the given col/row in Table . Optionally starting a box selection (see MultiSelect ) Declaration public void SetSelection(int col, int row, bool extendExistingSelection) Parameters Type Name Description System.Int32 col System.Int32 row System.Boolean extendExistingSelection True to create a multi cell selection or adjust an existing one | Improve this Doc View Source Update() Updates the view to reflect changes to Table and to ( ColumnOffset / RowOffset ) etc Declaration public void Update() Events | Improve this Doc View Source CellActivated This event is raised when a cell is activated e.g. by double clicking or pressing CellActivationKey Declaration public event Action<TableView.CellActivatedEventArgs> CellActivated Event Type Type Description System.Action < TableView.CellActivatedEventArgs > | Improve this Doc View Source SelectedCellChanged This event is raised when the selected cell in the table changes. Declaration public event Action<TableView.SelectedCellChangedEventArgs> SelectedCellChanged Event Type Type Description System.Action < TableView.SelectedCellChangedEventArgs > Implements System.IDisposable System.ComponentModel.ISupportInitializeNotification System.ComponentModel.ISupportInitialize"
  },
  "api/Terminal.Gui/Terminal.Gui.TableView.RowColorGetterArgs.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.TableView.RowColorGetterArgs.html",
    "title": "Class TableView.RowColorGetterArgs",
    "keywords": "Class TableView.RowColorGetterArgs Arguments for TableView.RowColorGetterDelegate . Describes a row of data in a System.Data.DataTable for which ColorScheme is sought. Inheritance System.Object TableView.RowColorGetterArgs Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Terminal.Gui Assembly : Terminal.Gui.dll Syntax public class RowColorGetterArgs Properties | Improve this Doc View Source RowIndex The index of the row in Table for which color is needed Declaration public int RowIndex { get; } Property Value Type Description System.Int32 | Improve this Doc View Source Table The data table hosted by the TableView control. Declaration public DataTable Table { get; } Property Value Type Description System.Data.DataTable"
  },
  "api/Terminal.Gui/Terminal.Gui.TableView.RowColorGetterDelegate.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.TableView.RowColorGetterDelegate.html",
    "title": "Delegate TableView.RowColorGetterDelegate",
    "keywords": "Delegate TableView.RowColorGetterDelegate Delegate for providing color for a whole row of a TableView Namespace : Terminal.Gui Assembly : Terminal.Gui.dll Syntax public delegate ColorScheme RowColorGetterDelegate(TableView.RowColorGetterArgs args); Parameters Type Name Description TableView.RowColorGetterArgs args Returns Type Description ColorScheme"
  },
  "api/Terminal.Gui/Terminal.Gui.TableView.SelectedCellChangedEventArgs.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.TableView.SelectedCellChangedEventArgs.html",
    "title": "Class TableView.SelectedCellChangedEventArgs",
    "keywords": "Class TableView.SelectedCellChangedEventArgs Defines the event arguments for SelectedCellChanged Inheritance System.Object System.EventArgs TableView.SelectedCellChangedEventArgs Inherited Members System.EventArgs.Empty System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Terminal.Gui Assembly : Terminal.Gui.dll Syntax public class SelectedCellChangedEventArgs : EventArgs Constructors | Improve this Doc View Source SelectedCellChangedEventArgs(DataTable, Int32, Int32, Int32, Int32) Creates a new instance of arguments describing a change in selected cell in a TableView Declaration public SelectedCellChangedEventArgs(DataTable t, int oldCol, int newCol, int oldRow, int newRow) Parameters Type Name Description System.Data.DataTable t System.Int32 oldCol System.Int32 newCol System.Int32 oldRow System.Int32 newRow Properties | Improve this Doc View Source NewCol The newly selected column index. Declaration public int NewCol { get; } Property Value Type Description System.Int32 | Improve this Doc View Source NewRow The newly selected row index. Declaration public int NewRow { get; } Property Value Type Description System.Int32 | Improve this Doc View Source OldCol The previous selected column index. May be invalid e.g. when the selection has been changed as a result of replacing the existing Table with a smaller one Declaration public int OldCol { get; } Property Value Type Description System.Int32 | Improve this Doc View Source OldRow The previous selected row index. May be invalid e.g. when the selection has been changed as a result of deleting rows from the table Declaration public int OldRow { get; } Property Value Type Description System.Int32 | Improve this Doc View Source Table The current table to which the new indexes refer. May be null e.g. if selection change is the result of clearing the table from the view Declaration public DataTable Table { get; } Property Value Type Description System.Data.DataTable"
  },
  "api/Terminal.Gui/Terminal.Gui.TableView.TableSelection.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.TableView.TableSelection.html",
    "title": "Class TableView.TableSelection",
    "keywords": "Class TableView.TableSelection Describes a selected region of the table Inheritance System.Object TableView.TableSelection Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Terminal.Gui Assembly : Terminal.Gui.dll Syntax public class TableSelection Constructors | Improve this Doc View Source TableSelection(Point, Rect) Creates a new selected area starting at the origin corner and covering the provided rectangular area Declaration public TableSelection(Point origin, Rect rect) Parameters Type Name Description Point origin Rect rect Properties | Improve this Doc View Source Origin Corner of the Rect where selection began Declaration public Point Origin { get; set; } Property Value Type Description Point | Improve this Doc View Source Rect Area selected Declaration public Rect Rect { get; set; } Property Value Type Description Rect"
  },
  "api/Terminal.Gui/Terminal.Gui.TableView.TableStyle.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.TableView.TableStyle.html",
    "title": "Class TableView.TableStyle",
    "keywords": "Class TableView.TableStyle Defines rendering options that affect how the table is displayed. See TableView Deep Dive for more information . Inheritance System.Object TableView.TableStyle Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Terminal.Gui Assembly : Terminal.Gui.dll Syntax public class TableStyle Properties | Improve this Doc View Source AlwaysShowHeaders When scrolling down always lock the column headers in place as the first row of the table Declaration public bool AlwaysShowHeaders { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source ColumnStyles Collection of columns for which you want special rendering (e.g. custom column lengths, text alignment etc) Declaration public Dictionary<DataColumn, TableView.ColumnStyle> ColumnStyles { get; set; } Property Value Type Description System.Collections.Generic.Dictionary < System.Data.DataColumn , TableView.ColumnStyle > | Improve this Doc View Source ExpandLastColumn Determines rendering when the last column in the table is visible but it's content or MaxWidth is less than the remaining space in the control. True (the default) will expand the column to fill the remaining bounds of the control. False will draw a column ending line and leave a blank column that cannot be selected in the remaining space. Declaration public bool ExpandLastColumn { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source InvertSelectedCellFirstCharacter True to invert the colors of the first symbol of the selected cell in the TableView . This gives the appearance of a cursor for when the ConsoleDriver doesn't otherwise show this Declaration public bool InvertSelectedCellFirstCharacter { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source RowColorGetter Delegate for coloring specific rows in a different color. For cell color ColorGetter Declaration public TableView.RowColorGetterDelegate RowColorGetter { get; set; } Property Value Type Description TableView.RowColorGetterDelegate | Improve this Doc View Source ShowHorizontalHeaderOverline True to render a solid line above the headers Declaration public bool ShowHorizontalHeaderOverline { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source ShowHorizontalHeaderUnderline True to render a solid line under the headers Declaration public bool ShowHorizontalHeaderUnderline { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source ShowHorizontalScrollIndicators True to render a arrows on the right/left of the table when there are more column(s) that can be scrolled to. Requires ShowHorizontalHeaderUnderline to be true. Defaults to true Declaration public bool ShowHorizontalScrollIndicators { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source ShowVerticalCellLines True to render a solid line vertical line between cells Declaration public bool ShowVerticalCellLines { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source ShowVerticalHeaderLines True to render a solid line vertical line between headers Declaration public bool ShowVerticalHeaderLines { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source SmoothHorizontalScrolling Determines how ColumnOffset is updated when scrolling right off the end of the currently visible area. If true then when scrolling right the scroll offset is increased the minimum required to show the new column. This may be slow if you have an incredibly large number of columns in your table and/or slow RepresentationGetter implementations If false then scroll offset is set to the currently selected column (i.e. PageRight). Declaration public bool SmoothHorizontalScrolling { get; set; } Property Value Type Description System.Boolean Methods | Improve this Doc View Source GetColumnStyleIfAny(DataColumn) Returns the entry from ColumnStyles for the given col or null if no custom styling is defined for it Declaration public TableView.ColumnStyle GetColumnStyleIfAny(DataColumn col) Parameters Type Name Description System.Data.DataColumn col Returns Type Description TableView.ColumnStyle | Improve this Doc View Source GetOrCreateColumnStyle(DataColumn) Returns an existing TableView.ColumnStyle for the given col or creates a new one with default options Declaration public TableView.ColumnStyle GetOrCreateColumnStyle(DataColumn col) Parameters Type Name Description System.Data.DataColumn col Returns Type Description TableView.ColumnStyle"
  },
  "api/Terminal.Gui/Terminal.Gui.TabView.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.TabView.html",
    "title": "Class TabView",
    "keywords": "Class TabView Control that hosts multiple sub views, presenting a single one at once Inheritance System.Object Responder View TabView Implements System.IDisposable System.ComponentModel.ISupportInitializeNotification System.ComponentModel.ISupportInitialize Inherited Members View.Added View.Removed View.Enter View.Leave View.MouseEnter View.MouseLeave View.MouseClick View.CanFocusChanged View.EnabledChanged View.VisibleChanged View.HotKeyChanged View.HotKey View.HotKeySpecifier View.Shortcut View.ShortcutTag View.ShortcutAction View.Data View.Driver View.Subviews View.TabIndexes View.TabIndex View.TabStop View.CanFocus View.Id View.IsCurrentTop View.WantMousePositionReports View.WantContinuousButtonPressed View.Frame View.LayoutStyle View.Bounds View.X View.Y View.Width View.Height View.ForceValidatePosDim View.GetMinWidthHeight(Size) View.SetMinWidthHeight() View.TextFormatter View.SuperView View.UpdateTextFormatterText() View.ProcessResizeView() View.SetNeedsDisplay() View.ClearLayoutNeeded() View.SetNeedsDisplay(Rect) View.SetChildNeedsDisplay() View.Add(View) View.Add(View[]) View.RemoveAll() View.Remove(View) View.BringSubviewToFront(View) View.SendSubviewToBack(View) View.SendSubviewBackwards(View) View.BringSubviewForward(View) View.Clear() View.Clear(Rect) View.ScreenToView(Int32, Int32) View.ClipToBounds() View.SetClip(Rect) View.DrawFrame(Rect, Int32, Boolean) View.DrawHotString(ustring, Attribute, Attribute) View.DrawHotString(ustring, Boolean, ColorScheme) View.Move(Int32, Int32, Boolean) View.PositionCursor() View.HasFocus View.OnAdded(View) View.OnRemoved(View) View.OnEnter(View) View.OnLeave(View) View.Focused View.MostFocused View.ColorScheme View.AddRune(Int32, Int32, Rune) View.ClearNeedsDisplay() View.DrawContent View.OnDrawContent(Rect) View.DrawContentComplete View.OnDrawContentComplete(Rect) View.SetFocus() View.KeyPress View.InvokeKeybindings(KeyEvent) View.AddKeyBinding(Key, Command[]) View.ReplaceKeyBinding(Key, Key) View.ContainsKeyBinding(Key) View.ClearKeybindings() View.ClearKeybinding(Key) View.ClearKeybinding(Command[]) View.AddCommand(Command, Func<Nullable<Boolean>>) View.GetSupportedCommands() View.GetKeyFromCommand(Command[]) View.ProcessHotKey(KeyEvent) View.ProcessColdKey(KeyEvent) View.KeyDown View.OnKeyDown(KeyEvent) View.KeyUp View.OnKeyUp(KeyEvent) View.EnsureFocus() View.FocusFirst() View.FocusLast() View.FocusPrev() View.FocusNext() View.LayoutStarted View.LayoutComplete View.Initialized View.LayoutSubviews() View.Text View.AutoSize View.PreserveTrailingSpaces View.TextAlignment View.VerticalTextAlignment View.TextDirection View.IsInitialized View.IsAdded View.Enabled View.Visible View.Border View.ToString() View.GetAutoSize() View.GetHotKeySpecifierLength(Boolean) View.GetTextFormatterBoundsSize() View.GetBoundsTextFormatterSize() View.OnMouseEnter(MouseEvent) View.OnMouseLeave(MouseEvent) View.OnMouseEvent(MouseEvent) View.OnMouseClick(View.MouseEventArgs) View.OnCanFocusChanged() View.OnEnabledChanged() View.OnVisibleChanged() View.BeginInit() View.EndInit() View.SetWidth(Int32, Int32) View.SetHeight(Int32, Int32) View.GetCurrentWidth(Int32) View.GetCurrentHeight(Int32) View.GetNormalColor() View.GetTopSuperView() Responder.MouseEvent(MouseEvent) Responder.Dispose() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Terminal.Gui Assembly : Terminal.Gui.dll Syntax public class TabView : View, IDisposable, ISupportInitializeNotification, ISupportInitialize Constructors | Improve this Doc View Source TabView() Initialzies a TabView class using Computed layout. Declaration public TabView() Fields | Improve this Doc View Source DefaultMaxTabTextWidth The default MaxTabTextWidth to set on new TabView controls Declaration public const uint DefaultMaxTabTextWidth = 30U Field Value Type Description System.UInt32 Properties | Improve this Doc View Source MaxTabTextWidth The maximum number of characters to render in a Tab header. This prevents one long tab from pushing out all the others. Declaration public uint MaxTabTextWidth { get; set; } Property Value Type Description System.UInt32 | Improve this Doc View Source SelectedTab The currently selected member of Tabs chosen by the user Declaration public TabView.Tab SelectedTab { get; set; } Property Value Type Description TabView.Tab | Improve this Doc View Source Style Render choices for how to display tabs. After making changes, call ApplyStyleChanges() Declaration public TabView.TabStyle Style { get; set; } Property Value Type Description TabView.TabStyle | Improve this Doc View Source Tabs All tabs currently hosted by the control Declaration public IReadOnlyCollection<TabView.Tab> Tabs { get; } Property Value Type Description System.Collections.Generic.IReadOnlyCollection < TabView.Tab > | Improve this Doc View Source TabScrollOffset When there are too many tabs to render, this indicates the first tab to render on the screen. Declaration public int TabScrollOffset { get; set; } Property Value Type Description System.Int32 Methods | Improve this Doc View Source AddTab(TabView.Tab, Boolean) Adds the given tab to Tabs Declaration public void AddTab(TabView.Tab tab, bool andSelect) Parameters Type Name Description TabView.Tab tab System.Boolean andSelect True to make the newly added Tab the SelectedTab | Improve this Doc View Source ApplyStyleChanges() Updates the control to use the latest state settings in Style . This can change the size of the client area of the tab (for rendering the selected tab's content). This method includes a call to SetNeedsDisplay() Declaration public void ApplyStyleChanges() | Improve this Doc View Source Dispose(Boolean) Disposes the control and all Tabs Declaration protected override void Dispose(bool disposing) Parameters Type Name Description System.Boolean disposing Overrides View.Dispose(Boolean) | Improve this Doc View Source EnsureSelectedTabIsVisible() Updates TabScrollOffset to ensure that SelectedTab is visible Declaration public void EnsureSelectedTabIsVisible() | Improve this Doc View Source EnsureValidScrollOffsets() Updates TabScrollOffset to be a valid index of Tabs Declaration public void EnsureValidScrollOffsets() | Improve this Doc View Source OnSelectedTabChanged(TabView.Tab, TabView.Tab) Raises the SelectedTabChanged event Declaration protected virtual void OnSelectedTabChanged(TabView.Tab oldTab, TabView.Tab newTab) Parameters Type Name Description TabView.Tab oldTab TabView.Tab newTab | Improve this Doc View Source ProcessKey(KeyEvent) Declaration public override bool ProcessKey(KeyEvent keyEvent) Parameters Type Name Description KeyEvent keyEvent Returns Type Description System.Boolean Overrides View.ProcessKey(KeyEvent) | Improve this Doc View Source Redraw(Rect) Declaration public override void Redraw(Rect bounds) Parameters Type Name Description Rect bounds Overrides View.Redraw(Rect) | Improve this Doc View Source RemoveTab(TabView.Tab) Removes the given tab from Tabs . Caller is responsible for disposing the tab's hosted View if appropriate. Declaration public void RemoveTab(TabView.Tab tab) Parameters Type Name Description TabView.Tab tab | Improve this Doc View Source SwitchTabBy(Int32) Changes the SelectedTab by the given amount . Positive for right, negative for left. If no tab is currently selected then the first tab will become selected Declaration public void SwitchTabBy(int amount) Parameters Type Name Description System.Int32 amount Events | Improve this Doc View Source SelectedTabChanged Event for when SelectedTab changes Declaration public event EventHandler<TabView.TabChangedEventArgs> SelectedTabChanged Event Type Type Description System.EventHandler < TabView.TabChangedEventArgs > Implements System.IDisposable System.ComponentModel.ISupportInitializeNotification System.ComponentModel.ISupportInitialize"
  },
  "api/Terminal.Gui/Terminal.Gui.TabView.Tab.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.TabView.Tab.html",
    "title": "Class TabView.Tab",
    "keywords": "Class TabView.Tab A single tab in a TabView Inheritance System.Object TabView.Tab Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Terminal.Gui Assembly : Terminal.Gui.dll Syntax public class Tab Constructors | Improve this Doc View Source Tab() Creates a new unamed tab with no controls inside Declaration public Tab() | Improve this Doc View Source Tab(String, View) Creates a new tab with the given text hosting a view Declaration public Tab(string text, View view) Parameters Type Name Description System.String text View view Properties | Improve this Doc View Source Text The text to display in a TabView Declaration public ustring Text { get; set; } Property Value Type Description NStack.ustring | Improve this Doc View Source View The control to display when the tab is selected Declaration public View View { get; set; } Property Value Type Description View"
  },
  "api/Terminal.Gui/Terminal.Gui.TabView.TabChangedEventArgs.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.TabView.TabChangedEventArgs.html",
    "title": "Class TabView.TabChangedEventArgs",
    "keywords": "Class TabView.TabChangedEventArgs Describes a change in SelectedTab Inheritance System.Object System.EventArgs TabView.TabChangedEventArgs Inherited Members System.EventArgs.Empty System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Terminal.Gui Assembly : Terminal.Gui.dll Syntax public class TabChangedEventArgs : EventArgs Constructors | Improve this Doc View Source TabChangedEventArgs(TabView.Tab, TabView.Tab) Documents a tab change Declaration public TabChangedEventArgs(TabView.Tab oldTab, TabView.Tab newTab) Parameters Type Name Description TabView.Tab oldTab TabView.Tab newTab Properties | Improve this Doc View Source NewTab The currently selected tab. May be null Declaration public TabView.Tab NewTab { get; } Property Value Type Description TabView.Tab | Improve this Doc View Source OldTab The previously selected tab. May be null Declaration public TabView.Tab OldTab { get; } Property Value Type Description TabView.Tab"
  },
  "api/Terminal.Gui/Terminal.Gui.TabView.TabStyle.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.TabView.TabStyle.html",
    "title": "Class TabView.TabStyle",
    "keywords": "Class TabView.TabStyle Describes render stylistic selections of a TabView Inheritance System.Object TabView.TabStyle Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Terminal.Gui Assembly : Terminal.Gui.dll Syntax public class TabStyle Properties | Improve this Doc View Source ShowBorder True to show a solid box around the edge of the control. Defaults to true. Declaration public bool ShowBorder { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source ShowTopLine True to show the top lip of tabs. False to directly begin with tab text during rendering. When true header line occupies 3 rows, when false only 2. Defaults to true. When TabsOnBottom is enabled this instead applies to the bottommost line of the control Declaration public bool ShowTopLine { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source TabsOnBottom True to render tabs at the bottom of the view instead of the top Declaration public bool TabsOnBottom { get; set; } Property Value Type Description System.Boolean"
  },
  "api/Terminal.Gui/Terminal.Gui.TextAlignment.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.TextAlignment.html",
    "title": "Enum TextAlignment",
    "keywords": "Enum TextAlignment Text alignment enumeration, controls how text is displayed. Namespace : Terminal.Gui Assembly : Terminal.Gui.dll Syntax public enum TextAlignment Fields Name Description Centered Centers the text in the frame. Justified Shows the text as justified text in the frame. Left Aligns the text to the left of the frame. Right Aligns the text to the right side of the frame."
  },
  "api/Terminal.Gui/Terminal.Gui.TextChangingEventArgs.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.TextChangingEventArgs.html",
    "title": "Class TextChangingEventArgs",
    "keywords": "Class TextChangingEventArgs An System.EventArgs which allows passing a cancelable new text value event. Inheritance System.Object System.EventArgs TextChangingEventArgs Inherited Members System.EventArgs.Empty System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Terminal.Gui Assembly : Terminal.Gui.dll Syntax public class TextChangingEventArgs : EventArgs Constructors | Improve this Doc View Source TextChangingEventArgs(ustring) Initializes a new instance of TextChangingEventArgs Declaration public TextChangingEventArgs(ustring newText) Parameters Type Name Description NStack.ustring newText The new Text to be replaced. Properties | Improve this Doc View Source Cancel Flag which allows to cancel the new text value. Declaration public bool Cancel { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source NewText The new text to be replaced. Declaration public ustring NewText { get; set; } Property Value Type Description NStack.ustring"
  },
  "api/Terminal.Gui/Terminal.Gui.TextDirection.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.TextDirection.html",
    "title": "Enum TextDirection",
    "keywords": "Enum TextDirection Text direction enumeration, controls how text is displayed. Namespace : Terminal.Gui Assembly : Terminal.Gui.dll Syntax public enum TextDirection Fields Name Description BottomTop_LeftRight This is a vertical direction. O D L L L R E O H W BottomTop_RightLeft This is a vertical direction. D O L L R L O E W H LeftRight_BottomTop This is a horizontal direction. WORLD HELLO LeftRight_TopBottom Normal horizontal direction. HELLO WORLD RightLeft_BottomTop This is a horizontal direction. DLROW OLLEH RightLeft_TopBottom This is a horizontal direction. RTL OLLEH DLROW TopBottom_LeftRight Normal vertical direction. H W E O L R L L O D TopBottom_RightLeft This is a vertical direction. W H O E R L L L D O"
  },
  "api/Terminal.Gui/Terminal.Gui.TextField.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.TextField.html",
    "title": "Class TextField",
    "keywords": "Class TextField Single-line text entry View Inheritance System.Object Responder View TextField DateField TimeField Implements System.IDisposable System.ComponentModel.ISupportInitializeNotification System.ComponentModel.ISupportInitialize Remarks The TextField View provides editing functionality and mouse support. Inherited Members View.Added View.Removed View.Enter View.Leave View.MouseEnter View.MouseLeave View.MouseClick View.CanFocusChanged View.EnabledChanged View.VisibleChanged View.HotKeyChanged View.HotKey View.HotKeySpecifier View.Shortcut View.ShortcutTag View.ShortcutAction View.Data View.Driver View.Subviews View.TabIndexes View.TabIndex View.TabStop View.Id View.IsCurrentTop View.WantMousePositionReports View.WantContinuousButtonPressed View.LayoutStyle View.Bounds View.X View.Y View.Width View.Height View.ForceValidatePosDim View.GetMinWidthHeight(Size) View.SetMinWidthHeight() View.TextFormatter View.SuperView View.UpdateTextFormatterText() View.ProcessResizeView() View.SetNeedsDisplay() View.ClearLayoutNeeded() View.SetNeedsDisplay(Rect) View.SetChildNeedsDisplay() View.Add(View) View.Add(View[]) View.RemoveAll() View.Remove(View) View.BringSubviewToFront(View) View.SendSubviewToBack(View) View.SendSubviewBackwards(View) View.BringSubviewForward(View) View.Clear() View.Clear(Rect) View.ScreenToView(Int32, Int32) View.ClipToBounds() View.SetClip(Rect) View.DrawFrame(Rect, Int32, Boolean) View.DrawHotString(ustring, Attribute, Attribute) View.DrawHotString(ustring, Boolean, ColorScheme) View.Move(Int32, Int32, Boolean) View.HasFocus View.OnAdded(View) View.OnRemoved(View) View.Focused View.MostFocused View.ColorScheme View.AddRune(Int32, Int32, Rune) View.ClearNeedsDisplay() View.DrawContent View.OnDrawContent(Rect) View.DrawContentComplete View.OnDrawContentComplete(Rect) View.SetFocus() View.KeyPress View.InvokeKeybindings(KeyEvent) View.AddKeyBinding(Key, Command[]) View.ReplaceKeyBinding(Key, Key) View.ContainsKeyBinding(Key) View.ClearKeybindings() View.ClearKeybinding(Key) View.ClearKeybinding(Command[]) View.AddCommand(Command, Func<Nullable<Boolean>>) View.GetSupportedCommands() View.GetKeyFromCommand(Command[]) View.ProcessHotKey(KeyEvent) View.ProcessColdKey(KeyEvent) View.KeyDown View.OnKeyDown(KeyEvent) View.KeyUp View.OnKeyUp(KeyEvent) View.EnsureFocus() View.FocusFirst() View.FocusLast() View.FocusPrev() View.FocusNext() View.LayoutStarted View.LayoutComplete View.Initialized View.LayoutSubviews() View.AutoSize View.PreserveTrailingSpaces View.TextAlignment View.VerticalTextAlignment View.TextDirection View.IsInitialized View.IsAdded View.Enabled View.Visible View.Border View.ToString() View.GetAutoSize() View.GetHotKeySpecifierLength(Boolean) View.GetTextFormatterBoundsSize() View.GetBoundsTextFormatterSize() View.OnMouseEnter(MouseEvent) View.OnMouseLeave(MouseEvent) View.OnMouseEvent(MouseEvent) View.OnMouseClick(View.MouseEventArgs) View.OnCanFocusChanged() View.OnEnabledChanged() View.OnVisibleChanged() View.Dispose(Boolean) View.BeginInit() View.EndInit() View.SetWidth(Int32, Int32) View.SetHeight(Int32, Int32) View.GetCurrentWidth(Int32) View.GetCurrentHeight(Int32) View.GetTopSuperView() Responder.Dispose() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Terminal.Gui Assembly : Terminal.Gui.dll Syntax public class TextField : View, IDisposable, ISupportInitializeNotification, ISupportInitialize Constructors | Improve this Doc View Source TextField() Initializes a new instance of the TextField class using Computed positioning. Declaration public TextField() | Improve this Doc View Source TextField(ustring) Initializes a new instance of the TextField class using Computed positioning. Declaration public TextField(ustring text) Parameters Type Name Description NStack.ustring text Initial text contents. | Improve this Doc View Source TextField(Int32, Int32, Int32, ustring) Initializes a new instance of the TextField class using Absolute positioning. Declaration public TextField(int x, int y, int w, ustring text) Parameters Type Name Description System.Int32 x The x coordinate. System.Int32 y The y coordinate. System.Int32 w The width. NStack.ustring text Initial text contents. | Improve this Doc View Source TextField(String) Initializes a new instance of the TextField class using Computed positioning. Declaration public TextField(string text) Parameters Type Name Description System.String text Initial text contents. Properties | Improve this Doc View Source Autocomplete Provides autocomplete context menu based on suggestions at the current cursor position. Populate AllSuggestions to enable this feature. Declaration public IAutocomplete Autocomplete { get; protected set; } Property Value Type Description IAutocomplete | Improve this Doc View Source CanFocus Declaration public override bool CanFocus { get; set; } Property Value Type Description System.Boolean Overrides View.CanFocus | Improve this Doc View Source ContextMenu Get the ContextMenu for this view. Declaration public ContextMenu ContextMenu { get; } Property Value Type Description ContextMenu | Improve this Doc View Source CursorPosition Sets or gets the current cursor position. Declaration public virtual int CursorPosition { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source DesiredCursorVisibility Get / Set the wished cursor when the field is focused Declaration public CursorVisibility DesiredCursorVisibility { get; set; } Property Value Type Description CursorVisibility | Improve this Doc View Source Frame Declaration public override Rect Frame { get; set; } Property Value Type Description Rect Overrides View.Frame | Improve this Doc View Source HasHistoryChanges Indicates whatever the text has history changes or not. true if the text has history changes false otherwise. Declaration public bool HasHistoryChanges { get; } Property Value Type Description System.Boolean | Improve this Doc View Source IsDirty Indicates whatever the text was changed or not. true if the text was changed false otherwise. Declaration public bool IsDirty { get; } Property Value Type Description System.Boolean | Improve this Doc View Source ReadOnly If set to true its not allow any changes in the text. Declaration public bool ReadOnly { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source ScrollOffset Gets the left offset position. Declaration public int ScrollOffset { get; } Property Value Type Description System.Int32 | Improve this Doc View Source Secret Sets the secret property. Declaration public bool Secret { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source SelectedLength Length of the selected text. Declaration public int SelectedLength { get; } Property Value Type Description System.Int32 | Improve this Doc View Source SelectedStart Start position of the selected text. Declaration public int SelectedStart { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source SelectedText The selected text. Declaration public ustring SelectedText { get; } Property Value Type Description NStack.ustring | Improve this Doc View Source Text Sets or gets the text held by the view. Declaration public ustring Text { get; set; } Property Value Type Description NStack.ustring | Improve this Doc View Source Used Tracks whether the text field should be considered \"used\", that is, that the user has moved in the entry, so new input should be appended at the cursor position, rather than clearing the entry Declaration public bool Used { get; set; } Property Value Type Description System.Boolean Methods | Improve this Doc View Source ClearAllSelection() Clear the selected text. Declaration public void ClearAllSelection() | Improve this Doc View Source ClearHistoryChanges() Allows clearing the Terminal.Gui.HistoryText.HistoryTextItem items updating the original text. Declaration public void ClearHistoryChanges() | Improve this Doc View Source Copy() Copy the selected text to the clipboard. Declaration public virtual void Copy() | Improve this Doc View Source Cut() Cut the selected text to the clipboard. Declaration public virtual void Cut() | Improve this Doc View Source DeleteAll() Deletes all text. Declaration public void DeleteAll() | Improve this Doc View Source DeleteCharLeft(Boolean) Deletes the left character. Declaration public virtual void DeleteCharLeft(bool useOldCursorPos = true) Parameters Type Name Description System.Boolean useOldCursorPos | Improve this Doc View Source DeleteCharRight() Deletes the right character. Declaration public virtual void DeleteCharRight() | Improve this Doc View Source GetNormalColor() Declaration public override Attribute GetNormalColor() Returns Type Description Attribute Overrides View.GetNormalColor() | Improve this Doc View Source InsertText(String, Boolean) Inserts the given toAdd text at the current cursor position exactly as if the user had just typed it Declaration public void InsertText(string toAdd, bool useOldCursorPos = true) Parameters Type Name Description System.String toAdd Text to add System.Boolean useOldCursorPos If uses the Terminal.Gui.TextField.oldCursorPos . | Improve this Doc View Source KillWordBackwards() Deletes word backwards. Declaration public virtual void KillWordBackwards() | Improve this Doc View Source KillWordForwards() Deletes word forwards. Declaration public virtual void KillWordForwards() | Improve this Doc View Source MouseEvent(MouseEvent) Declaration public override bool MouseEvent(MouseEvent ev) Parameters Type Name Description MouseEvent ev Returns Type Description System.Boolean Overrides Responder.MouseEvent(MouseEvent) | Improve this Doc View Source OnEnter(View) Declaration public override bool OnEnter(View view) Parameters Type Name Description View view Returns Type Description System.Boolean Overrides View.OnEnter(View) | Improve this Doc View Source OnLeave(View) Declaration public override bool OnLeave(View view) Parameters Type Name Description View view Returns Type Description System.Boolean Overrides View.OnLeave(View) | Improve this Doc View Source OnTextChanging(ustring) Virtual method that invoke the TextChanging event if it's defined. Declaration public virtual TextChangingEventArgs OnTextChanging(ustring newText) Parameters Type Name Description NStack.ustring newText The new text to be replaced. Returns Type Description TextChangingEventArgs Returns the TextChangingEventArgs | Improve this Doc View Source Paste() Paste the selected text from the clipboard. Declaration public virtual void Paste() | Improve this Doc View Source PositionCursor() Sets the cursor position. Declaration public override void PositionCursor() Overrides View.PositionCursor() | Improve this Doc View Source ProcessKey(KeyEvent) Processes key presses for the TextField . Declaration public override bool ProcessKey(KeyEvent kb) Parameters Type Name Description KeyEvent kb Returns Type Description System.Boolean Overrides View.ProcessKey(KeyEvent) | Improve this Doc View Source Redraw(Rect) Declaration public override void Redraw(Rect bounds) Parameters Type Name Description Rect bounds Overrides View.Redraw(Rect) | Improve this Doc View Source SelectAll() Selects all text. Declaration public void SelectAll() Events | Improve this Doc View Source TextChanged Changed event, raised when the text has changed. Declaration public event Action<ustring> TextChanged Event Type Type Description System.Action < NStack.ustring > | Improve this Doc View Source TextChanging Changing event, raised before the Text changes and can be canceled or changing the new text. Declaration public event Action<TextChangingEventArgs> TextChanging Event Type Type Description System.Action < TextChangingEventArgs > Implements System.IDisposable System.ComponentModel.ISupportInitializeNotification System.ComponentModel.ISupportInitialize"
  },
  "api/Terminal.Gui/Terminal.Gui.TextFieldAutocomplete.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.TextFieldAutocomplete.html",
    "title": "Class TextFieldAutocomplete",
    "keywords": "Class TextFieldAutocomplete Renders an overlay on another view at a given point that allows selecting from a range of 'autocomplete' options. An implementation on a TextField. Inheritance System.Object Autocomplete TextFieldAutocomplete Implements IAutocomplete Inherited Members Autocomplete.HostControl Autocomplete.PopupInsideContainer Autocomplete.MaxWidth Autocomplete.MaxHeight Autocomplete.Visible Autocomplete.Suggestions Autocomplete.AllSuggestions Autocomplete.SelectedIdx Autocomplete.ScrollOffset Autocomplete.ColorScheme Autocomplete.SelectionKey Autocomplete.CloseKey Autocomplete.Reopen Autocomplete.RenderOverlay(Point) Autocomplete.EnsureSelectedIdxIsValid() Autocomplete.ProcessKey(KeyEvent) Autocomplete.MouseEvent(MouseEvent, Boolean) Autocomplete.RenderSelectedIdxByMouse(MouseEvent) Autocomplete.ClearSuggestions() Autocomplete.GenerateSuggestions() Autocomplete.IsWordChar(Rune) Autocomplete.Select() Autocomplete.InsertSelection(String) Autocomplete.IdxToWord(List<Rune>, Int32) Autocomplete.Close() Autocomplete.MoveUp() Autocomplete.MoveDown() Autocomplete.ReopenSuggestions() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Terminal.Gui Assembly : Terminal.Gui.dll Syntax public class TextFieldAutocomplete : Autocomplete, IAutocomplete Methods | Improve this Doc View Source DeleteTextBackwards() Declaration protected override void DeleteTextBackwards() Overrides Autocomplete.DeleteTextBackwards() | Improve this Doc View Source GetCurrentWord() Declaration protected override string GetCurrentWord() Returns Type Description System.String Overrides Autocomplete.GetCurrentWord() | Improve this Doc View Source InsertText(String) Declaration protected override void InsertText(string accepted) Parameters Type Name Description System.String accepted Overrides Autocomplete.InsertText(String) Implements IAutocomplete"
  },
  "api/Terminal.Gui/Terminal.Gui.TextFormatter.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.TextFormatter.html",
    "title": "Class TextFormatter",
    "keywords": "Class TextFormatter Provides text formatting capabilities for console apps. Supports, hotkeys, horizontal alignment, multiple lines, and word-based line wrap. Inheritance System.Object TextFormatter Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Terminal.Gui Assembly : Terminal.Gui.dll Syntax public class TextFormatter Properties | Improve this Doc View Source Alignment Controls the horizontal text-alignment property. Declaration public TextAlignment Alignment { get; set; } Property Value Type Description TextAlignment The text alignment. | Improve this Doc View Source AutoSize Used by Text to resize the view's Bounds with the Size . Setting AutoSize to true only work if the Width and Height are null or Absolute values and doesn't work with Computed layout, to avoid breaking the Pos and Dim settings. Declaration public bool AutoSize { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source CursorPosition Gets the cursor position from HotKey . If the HotKey is defined, the cursor will be positioned over it. Declaration public int CursorPosition { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source Direction Controls the text-direction property. Declaration public TextDirection Direction { get; set; } Property Value Type Description TextDirection The text vertical alignment. | Improve this Doc View Source HotKey Gets the hotkey. Will be an upper case letter or digit. Declaration public Key HotKey { get; } Property Value Type Description Key | Improve this Doc View Source HotKeyPos The position in the text of the hotkey. The hotkey will be rendered using the hot color. Declaration public int HotKeyPos { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source HotKeySpecifier The specifier character for the hotkey (e.g. '_'). Set to '\\xffff' to disable hotkey support for this View instance. The default is '\\xffff'. Declaration public Rune HotKeySpecifier { get; set; } Property Value Type Description System.Rune | Improve this Doc View Source HotKeyTagMask Specifies the mask to apply to the hotkey to tag it as the hotkey. The default value of 0x100000 causes the underlying Rune to be identified as a \"private use\" Unicode character. Declaration public uint HotKeyTagMask { get; set; } Property Value Type Description System.UInt32 | Improve this Doc View Source Lines Gets the formatted lines. Declaration public List<ustring> Lines { get; } Property Value Type Description System.Collections.Generic.List < NStack.ustring > | Improve this Doc View Source NeedsFormat Gets or sets whether the TextFormatter needs to format the text when Draw(Rect, Attribute, Attribute, Rect, Boolean) is called. If it is false when Draw is called, the Draw call will be faster. Declaration public bool NeedsFormat { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source PreserveTrailingSpaces Gets or sets a flag that determines whether Text will have trailing spaces preserved or not when WordWrap(ustring, Int32, Boolean, Int32, TextDirection) is enabled. If `true` any trailing spaces will be trimmed when either the Text property is changed or when WordWrap(ustring, Int32, Boolean, Int32, TextDirection) is set to `true`. The default is `false`. Declaration public bool PreserveTrailingSpaces { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source Size Gets or sets the size of the area the text will be constrained to when formatted. Declaration public Size Size { get; set; } Property Value Type Description Size | Improve this Doc View Source Text The text to be displayed. This text is never modified. Declaration public virtual ustring Text { get; set; } Property Value Type Description NStack.ustring | Improve this Doc View Source VerticalAlignment Controls the vertical text-alignment property. Declaration public VerticalTextAlignment VerticalAlignment { get; set; } Property Value Type Description VerticalTextAlignment The text vertical alignment. Methods | Improve this Doc View Source CalcRect(Int32, Int32, ustring, TextDirection) Calculates the rectangle required to hold text, assuming no word wrapping. Declaration public static Rect CalcRect(int x, int y, ustring text, TextDirection direction = TextDirection.LeftRight_TopBottom) Parameters Type Name Description System.Int32 x The x location of the rectangle System.Int32 y The y location of the rectangle NStack.ustring text The text to measure TextDirection direction The text direction. Returns Type Description Rect | Improve this Doc View Source ClipAndJustify(ustring, Int32, Boolean, TextDirection) Justifies text within a specified width. Declaration public static ustring ClipAndJustify(ustring text, int width, bool justify, TextDirection textDirection = TextDirection.LeftRight_TopBottom) Parameters Type Name Description NStack.ustring text The text to justify. System.Int32 width If the text length is greater that width it will be clipped. System.Boolean justify Justify. TextDirection textDirection The text direction. Returns Type Description NStack.ustring Justified and clipped text. | Improve this Doc View Source ClipAndJustify(ustring, Int32, TextAlignment, TextDirection) Justifies text within a specified width. Declaration public static ustring ClipAndJustify(ustring text, int width, TextAlignment talign, TextDirection textDirection = TextDirection.LeftRight_TopBottom) Parameters Type Name Description NStack.ustring text The text to justify. System.Int32 width If the text length is greater that width it will be clipped. TextAlignment talign Alignment. TextDirection textDirection The text direction. Returns Type Description NStack.ustring Justified and clipped text. | Improve this Doc View Source ClipOrPad(String, Int32) Adds trailing whitespace or truncates text so that it fits exactly width console units. Note that some unicode characters take 2+ columns Declaration public static string ClipOrPad(string text, int width) Parameters Type Name Description System.String text System.Int32 width Returns Type Description System.String | Improve this Doc View Source Draw(Rect, Attribute, Attribute, Rect, Boolean) Draws the text held by TextFormatter to Driver using the colors specified. Declaration public void Draw(Rect bounds, Attribute normalColor, Attribute hotColor, Rect containerBounds = default(Rect), bool fillRemaining = true) Parameters Type Name Description Rect bounds Specifies the screen-relative location and maximum size for drawing the text. Attribute normalColor The color to use for all text except the hotkey Attribute hotColor The color to use to draw the hotkey Rect containerBounds Specifies the screen-relative location and maximum container size. System.Boolean fillRemaining Determines if the bounds width will be used (default) or only the text width will be used. | Improve this Doc View Source FindHotKey(ustring, Rune, Boolean, out Int32, out Key) Finds the hotkey and its location in text. Declaration public static bool FindHotKey(ustring text, Rune hotKeySpecifier, bool firstUpperCase, out int hotPos, out Key hotKey) Parameters Type Name Description NStack.ustring text The text to look in. System.Rune hotKeySpecifier The hotkey specifier (e.g. '_') to look for. System.Boolean firstUpperCase If true the legacy behavior of identifying the first upper case character as the hotkey will be enabled. Regardless of the value of this parameter, hotKeySpecifier takes precedence. System.Int32 hotPos Outputs the Rune index into text . Key hotKey Outputs the hotKey. Returns Type Description System.Boolean true if a hotkey was found; false otherwise. | Improve this Doc View Source Format(ustring, Int32, Boolean, Boolean, Boolean, Int32, TextDirection) Reformats text into lines, applying text alignment and optionally wrapping text to new lines on word boundaries. Declaration public static List<ustring> Format(ustring text, int width, bool justify, bool wordWrap, bool preserveTrailingSpaces = false, int tabWidth = 0, TextDirection textDirection = TextDirection.LeftRight_TopBottom) Parameters Type Name Description NStack.ustring text System.Int32 width The width to bound the text to for word wrapping and clipping. System.Boolean justify Specifies whether the text should be justified. System.Boolean wordWrap If true , the text will be wrapped to new lines as need. If false , forces text to fit a single line. Line breaks are converted to spaces. The text will be clipped to width System.Boolean preserveTrailingSpaces If true and 'wordWrap' also true, the wrapped text will keep the trailing spaces. If false , the trailing spaces will be trimmed. System.Int32 tabWidth The tab width. TextDirection textDirection The text direction. Returns Type Description System.Collections.Generic.List < NStack.ustring > A list of word wrapped lines. | Improve this Doc View Source Format(ustring, Int32, TextAlignment, Boolean, Boolean, Int32, TextDirection) Reformats text into lines, applying text alignment and optionally wrapping text to new lines on word boundaries. Declaration public static List<ustring> Format(ustring text, int width, TextAlignment talign, bool wordWrap, bool preserveTrailingSpaces = false, int tabWidth = 0, TextDirection textDirection = TextDirection.LeftRight_TopBottom) Parameters Type Name Description NStack.ustring text System.Int32 width The width to bound the text to for word wrapping and clipping. TextAlignment talign Specifies how the text will be aligned horizontally. System.Boolean wordWrap If true , the text will be wrapped to new lines as need. If false , forces text to fit a single line. Line breaks are converted to spaces. The text will be clipped to width System.Boolean preserveTrailingSpaces If true and 'wordWrap' also true, the wrapped text will keep the trailing spaces. If false , the trailing spaces will be trimmed. System.Int32 tabWidth The tab width. TextDirection textDirection The text direction. Returns Type Description System.Collections.Generic.List < NStack.ustring > A list of word wrapped lines. | Improve this Doc View Source GetMaxColsForWidth(List<ustring>, Int32) Gets the index position from the list based on the width . Declaration public static int GetMaxColsForWidth(List<ustring> lines, int width) Parameters Type Name Description System.Collections.Generic.List < NStack.ustring > lines The lines. System.Int32 width The width. Returns Type Description System.Int32 The index of the list that fit the width. | Improve this Doc View Source GetMaxLengthForWidth(ustring, Int32) Gets the index position from the text based on the width . Declaration public static int GetMaxLengthForWidth(ustring text, int width) Parameters Type Name Description NStack.ustring text The text. System.Int32 width The width. Returns Type Description System.Int32 The index of the text that fit the width. | Improve this Doc View Source GetMaxLengthForWidth(List<Rune>, Int32) Gets the index position from the list based on the width . Declaration public static int GetMaxLengthForWidth(List<Rune> runes, int width) Parameters Type Name Description System.Collections.Generic.List < System.Rune > runes The runes. System.Int32 width The width. Returns Type Description System.Int32 The index of the list that fit the width. | Improve this Doc View Source GetSumMaxCharWidth(ustring, Int32, Int32) Gets the maximum characters width from the text based on the startIndex and the length . Declaration public static int GetSumMaxCharWidth(ustring text, int startIndex = -1, int length = -1) Parameters Type Name Description NStack.ustring text The text. System.Int32 startIndex The start index. System.Int32 length The length. Returns Type Description System.Int32 The maximum characters width. | Improve this Doc View Source GetSumMaxCharWidth(List<ustring>, Int32, Int32) Gets the maximum characters width from the list based on the startIndex and the length . Declaration public static int GetSumMaxCharWidth(List<ustring> lines, int startIndex = -1, int length = -1) Parameters Type Name Description System.Collections.Generic.List < NStack.ustring > lines The lines. System.Int32 startIndex The start index. System.Int32 length The length. Returns Type Description System.Int32 The maximum characters width. | Improve this Doc View Source GetTextWidth(ustring) Gets the total width of the passed text. Declaration public static int GetTextWidth(ustring text) Parameters Type Name Description NStack.ustring text Returns Type Description System.Int32 The text width. | Improve this Doc View Source IsHorizontalDirection(TextDirection) Check if it is a horizontal direction Declaration public static bool IsHorizontalDirection(TextDirection textDirection) Parameters Type Name Description TextDirection textDirection Returns Type Description System.Boolean | Improve this Doc View Source IsLeftToRight(TextDirection) Check if it is Left to Right direction Declaration public static bool IsLeftToRight(TextDirection textDirection) Parameters Type Name Description TextDirection textDirection Returns Type Description System.Boolean | Improve this Doc View Source IsTopToBottom(TextDirection) Check if it is Top to Bottom direction Declaration public static bool IsTopToBottom(TextDirection textDirection) Parameters Type Name Description TextDirection textDirection Returns Type Description System.Boolean | Improve this Doc View Source IsVerticalDirection(TextDirection) Check if it is a vertical direction Declaration public static bool IsVerticalDirection(TextDirection textDirection) Parameters Type Name Description TextDirection textDirection Returns Type Description System.Boolean | Improve this Doc View Source Justify(ustring, Int32, Char, TextDirection) Justifies the text to fill the width provided. Space will be added between words (demarked by spaces and tabs) to make the text just fit width . Spaces will not be added to the ends. Declaration public static ustring Justify(ustring text, int width, char spaceChar = ' ', TextDirection textDirection = TextDirection.LeftRight_TopBottom) Parameters Type Name Description NStack.ustring text System.Int32 width System.Char spaceChar Character to replace whitespace and pad with. For debugging purposes. TextDirection textDirection The text direction. Returns Type Description NStack.ustring The justified text. | Improve this Doc View Source MaxLines(ustring, Int32) Computes the number of lines needed to render the specified text given the width. Declaration public static int MaxLines(ustring text, int width) Parameters Type Name Description NStack.ustring text Text, may contain newlines. System.Int32 width The minimum width for the text. Returns Type Description System.Int32 Number of lines. | Improve this Doc View Source MaxWidth(ustring, Int32) Computes the maximum width needed to render the text (single line or multiple lines) given a minimum width. Declaration public static int MaxWidth(ustring text, int width) Parameters Type Name Description NStack.ustring text Text, may contain newlines. System.Int32 width The minimum width for the text. Returns Type Description System.Int32 Max width of lines. | Improve this Doc View Source MaxWidthLine(ustring) Determines the line with the highest width in the text if it contains newlines. Declaration public static int MaxWidthLine(ustring text) Parameters Type Name Description NStack.ustring text Text, may contain newlines. Returns Type Description System.Int32 The highest line width. | Improve this Doc View Source RemoveHotKeySpecifier(ustring, Int32, Rune) Removes the hotkey specifier from text. Declaration public static ustring RemoveHotKeySpecifier(ustring text, int hotPos, Rune hotKeySpecifier) Parameters Type Name Description NStack.ustring text The text to manipulate. System.Int32 hotPos Returns the position of the hot-key in the text. -1 if not found. System.Rune hotKeySpecifier The hot-key specifier (e.g. '_') to look for. Returns Type Description NStack.ustring The input text with the hotkey specifier ('_') removed. | Improve this Doc View Source ReplaceHotKeyWithTag(ustring, Int32) Replaces the Rune at the index specified by the hotPos parameter with a tag identifying it as the hotkey. Declaration public ustring ReplaceHotKeyWithTag(ustring text, int hotPos) Parameters Type Name Description NStack.ustring text The text to tag the hotkey in. System.Int32 hotPos The Rune index of the hotkey in text . Returns Type Description NStack.ustring The text with the hotkey tagged. | Improve this Doc View Source SplitNewLine(ustring) Splits all newlines in the text into a list and supports both CRLF and LF, preserving the ending newline. Declaration public static List<ustring> SplitNewLine(ustring text) Parameters Type Name Description NStack.ustring text The text. Returns Type Description System.Collections.Generic.List < NStack.ustring > A list of text without the newline characters. | Improve this Doc View Source WordWrap(ustring, Int32, Boolean, Int32, TextDirection) Formats the provided text to fit within the width provided using word wrapping. Declaration public static List<ustring> WordWrap(ustring text, int width, bool preserveTrailingSpaces = false, int tabWidth = 0, TextDirection textDirection = TextDirection.LeftRight_TopBottom) Parameters Type Name Description NStack.ustring text The text to word wrap System.Int32 width The width to contain the text to System.Boolean preserveTrailingSpaces If true , the wrapped text will keep the trailing spaces. If false , the trailing spaces will be trimmed. System.Int32 tabWidth The tab width. TextDirection textDirection The text direction. Returns Type Description System.Collections.Generic.List < NStack.ustring > Returns a list of word wrapped lines. Events | Improve this Doc View Source HotKeyChanged Event invoked when the HotKey is changed. Declaration public event Action<Key> HotKeyChanged Event Type Type Description System.Action < Key >"
  },
  "api/Terminal.Gui/Terminal.Gui.TextValidateField.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.TextValidateField.html",
    "title": "Class TextValidateField",
    "keywords": "Class TextValidateField Text field that validates input through a ITextValidateProvider Inheritance System.Object Responder View TextValidateField Implements System.IDisposable System.ComponentModel.ISupportInitializeNotification System.ComponentModel.ISupportInitialize Inherited Members View.Added View.Removed View.Enter View.Leave View.MouseEnter View.MouseLeave View.MouseClick View.CanFocusChanged View.EnabledChanged View.VisibleChanged View.HotKeyChanged View.HotKey View.HotKeySpecifier View.Shortcut View.ShortcutTag View.ShortcutAction View.Data View.Driver View.Subviews View.TabIndexes View.TabIndex View.TabStop View.CanFocus View.Id View.IsCurrentTop View.WantMousePositionReports View.WantContinuousButtonPressed View.Frame View.LayoutStyle View.Bounds View.X View.Y View.Width View.Height View.ForceValidatePosDim View.GetMinWidthHeight(Size) View.SetMinWidthHeight() View.TextFormatter View.SuperView View.UpdateTextFormatterText() View.ProcessResizeView() View.SetNeedsDisplay() View.ClearLayoutNeeded() View.SetNeedsDisplay(Rect) View.SetChildNeedsDisplay() View.Add(View) View.Add(View[]) View.RemoveAll() View.Remove(View) View.BringSubviewToFront(View) View.SendSubviewToBack(View) View.SendSubviewBackwards(View) View.BringSubviewForward(View) View.Clear() View.Clear(Rect) View.ScreenToView(Int32, Int32) View.ClipToBounds() View.SetClip(Rect) View.DrawFrame(Rect, Int32, Boolean) View.DrawHotString(ustring, Attribute, Attribute) View.DrawHotString(ustring, Boolean, ColorScheme) View.Move(Int32, Int32, Boolean) View.HasFocus View.OnAdded(View) View.OnRemoved(View) View.OnEnter(View) View.OnLeave(View) View.Focused View.MostFocused View.ColorScheme View.AddRune(Int32, Int32, Rune) View.ClearNeedsDisplay() View.DrawContent View.OnDrawContent(Rect) View.DrawContentComplete View.OnDrawContentComplete(Rect) View.SetFocus() View.KeyPress View.InvokeKeybindings(KeyEvent) View.AddKeyBinding(Key, Command[]) View.ReplaceKeyBinding(Key, Key) View.ContainsKeyBinding(Key) View.ClearKeybindings() View.ClearKeybinding(Key) View.ClearKeybinding(Command[]) View.AddCommand(Command, Func<Nullable<Boolean>>) View.GetSupportedCommands() View.GetKeyFromCommand(Command[]) View.ProcessHotKey(KeyEvent) View.ProcessColdKey(KeyEvent) View.KeyDown View.OnKeyDown(KeyEvent) View.KeyUp View.OnKeyUp(KeyEvent) View.EnsureFocus() View.FocusFirst() View.FocusLast() View.FocusPrev() View.FocusNext() View.LayoutStarted View.LayoutComplete View.Initialized View.LayoutSubviews() View.AutoSize View.PreserveTrailingSpaces View.TextAlignment View.VerticalTextAlignment View.TextDirection View.IsInitialized View.IsAdded View.Enabled View.Visible View.Border View.ToString() View.GetAutoSize() View.GetHotKeySpecifierLength(Boolean) View.GetTextFormatterBoundsSize() View.GetBoundsTextFormatterSize() View.OnMouseEnter(MouseEvent) View.OnMouseLeave(MouseEvent) View.OnMouseEvent(MouseEvent) View.OnMouseClick(View.MouseEventArgs) View.OnCanFocusChanged() View.OnEnabledChanged() View.OnVisibleChanged() View.Dispose(Boolean) View.BeginInit() View.EndInit() View.SetWidth(Int32, Int32) View.SetHeight(Int32, Int32) View.GetCurrentWidth(Int32) View.GetCurrentHeight(Int32) View.GetNormalColor() View.GetTopSuperView() Responder.Dispose() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Terminal.Gui Assembly : Terminal.Gui.dll Syntax public class TextValidateField : View, IDisposable, ISupportInitializeNotification, ISupportInitialize Constructors | Improve this Doc View Source TextValidateField() Initializes a new instance of the TextValidateField class using Computed positioning. Declaration public TextValidateField() | Improve this Doc View Source TextValidateField(ITextValidateProvider) Initializes a new instance of the TextValidateField class using Computed positioning. Declaration public TextValidateField(ITextValidateProvider provider) Parameters Type Name Description ITextValidateProvider provider Properties | Improve this Doc View Source IsValid This property returns true if the input is valid. Declaration public virtual bool IsValid { get; } Property Value Type Description System.Boolean | Improve this Doc View Source Provider Provider Declaration public ITextValidateProvider Provider { get; set; } Property Value Type Description ITextValidateProvider | Improve this Doc View Source Text Text Declaration public ustring Text { get; set; } Property Value Type Description NStack.ustring Methods | Improve this Doc View Source MouseEvent(MouseEvent) Declaration public override bool MouseEvent(MouseEvent mouseEvent) Parameters Type Name Description MouseEvent mouseEvent Returns Type Description System.Boolean Overrides Responder.MouseEvent(MouseEvent) | Improve this Doc View Source PositionCursor() Declaration public override void PositionCursor() Overrides View.PositionCursor() | Improve this Doc View Source ProcessKey(KeyEvent) Declaration public override bool ProcessKey(KeyEvent kb) Parameters Type Name Description KeyEvent kb Returns Type Description System.Boolean Overrides View.ProcessKey(KeyEvent) | Improve this Doc View Source Redraw(Rect) Declaration public override void Redraw(Rect bounds) Parameters Type Name Description Rect bounds Overrides View.Redraw(Rect) Implements System.IDisposable System.ComponentModel.ISupportInitializeNotification System.ComponentModel.ISupportInitialize"
  },
  "api/Terminal.Gui/Terminal.Gui.TextValidateProviders.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.TextValidateProviders.html",
    "title": "Namespace Terminal.Gui.TextValidateProviders",
    "keywords": "Namespace Terminal.Gui.TextValidateProviders Classes NetMaskedTextProvider .Net MaskedTextProvider Provider for TextValidateField. Wrapper around MaskedTextProvider Masking elements TextRegexProvider Regex Provider for TextValidateField. Interfaces ITextValidateProvider TextValidateField Providers Interface. All TextValidateField are created with a ITextValidateProvider."
  },
  "api/Terminal.Gui/Terminal.Gui.TextValidateProviders.ITextValidateProvider.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.TextValidateProviders.ITextValidateProvider.html",
    "title": "Interface ITextValidateProvider",
    "keywords": "Interface ITextValidateProvider TextValidateField Providers Interface. All TextValidateField are created with a ITextValidateProvider. Namespace : Terminal.Gui.TextValidateProviders Assembly : Terminal.Gui.dll Syntax public interface ITextValidateProvider Properties | Improve this Doc View Source DisplayText Gets the formatted string for display. Declaration ustring DisplayText { get; } Property Value Type Description NStack.ustring | Improve this Doc View Source Fixed Set that this provider uses a fixed width. e.g. Masked ones are fixed. Declaration bool Fixed { get; } Property Value Type Description System.Boolean | Improve this Doc View Source IsValid True if the input is valid, otherwise false. Declaration bool IsValid { get; } Property Value Type Description System.Boolean | Improve this Doc View Source Text Set the input text and get the current value. Declaration ustring Text { get; set; } Property Value Type Description NStack.ustring Methods | Improve this Doc View Source Cursor(Int32) Set Cursor position to pos . Declaration int Cursor(int pos) Parameters Type Name Description System.Int32 pos Returns Type Description System.Int32 Return first valid position. | Improve this Doc View Source CursorEnd() Find the last valid character position. Declaration int CursorEnd() Returns Type Description System.Int32 New cursor position. | Improve this Doc View Source CursorLeft(Int32) First valid position before pos . Declaration int CursorLeft(int pos) Parameters Type Name Description System.Int32 pos Returns Type Description System.Int32 New cursor position if any, otherwise returns pos | Improve this Doc View Source CursorRight(Int32) First valid position after pos . Declaration int CursorRight(int pos) Parameters Type Name Description System.Int32 pos Current position. Returns Type Description System.Int32 New cursor position if any, otherwise returns pos | Improve this Doc View Source CursorStart() Find the first valid character position. Declaration int CursorStart() Returns Type Description System.Int32 New cursor position. | Improve this Doc View Source Delete(Int32) Deletes the current character in pos . Declaration bool Delete(int pos) Parameters Type Name Description System.Int32 pos Returns Type Description System.Boolean true if the character was successfully removed, otherwise false. | Improve this Doc View Source InsertAt(Char, Int32) Insert character ch in position pos . Declaration bool InsertAt(char ch, int pos) Parameters Type Name Description System.Char ch System.Int32 pos Returns Type Description System.Boolean true if the character was successfully inserted, otherwise false."
  },
  "api/Terminal.Gui/Terminal.Gui.TextValidateProviders.NetMaskedTextProvider.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.TextValidateProviders.NetMaskedTextProvider.html",
    "title": "Class NetMaskedTextProvider",
    "keywords": "Class NetMaskedTextProvider .Net MaskedTextProvider Provider for TextValidateField. Wrapper around MaskedTextProvider Masking elements Inheritance System.Object NetMaskedTextProvider Implements ITextValidateProvider Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Terminal.Gui.TextValidateProviders Assembly : Terminal.Gui.dll Syntax public class NetMaskedTextProvider : ITextValidateProvider Constructors | Improve this Doc View Source NetMaskedTextProvider(String) Empty Constructor Declaration public NetMaskedTextProvider(string mask) Parameters Type Name Description System.String mask Properties | Improve this Doc View Source DisplayText Declaration public ustring DisplayText { get; } Property Value Type Description NStack.ustring | Improve this Doc View Source Fixed Declaration public bool Fixed { get; } Property Value Type Description System.Boolean | Improve this Doc View Source IsValid Declaration public bool IsValid { get; } Property Value Type Description System.Boolean | Improve this Doc View Source Mask Mask property Declaration public ustring Mask { get; set; } Property Value Type Description NStack.ustring | Improve this Doc View Source Text Declaration public ustring Text { get; set; } Property Value Type Description NStack.ustring Methods | Improve this Doc View Source Cursor(Int32) Declaration public int Cursor(int pos) Parameters Type Name Description System.Int32 pos Returns Type Description System.Int32 | Improve this Doc View Source CursorEnd() Declaration public int CursorEnd() Returns Type Description System.Int32 | Improve this Doc View Source CursorLeft(Int32) Declaration public int CursorLeft(int pos) Parameters Type Name Description System.Int32 pos Returns Type Description System.Int32 | Improve this Doc View Source CursorRight(Int32) Declaration public int CursorRight(int pos) Parameters Type Name Description System.Int32 pos Returns Type Description System.Int32 | Improve this Doc View Source CursorStart() Declaration public int CursorStart() Returns Type Description System.Int32 | Improve this Doc View Source Delete(Int32) Declaration public bool Delete(int pos) Parameters Type Name Description System.Int32 pos Returns Type Description System.Boolean | Improve this Doc View Source InsertAt(Char, Int32) Declaration public bool InsertAt(char ch, int pos) Parameters Type Name Description System.Char ch System.Int32 pos Returns Type Description System.Boolean Implements ITextValidateProvider"
  },
  "api/Terminal.Gui/Terminal.Gui.TextValidateProviders.TextRegexProvider.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.TextValidateProviders.TextRegexProvider.html",
    "title": "Class TextRegexProvider",
    "keywords": "Class TextRegexProvider Regex Provider for TextValidateField. Inheritance System.Object TextRegexProvider Implements ITextValidateProvider Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Terminal.Gui.TextValidateProviders Assembly : Terminal.Gui.dll Syntax public class TextRegexProvider : ITextValidateProvider Constructors | Improve this Doc View Source TextRegexProvider(String) Empty Constructor. Declaration public TextRegexProvider(string pattern) Parameters Type Name Description System.String pattern Properties | Improve this Doc View Source DisplayText Declaration public ustring DisplayText { get; } Property Value Type Description NStack.ustring | Improve this Doc View Source Fixed Declaration public bool Fixed { get; } Property Value Type Description System.Boolean | Improve this Doc View Source IsValid Declaration public bool IsValid { get; } Property Value Type Description System.Boolean | Improve this Doc View Source Pattern Regex pattern property. Declaration public ustring Pattern { get; set; } Property Value Type Description NStack.ustring | Improve this Doc View Source Text Declaration public ustring Text { get; set; } Property Value Type Description NStack.ustring | Improve this Doc View Source ValidateOnInput When true, validates with the regex pattern on each input, preventing the input if it's not valid. Declaration public bool ValidateOnInput { get; set; } Property Value Type Description System.Boolean Methods | Improve this Doc View Source Cursor(Int32) Declaration public int Cursor(int pos) Parameters Type Name Description System.Int32 pos Returns Type Description System.Int32 | Improve this Doc View Source CursorEnd() Declaration public int CursorEnd() Returns Type Description System.Int32 | Improve this Doc View Source CursorLeft(Int32) Declaration public int CursorLeft(int pos) Parameters Type Name Description System.Int32 pos Returns Type Description System.Int32 | Improve this Doc View Source CursorRight(Int32) Declaration public int CursorRight(int pos) Parameters Type Name Description System.Int32 pos Returns Type Description System.Int32 | Improve this Doc View Source CursorStart() Declaration public int CursorStart() Returns Type Description System.Int32 | Improve this Doc View Source Delete(Int32) Declaration public bool Delete(int pos) Parameters Type Name Description System.Int32 pos Returns Type Description System.Boolean | Improve this Doc View Source InsertAt(Char, Int32) Declaration public bool InsertAt(char ch, int pos) Parameters Type Name Description System.Char ch System.Int32 pos Returns Type Description System.Boolean Implements ITextValidateProvider"
  },
  "api/Terminal.Gui/Terminal.Gui.TextView.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.TextView.html",
    "title": "Class TextView",
    "keywords": "Class TextView Multi-line text editing View Inheritance System.Object Responder View TextView Implements System.IDisposable System.ComponentModel.ISupportInitializeNotification System.ComponentModel.ISupportInitialize Remarks TextView provides a multi-line text editor. Users interact with it with the standard Emacs commands for movement or the arrow keys. Shortcut Action performed Left cursor, Control-b Moves the editing point left. Right cursor, Control-f Moves the editing point right. Alt-b Moves one word back. Alt-f Moves one word forward. Up cursor, Control-p Moves the editing point one line up. Down cursor, Control-n Moves the editing point one line down Home key, Control-a Moves the cursor to the beginning of the line. End key, Control-e Moves the cursor to the end of the line. Control-Home Scrolls to the first line and moves the cursor there. Control-End Scrolls to the last line and moves the cursor there. Delete, Control-d Deletes the character in front of the cursor. Backspace Deletes the character behind the cursor. Control-k Deletes the text until the end of the line and replaces the kill buffer with the deleted text. You can paste this text in a different place by using Control-y. Control-y Pastes the content of the kill ring into the current position. Alt-d Deletes the word above the cursor and adds it to the kill ring. You can paste the contents of the kill ring with Control-y. Control-q Quotes the next input character, to prevent the normal processing of key handling to take place. Inherited Members View.Added View.Removed View.Enter View.Leave View.MouseEnter View.MouseLeave View.MouseClick View.CanFocusChanged View.EnabledChanged View.VisibleChanged View.HotKeyChanged View.HotKey View.HotKeySpecifier View.Shortcut View.ShortcutTag View.ShortcutAction View.Data View.Driver View.Subviews View.TabIndexes View.TabIndex View.TabStop View.Id View.IsCurrentTop View.WantMousePositionReports View.WantContinuousButtonPressed View.LayoutStyle View.Bounds View.X View.Y View.Width View.Height View.ForceValidatePosDim View.GetMinWidthHeight(Size) View.SetMinWidthHeight() View.TextFormatter View.SuperView View.UpdateTextFormatterText() View.ProcessResizeView() View.SetNeedsDisplay() View.ClearLayoutNeeded() View.SetNeedsDisplay(Rect) View.SetChildNeedsDisplay() View.Add(View) View.Add(View[]) View.RemoveAll() View.Remove(View) View.BringSubviewToFront(View) View.SendSubviewToBack(View) View.SendSubviewBackwards(View) View.BringSubviewForward(View) View.Clear() View.Clear(Rect) View.ScreenToView(Int32, Int32) View.ClipToBounds() View.SetClip(Rect) View.DrawFrame(Rect, Int32, Boolean) View.DrawHotString(ustring, Attribute, Attribute) View.DrawHotString(ustring, Boolean, ColorScheme) View.Move(Int32, Int32, Boolean) View.HasFocus View.OnAdded(View) View.OnRemoved(View) View.Focused View.MostFocused View.ColorScheme View.AddRune(Int32, Int32, Rune) View.ClearNeedsDisplay() View.DrawContent View.OnDrawContent(Rect) View.DrawContentComplete View.OnDrawContentComplete(Rect) View.SetFocus() View.KeyPress View.InvokeKeybindings(KeyEvent) View.AddKeyBinding(Key, Command[]) View.ReplaceKeyBinding(Key, Key) View.ContainsKeyBinding(Key) View.ClearKeybindings() View.ClearKeybinding(Key) View.ClearKeybinding(Command[]) View.AddCommand(Command, Func<Nullable<Boolean>>) View.GetSupportedCommands() View.GetKeyFromCommand(Command[]) View.ProcessHotKey(KeyEvent) View.ProcessColdKey(KeyEvent) View.KeyDown View.OnKeyDown(KeyEvent) View.KeyUp View.EnsureFocus() View.FocusFirst() View.FocusLast() View.FocusPrev() View.FocusNext() View.LayoutStarted View.LayoutComplete View.Initialized View.LayoutSubviews() View.AutoSize View.PreserveTrailingSpaces View.TextAlignment View.VerticalTextAlignment View.TextDirection View.IsInitialized View.IsAdded View.Enabled View.Visible View.Border View.ToString() View.GetAutoSize() View.GetHotKeySpecifierLength(Boolean) View.GetTextFormatterBoundsSize() View.GetBoundsTextFormatterSize() View.OnMouseEnter(MouseEvent) View.OnMouseLeave(MouseEvent) View.OnMouseEvent(MouseEvent) View.OnMouseClick(View.MouseEventArgs) View.OnCanFocusChanged() View.OnEnabledChanged() View.OnVisibleChanged() View.Dispose(Boolean) View.BeginInit() View.EndInit() View.SetWidth(Int32, Int32) View.SetHeight(Int32, Int32) View.GetCurrentWidth(Int32) View.GetCurrentHeight(Int32) View.GetTopSuperView() Responder.Dispose() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Terminal.Gui Assembly : Terminal.Gui.dll Syntax public class TextView : View, IDisposable, ISupportInitializeNotification, ISupportInitialize Constructors | Improve this Doc View Source TextView() Initializes a TextView on the specified area, with dimensions controlled with the X, Y, Width and Height properties. Declaration public TextView() | Improve this Doc View Source TextView(Rect) Initializes a TextView on the specified area, with absolute position and size. Declaration public TextView(Rect frame) Parameters Type Name Description Rect frame Properties | Improve this Doc View Source AllowsReturn Gets or sets a value indicating whether pressing ENTER in a TextView creates a new line of text in the view or activates the default button for the toplevel. Declaration public bool AllowsReturn { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source AllowsTab Gets or sets whether the TextView inserts a tab character into the text or ignores tab input. If set to `false` and the user presses the tab key (or shift-tab) the focus will move to the next view (or previous with shift-tab). The default is `true`; if the user presses the tab key, a tab character will be inserted into the text. Declaration public bool AllowsTab { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source Autocomplete Provides autocomplete context menu based on suggestions at the current cursor position. Populate AllSuggestions to enable this feature Declaration public IAutocomplete Autocomplete { get; protected set; } Property Value Type Description IAutocomplete | Improve this Doc View Source BottomOffset The bottom offset needed to use a horizontal scrollbar or for another reason. This is only needed with the keyboard navigation. Declaration public int BottomOffset { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source CanFocus Declaration public override bool CanFocus { get; set; } Property Value Type Description System.Boolean Overrides View.CanFocus | Improve this Doc View Source ContextMenu Get the ContextMenu for this view. Declaration public ContextMenu ContextMenu { get; } Property Value Type Description ContextMenu | Improve this Doc View Source CurrentColumn Gets the cursor column. Declaration public int CurrentColumn { get; } Property Value Type Description System.Int32 The cursor column. | Improve this Doc View Source CurrentRow Gets the current cursor row. Declaration public int CurrentRow { get; } Property Value Type Description System.Int32 | Improve this Doc View Source CursorPosition Sets or gets the current cursor position. Declaration public Point CursorPosition { get; set; } Property Value Type Description Point | Improve this Doc View Source DesiredCursorVisibility Get / Set the wished cursor when the field is focused Declaration public CursorVisibility DesiredCursorVisibility { get; set; } Property Value Type Description CursorVisibility | Improve this Doc View Source Frame Declaration public override Rect Frame { get; set; } Property Value Type Description Rect Overrides View.Frame | Improve this Doc View Source HasHistoryChanges Indicates whatever the text has history changes or not. true if the text has history changes false otherwise. Declaration public bool HasHistoryChanges { get; } Property Value Type Description System.Boolean | Improve this Doc View Source IsDirty Indicates whatever the text was changed or not. true if the text was changed false otherwise. Declaration public bool IsDirty { get; } Property Value Type Description System.Boolean | Improve this Doc View Source LeftColumn Gets or sets the left column. Declaration public int LeftColumn { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source Lines Gets the number of lines. Declaration public int Lines { get; } Property Value Type Description System.Int32 | Improve this Doc View Source Maxlength Gets the maximum visible length line. Declaration public int Maxlength { get; } Property Value Type Description System.Int32 | Improve this Doc View Source Multiline Gets or sets a value indicating whether this TextView is a multiline text view. Declaration public bool Multiline { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source ReadOnly Gets or sets whether the TextView is in read-only mode or not Declaration public bool ReadOnly { get; set; } Property Value Type Description System.Boolean Boolean value(Default false) | Improve this Doc View Source RightOffset The right offset needed to use a vertical scrollbar or for another reason. This is only needed with the keyboard navigation. Declaration public int RightOffset { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source SelectedLength Length of the selected text. Declaration public int SelectedLength { get; } Property Value Type Description System.Int32 | Improve this Doc View Source SelectedText The selected text. Declaration public ustring SelectedText { get; } Property Value Type Description NStack.ustring | Improve this Doc View Source Selecting Get or sets the selecting. Declaration public bool Selecting { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source SelectionStartColumn Start column position of the selected text. Declaration public int SelectionStartColumn { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source SelectionStartRow Start row position of the selected text. Declaration public int SelectionStartRow { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source TabWidth Gets or sets a value indicating the number of whitespace when pressing the TAB key. Declaration public int TabWidth { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source Text Sets or gets the text in the TextView . Declaration public override ustring Text { get; set; } Property Value Type Description NStack.ustring Overrides View.Text | Improve this Doc View Source TopRow Gets or sets the top row. Declaration public int TopRow { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source Used Tracks whether the text view should be considered \"used\", that is, that the user has moved in the entry, so new input should be appended at the cursor position, rather than clearing the entry Declaration public bool Used { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source WordWrap Allows word wrap the to fit the available container width. Declaration public bool WordWrap { get; set; } Property Value Type Description System.Boolean Methods | Improve this Doc View Source ClearHistoryChanges() Allows clearing the Terminal.Gui.HistoryText.HistoryTextItem items updating the original text. Declaration public void ClearHistoryChanges() | Improve this Doc View Source CloseFile() Closes the contents of the stream into the TextView . Declaration public bool CloseFile() Returns Type Description System.Boolean true , if stream was closed, false otherwise. | Improve this Doc View Source Copy() Copy the selected text to the clipboard contents. Declaration public void Copy() | Improve this Doc View Source Cut() Cut the selected text to the clipboard contents. Declaration public void Cut() | Improve this Doc View Source DeleteAll() Deletes all text. Declaration public void DeleteAll() | Improve this Doc View Source DeleteCharLeft() Deletes all the selected or a single character at left from the position of the cursor. Declaration public void DeleteCharLeft() | Improve this Doc View Source DeleteCharRight() Deletes all the selected or a single character at right from the position of the cursor. Declaration public void DeleteCharRight() | Improve this Doc View Source FindNextText(ustring, out Boolean, Boolean, Boolean, ustring, Boolean) Find the next text based on the match case with the option to replace it. Declaration public bool FindNextText(ustring textToFind, out bool gaveFullTurn, bool matchCase = false, bool matchWholeWord = false, ustring textToReplace = null, bool replace = false) Parameters Type Name Description NStack.ustring textToFind The text to find. System.Boolean gaveFullTurn true If all the text was forward searched. false otherwise. System.Boolean matchCase The match case setting. System.Boolean matchWholeWord The match whole word setting. NStack.ustring textToReplace The text to replace. System.Boolean replace true If is replacing. false otherwise. Returns Type Description System.Boolean true If the text was found. false otherwise. | Improve this Doc View Source FindPreviousText(ustring, out Boolean, Boolean, Boolean, ustring, Boolean) Find the previous text based on the match case with the option to replace it. Declaration public bool FindPreviousText(ustring textToFind, out bool gaveFullTurn, bool matchCase = false, bool matchWholeWord = false, ustring textToReplace = null, bool replace = false) Parameters Type Name Description NStack.ustring textToFind The text to find. System.Boolean gaveFullTurn true If all the text was backward searched. false otherwise. System.Boolean matchCase The match case setting. System.Boolean matchWholeWord The match whole word setting. NStack.ustring textToReplace The text to replace. System.Boolean replace true If the text was found. false otherwise. Returns Type Description System.Boolean true If the text was found. false otherwise. | Improve this Doc View Source FindTextChanged() Reset the flag to stop continuous find. Declaration public void FindTextChanged() | Improve this Doc View Source GetCurrentLine() Returns the characters on the current line (where the cursor is positioned). Use CurrentColumn to determine the position of the cursor within that line Declaration public List<Rune> GetCurrentLine() Returns Type Description System.Collections.Generic.List < System.Rune > | Improve this Doc View Source GetNormalColor() Declaration public override Attribute GetNormalColor() Returns Type Description Attribute Overrides View.GetNormalColor() | Improve this Doc View Source InsertText(String) Inserts the given toAdd text at the current cursor position exactly as if the user had just typed it Declaration public void InsertText(string toAdd) Parameters Type Name Description System.String toAdd Text to add | Improve this Doc View Source LoadFile(String) Loads the contents of the file into the TextView . Declaration public bool LoadFile(string path) Parameters Type Name Description System.String path Path to the file to load. Returns Type Description System.Boolean true , if file was loaded, false otherwise. | Improve this Doc View Source LoadStream(Stream) Loads the contents of the stream into the TextView . Declaration public void LoadStream(Stream stream) Parameters Type Name Description System.IO.Stream stream Stream to load the contents from. | Improve this Doc View Source MouseEvent(MouseEvent) Declaration public override bool MouseEvent(MouseEvent ev) Parameters Type Name Description MouseEvent ev Returns Type Description System.Boolean Overrides Responder.MouseEvent(MouseEvent) | Improve this Doc View Source MoveEnd() Will scroll the TextView to the last line and position the cursor there. Declaration public void MoveEnd() | Improve this Doc View Source MoveHome() Will scroll the TextView to the first line and position the cursor there. Declaration public void MoveHome() | Improve this Doc View Source OnEnter(View) Declaration public override bool OnEnter(View view) Parameters Type Name Description View view Returns Type Description System.Boolean Overrides View.OnEnter(View) | Improve this Doc View Source OnKeyUp(KeyEvent) Declaration public override bool OnKeyUp(KeyEvent kb) Parameters Type Name Description KeyEvent kb Returns Type Description System.Boolean Overrides View.OnKeyUp(KeyEvent) | Improve this Doc View Source OnLeave(View) Declaration public override bool OnLeave(View view) Parameters Type Name Description View view Returns Type Description System.Boolean Overrides View.OnLeave(View) | Improve this Doc View Source OnUnwrappedCursorPosition(Nullable<Int32>, Nullable<Int32>) Invoke the UnwrappedCursorPosition event with the unwrapped CursorPosition . Declaration public virtual void OnUnwrappedCursorPosition(int? cRow = null, int? cCol = null) Parameters Type Name Description System.Nullable < System.Int32 > cRow System.Nullable < System.Int32 > cCol | Improve this Doc View Source Paste() Paste the clipboard contents into the current selected position. Declaration public void Paste() | Improve this Doc View Source PositionCursor() Positions the cursor on the current row and column Declaration public override void PositionCursor() Overrides View.PositionCursor() | Improve this Doc View Source ProcessKey(KeyEvent) Declaration public override bool ProcessKey(KeyEvent kb) Parameters Type Name Description KeyEvent kb Returns Type Description System.Boolean Overrides View.ProcessKey(KeyEvent) | Improve this Doc View Source Redraw(Rect) Declaration public override void Redraw(Rect bounds) Parameters Type Name Description Rect bounds Overrides View.Redraw(Rect) | Improve this Doc View Source ReplaceAllText(ustring, Boolean, Boolean, ustring) Replaces all the text based on the match case. Declaration public bool ReplaceAllText(ustring textToFind, bool matchCase = false, bool matchWholeWord = false, ustring textToReplace = null) Parameters Type Name Description NStack.ustring textToFind The text to find. System.Boolean matchCase The match case setting. System.Boolean matchWholeWord The match whole word setting. NStack.ustring textToReplace The text to replace. Returns Type Description System.Boolean true If the text was found. false otherwise. | Improve this Doc View Source ScrollTo(Int32, Boolean) Will scroll the TextView to display the specified row at the top if isRow is true or will scroll the TextView to display the specified column at the left if isRow is false. Declaration public void ScrollTo(int idx, bool isRow = true) Parameters Type Name Description System.Int32 idx Row that should be displayed at the top or Column that should be displayed at the left, if the value is negative it will be reset to zero System.Boolean isRow If true (default) the idx is a row, column otherwise. | Improve this Doc View Source SelectAll() Select all text. Declaration public void SelectAll() | Improve this Doc View Source SetNormalColor() Sets the driver to the default color for the control where no text is being rendered. Defaults to Normal . Declaration protected virtual void SetNormalColor() | Improve this Doc View Source SetNormalColor(List<Rune>, Int32) Sets the Driver to an appropriate color for rendering the given idx of the current line . Override to provide custom coloring by calling SetAttribute(Attribute) Defaults to Normal . Declaration protected virtual void SetNormalColor(List<Rune> line, int idx) Parameters Type Name Description System.Collections.Generic.List < System.Rune > line System.Int32 idx | Improve this Doc View Source SetReadOnlyColor(List<Rune>, Int32) Sets the Driver to an appropriate color for rendering the given idx of the current line . Override to provide custom coloring by calling SetAttribute(Attribute) Defaults to Focus . Declaration protected virtual void SetReadOnlyColor(List<Rune> line, int idx) Parameters Type Name Description System.Collections.Generic.List < System.Rune > line System.Int32 idx | Improve this Doc View Source SetSelectionColor(List<Rune>, Int32) Sets the Driver to an appropriate color for rendering the given idx of the current line . Override to provide custom coloring by calling SetAttribute(Attribute) Defaults to Focus . Declaration protected virtual void SetSelectionColor(List<Rune> line, int idx) Parameters Type Name Description System.Collections.Generic.List < System.Rune > line System.Int32 idx | Improve this Doc View Source SetUsedColor(List<Rune>, Int32) Sets the Driver to an appropriate color for rendering the given idx of the current line . Override to provide custom coloring by calling SetAttribute(Attribute) Defaults to HotFocus . Declaration protected virtual void SetUsedColor(List<Rune> line, int idx) Parameters Type Name Description System.Collections.Generic.List < System.Rune > line System.Int32 idx Events | Improve this Doc View Source TextChanged Raised when the Text of the TextView changes. Declaration public event Action TextChanged Event Type Type Description System.Action | Improve this Doc View Source UnwrappedCursorPosition Invoked with the unwrapped CursorPosition . Declaration public event Action<Point> UnwrappedCursorPosition Event Type Type Description System.Action < Point > Implements System.IDisposable System.ComponentModel.ISupportInitializeNotification System.ComponentModel.ISupportInitialize"
  },
  "api/Terminal.Gui/Terminal.Gui.TextViewAutocomplete.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.TextViewAutocomplete.html",
    "title": "Class TextViewAutocomplete",
    "keywords": "Class TextViewAutocomplete Renders an overlay on another view at a given point that allows selecting from a range of 'autocomplete' options. An implementation on a TextView. Inheritance System.Object Autocomplete TextViewAutocomplete Implements IAutocomplete Inherited Members Autocomplete.HostControl Autocomplete.PopupInsideContainer Autocomplete.MaxWidth Autocomplete.MaxHeight Autocomplete.Visible Autocomplete.Suggestions Autocomplete.AllSuggestions Autocomplete.SelectedIdx Autocomplete.ScrollOffset Autocomplete.ColorScheme Autocomplete.SelectionKey Autocomplete.CloseKey Autocomplete.Reopen Autocomplete.RenderOverlay(Point) Autocomplete.EnsureSelectedIdxIsValid() Autocomplete.ProcessKey(KeyEvent) Autocomplete.MouseEvent(MouseEvent, Boolean) Autocomplete.RenderSelectedIdxByMouse(MouseEvent) Autocomplete.ClearSuggestions() Autocomplete.GenerateSuggestions() Autocomplete.IsWordChar(Rune) Autocomplete.Select() Autocomplete.InsertSelection(String) Autocomplete.IdxToWord(List<Rune>, Int32) Autocomplete.Close() Autocomplete.MoveUp() Autocomplete.MoveDown() Autocomplete.ReopenSuggestions() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Terminal.Gui Assembly : Terminal.Gui.dll Syntax public class TextViewAutocomplete : Autocomplete, IAutocomplete Methods | Improve this Doc View Source DeleteTextBackwards() Declaration protected override void DeleteTextBackwards() Overrides Autocomplete.DeleteTextBackwards() | Improve this Doc View Source GetCurrentWord() Declaration protected override string GetCurrentWord() Returns Type Description System.String Overrides Autocomplete.GetCurrentWord() | Improve this Doc View Source InsertText(String) Declaration protected override void InsertText(string accepted) Parameters Type Name Description System.String accepted Overrides Autocomplete.InsertText(String) Implements IAutocomplete"
  },
  "api/Terminal.Gui/Terminal.Gui.Thickness.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.Thickness.html",
    "title": "Struct Thickness",
    "keywords": "Struct Thickness Describes the thickness of a frame around a rectangle. Four System.Int32 values describe the Left , Top , Right , and Bottom sides of the rectangle, respectively. Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Terminal.Gui Assembly : Terminal.Gui.dll Syntax public struct Thickness Constructors | Improve this Doc View Source Thickness(Int32) Initializes a new instance of the Thickness structure that has the specified uniform length on each side. Declaration public Thickness(int length) Parameters Type Name Description System.Int32 length | Improve this Doc View Source Thickness(Int32, Int32, Int32, Int32) Initializes a new instance of the Thickness structure that has specific lengths (supplied as a System.Int32 ) applied to each side of the rectangle. Declaration public Thickness(int left, int top, int right, int bottom) Parameters Type Name Description System.Int32 left System.Int32 top System.Int32 right System.Int32 bottom Fields | Improve this Doc View Source Bottom Gets or sets the width, in integers, of the lower side of the bounding rectangle. Declaration public int Bottom Field Value Type Description System.Int32 | Improve this Doc View Source Left Gets or sets the width, in integers, of the left side of the bounding rectangle. Declaration public int Left Field Value Type Description System.Int32 | Improve this Doc View Source Right Gets or sets the width, in integers, of the right side of the bounding rectangle. Declaration public int Right Field Value Type Description System.Int32 | Improve this Doc View Source Top Gets or sets the width, in integers, of the upper side of the bounding rectangle. Declaration public int Top Field Value Type Description System.Int32 Methods | Improve this Doc View Source ToString() Returns the fully qualified type name of this instance. Declaration public override string ToString() Returns Type Description System.String The fully qualified type name. Overrides System.ValueType.ToString()"
  },
  "api/Terminal.Gui/Terminal.Gui.TimeField.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.TimeField.html",
    "title": "Class TimeField",
    "keywords": "Class TimeField Time editing View Inheritance System.Object Responder View TextField TimeField Implements System.IDisposable System.ComponentModel.ISupportInitializeNotification System.ComponentModel.ISupportInitialize Remarks The TimeField View provides time editing functionality with mouse support. Inherited Members TextField.Used TextField.ReadOnly TextField.TextChanging TextField.TextChanged TextField.OnLeave(View) TextField.Autocomplete TextField.Frame TextField.Text TextField.Secret TextField.ScrollOffset TextField.IsDirty TextField.HasHistoryChanges TextField.ContextMenu TextField.PositionCursor() TextField.Redraw(Rect) TextField.GetNormalColor() TextField.CanFocus TextField.KillWordBackwards() TextField.KillWordForwards() TextField.SelectAll() TextField.DeleteAll() TextField.SelectedStart TextField.SelectedLength TextField.SelectedText TextField.ClearAllSelection() TextField.Copy() TextField.Cut() TextField.Paste() TextField.OnTextChanging(ustring) TextField.DesiredCursorVisibility TextField.OnEnter(View) TextField.InsertText(String, Boolean) TextField.ClearHistoryChanges() View.Added View.Removed View.Enter View.Leave View.MouseEnter View.MouseLeave View.MouseClick View.CanFocusChanged View.EnabledChanged View.VisibleChanged View.HotKeyChanged View.HotKey View.HotKeySpecifier View.Shortcut View.ShortcutTag View.ShortcutAction View.Data View.Driver View.Subviews View.TabIndexes View.TabIndex View.TabStop View.Id View.IsCurrentTop View.WantMousePositionReports View.WantContinuousButtonPressed View.LayoutStyle View.Bounds View.X View.Y View.Width View.Height View.ForceValidatePosDim View.GetMinWidthHeight(Size) View.SetMinWidthHeight() View.TextFormatter View.SuperView View.UpdateTextFormatterText() View.ProcessResizeView() View.SetNeedsDisplay() View.ClearLayoutNeeded() View.SetNeedsDisplay(Rect) View.SetChildNeedsDisplay() View.Add(View) View.Add(View[]) View.RemoveAll() View.Remove(View) View.BringSubviewToFront(View) View.SendSubviewToBack(View) View.SendSubviewBackwards(View) View.BringSubviewForward(View) View.Clear() View.Clear(Rect) View.ScreenToView(Int32, Int32) View.ClipToBounds() View.SetClip(Rect) View.DrawFrame(Rect, Int32, Boolean) View.DrawHotString(ustring, Attribute, Attribute) View.DrawHotString(ustring, Boolean, ColorScheme) View.Move(Int32, Int32, Boolean) View.HasFocus View.OnAdded(View) View.OnRemoved(View) View.Focused View.MostFocused View.ColorScheme View.AddRune(Int32, Int32, Rune) View.ClearNeedsDisplay() View.DrawContent View.OnDrawContent(Rect) View.DrawContentComplete View.OnDrawContentComplete(Rect) View.SetFocus() View.KeyPress View.InvokeKeybindings(KeyEvent) View.AddKeyBinding(Key, Command[]) View.ReplaceKeyBinding(Key, Key) View.ContainsKeyBinding(Key) View.ClearKeybindings() View.ClearKeybinding(Key) View.ClearKeybinding(Command[]) View.AddCommand(Command, Func<Nullable<Boolean>>) View.GetSupportedCommands() View.GetKeyFromCommand(Command[]) View.ProcessHotKey(KeyEvent) View.ProcessColdKey(KeyEvent) View.KeyDown View.OnKeyDown(KeyEvent) View.KeyUp View.OnKeyUp(KeyEvent) View.EnsureFocus() View.FocusFirst() View.FocusLast() View.FocusPrev() View.FocusNext() View.LayoutStarted View.LayoutComplete View.Initialized View.LayoutSubviews() View.AutoSize View.PreserveTrailingSpaces View.TextAlignment View.VerticalTextAlignment View.TextDirection View.IsInitialized View.IsAdded View.Enabled View.Visible View.Border View.ToString() View.GetAutoSize() View.GetHotKeySpecifierLength(Boolean) View.GetTextFormatterBoundsSize() View.GetBoundsTextFormatterSize() View.OnMouseEnter(MouseEvent) View.OnMouseLeave(MouseEvent) View.OnMouseEvent(MouseEvent) View.OnMouseClick(View.MouseEventArgs) View.OnCanFocusChanged() View.OnEnabledChanged() View.OnVisibleChanged() View.Dispose(Boolean) View.BeginInit() View.EndInit() View.SetWidth(Int32, Int32) View.SetHeight(Int32, Int32) View.GetCurrentWidth(Int32) View.GetCurrentHeight(Int32) View.GetTopSuperView() Responder.Dispose() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Terminal.Gui Assembly : Terminal.Gui.dll Syntax public class TimeField : TextField, IDisposable, ISupportInitializeNotification, ISupportInitialize Constructors | Improve this Doc View Source TimeField() Initializes a new instance of TimeField using Computed positioning. Declaration public TimeField() | Improve this Doc View Source TimeField(Int32, Int32, TimeSpan, Boolean) Initializes a new instance of TimeField using Absolute positioning. Declaration public TimeField(int x, int y, TimeSpan time, bool isShort = false) Parameters Type Name Description System.Int32 x The x coordinate. System.Int32 y The y coordinate. System.TimeSpan time Initial time. System.Boolean isShort If true, the seconds are hidden. Sets the IsShortFormat property. | Improve this Doc View Source TimeField(TimeSpan) Initializes a new instance of TimeField using Computed positioning. Declaration public TimeField(TimeSpan time) Parameters Type Name Description System.TimeSpan time Initial time Properties | Improve this Doc View Source CursorPosition Declaration public override int CursorPosition { get; set; } Property Value Type Description System.Int32 Overrides TextField.CursorPosition | Improve this Doc View Source IsShortFormat Get or sets whether TimeField uses the short or long time format. Declaration public bool IsShortFormat { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source Time Gets or sets the time of the TimeField . Declaration public TimeSpan Time { get; set; } Property Value Type Description System.TimeSpan Methods | Improve this Doc View Source DeleteCharLeft(Boolean) Declaration public override void DeleteCharLeft(bool useOldCursorPos = true) Parameters Type Name Description System.Boolean useOldCursorPos Overrides TextField.DeleteCharLeft(Boolean) | Improve this Doc View Source DeleteCharRight() Declaration public override void DeleteCharRight() Overrides TextField.DeleteCharRight() | Improve this Doc View Source MouseEvent(MouseEvent) Declaration public override bool MouseEvent(MouseEvent ev) Parameters Type Name Description MouseEvent ev Returns Type Description System.Boolean Overrides TextField.MouseEvent(MouseEvent) | Improve this Doc View Source OnTimeChanged(DateTimeEventArgs<TimeSpan>) Event firing method that invokes the TimeChanged event. Declaration public virtual void OnTimeChanged(DateTimeEventArgs<TimeSpan> args) Parameters Type Name Description DateTimeEventArgs < System.TimeSpan > args The event arguments | Improve this Doc View Source ProcessKey(KeyEvent) Declaration public override bool ProcessKey(KeyEvent kb) Parameters Type Name Description KeyEvent kb Returns Type Description System.Boolean Overrides TextField.ProcessKey(KeyEvent) Events | Improve this Doc View Source TimeChanged TimeChanged event, raised when the Date has changed. Declaration public event Action<DateTimeEventArgs<TimeSpan>> TimeChanged Event Type Type Description System.Action < DateTimeEventArgs < System.TimeSpan >> Implements System.IDisposable System.ComponentModel.ISupportInitializeNotification System.ComponentModel.ISupportInitialize"
  },
  "api/Terminal.Gui/Terminal.Gui.Toplevel.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.Toplevel.html",
    "title": "Class Toplevel",
    "keywords": "Class Toplevel Toplevel views can be modally executed. They are used for both an application's main view (filling the entire screeN and for pop-up views such as Dialog , MessageBox , and Wizard . Inheritance System.Object Responder View Toplevel Border.ToplevelContainer Window Implements System.IDisposable System.ComponentModel.ISupportInitializeNotification System.ComponentModel.ISupportInitialize Remarks Toplevels can be modally executing views, started by calling Run(Toplevel, Func<Exception, Boolean>) . They return control to the caller when RequestStop(Toplevel) has been called (which sets the Running property to false ). A Toplevel is created when an application initializes Terminal.Gui by calling Init(ConsoleDriver, IMainLoopDriver) . The application Toplevel can be accessed via Top . Additional Toplevels can be created and run (e.g. Dialog s. To run a Toplevel, create the Toplevel and call Run(Toplevel, Func<Exception, Boolean>) . Toplevels can also opt-in to more sophisticated initialization by implementing System.ComponentModel.ISupportInitialize . When they do so, the System.ComponentModel.ISupportInitialize.BeginInit() and System.ComponentModel.ISupportInitialize.EndInit() methods will be called before running the view. If first-run-only initialization is preferred, the System.ComponentModel.ISupportInitializeNotification can be implemented too, in which case the System.ComponentModel.ISupportInitialize methods will only be called if System.ComponentModel.ISupportInitializeNotification.IsInitialized is false . This allows proper View inheritance hierarchies to override base class layout code optimally by doing so only on first run, instead of on every run. Inherited Members View.Added View.Removed View.Enter View.Leave View.MouseEnter View.MouseLeave View.MouseClick View.CanFocusChanged View.EnabledChanged View.VisibleChanged View.HotKeyChanged View.HotKey View.HotKeySpecifier View.Shortcut View.ShortcutTag View.ShortcutAction View.Data View.Driver View.Subviews View.TabIndexes View.TabIndex View.TabStop View.Id View.IsCurrentTop View.WantMousePositionReports View.WantContinuousButtonPressed View.Frame View.LayoutStyle View.Bounds View.X View.Y View.Width View.Height View.ForceValidatePosDim View.GetMinWidthHeight(Size) View.SetMinWidthHeight() View.TextFormatter View.SuperView View.UpdateTextFormatterText() View.ProcessResizeView() View.SetNeedsDisplay() View.ClearLayoutNeeded() View.SetNeedsDisplay(Rect) View.SetChildNeedsDisplay() View.Add(View[]) View.BringSubviewToFront(View) View.SendSubviewToBack(View) View.SendSubviewBackwards(View) View.BringSubviewForward(View) View.Clear() View.Clear(Rect) View.ScreenToView(Int32, Int32) View.ClipToBounds() View.SetClip(Rect) View.DrawFrame(Rect, Int32, Boolean) View.DrawHotString(ustring, Attribute, Attribute) View.DrawHotString(ustring, Boolean, ColorScheme) View.Move(Int32, Int32, Boolean) View.HasFocus View.OnAdded(View) View.OnRemoved(View) View.OnEnter(View) View.OnLeave(View) View.Focused View.MostFocused View.ColorScheme View.AddRune(Int32, Int32, Rune) View.ClearNeedsDisplay() View.DrawContent View.OnDrawContent(Rect) View.DrawContentComplete View.OnDrawContentComplete(Rect) View.SetFocus() View.KeyPress View.InvokeKeybindings(KeyEvent) View.AddKeyBinding(Key, Command[]) View.ReplaceKeyBinding(Key, Key) View.ContainsKeyBinding(Key) View.ClearKeybindings() View.ClearKeybinding(Key) View.ClearKeybinding(Command[]) View.AddCommand(Command, Func<Nullable<Boolean>>) View.GetSupportedCommands() View.GetKeyFromCommand(Command[]) View.ProcessHotKey(KeyEvent) View.KeyDown View.KeyUp View.EnsureFocus() View.FocusFirst() View.FocusLast() View.FocusPrev() View.FocusNext() View.LayoutStarted View.LayoutComplete View.Initialized View.LayoutSubviews() View.Text View.AutoSize View.PreserveTrailingSpaces View.TextAlignment View.VerticalTextAlignment View.TextDirection View.IsInitialized View.IsAdded View.Enabled View.Visible View.Border View.ToString() View.GetAutoSize() View.GetHotKeySpecifierLength(Boolean) View.GetTextFormatterBoundsSize() View.GetBoundsTextFormatterSize() View.OnMouseEnter(MouseEvent) View.OnMouseLeave(MouseEvent) View.OnMouseEvent(MouseEvent) View.OnMouseClick(View.MouseEventArgs) View.OnCanFocusChanged() View.OnEnabledChanged() View.OnVisibleChanged() View.Dispose(Boolean) View.BeginInit() View.EndInit() View.SetWidth(Int32, Int32) View.SetHeight(Int32, Int32) View.GetCurrentWidth(Int32) View.GetCurrentHeight(Int32) View.GetNormalColor() View.GetTopSuperView() Responder.Dispose() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Terminal.Gui Assembly : Terminal.Gui.dll Syntax public class Toplevel : View, IDisposable, ISupportInitializeNotification, ISupportInitialize Constructors | Improve this Doc View Source Toplevel() Initializes a new instance of the Toplevel class with Computed layout, defaulting to full screen. Declaration public Toplevel() | Improve this Doc View Source Toplevel(Rect) Initializes a new instance of the Toplevel class with the specified Absolute layout. Declaration public Toplevel(Rect frame) Parameters Type Name Description Rect frame A superview-relative rectangle specifying the location and size for the new Toplevel Properties | Improve this Doc View Source CanFocus Gets or sets a value indicating whether this Toplevel can focus. Declaration public override bool CanFocus { get; } Property Value Type Description System.Boolean true if can focus; otherwise, false . Overrides View.CanFocus | Improve this Doc View Source IsMdiChild Gets or sets if this Toplevel is a Mdi child. Declaration public bool IsMdiChild { get; } Property Value Type Description System.Boolean | Improve this Doc View Source IsMdiContainer Gets or sets if this Toplevel is a Mdi container. Declaration public bool IsMdiContainer { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source MenuBar Gets or sets the menu for this Toplevel. Declaration public virtual MenuBar MenuBar { get; set; } Property Value Type Description MenuBar | Improve this Doc View Source Modal Determines whether the Toplevel is modal or not. If set to false (the default): ProcessKey(KeyEvent) events will propagate keys upwards. The Toplevel will act as an embedded view (not a modal/pop-up). If set to true : ProcessKey(KeyEvent) events will NOT propogate keys upwards. The Toplevel will and look like a modal (pop-up) (e.g. see Dialog . Declaration public bool Modal { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source Running Gets or sets whether the MainLoop for this Toplevel is running or not. Declaration public bool Running { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source StatusBar Gets or sets the status bar for this Toplevel. Declaration public virtual StatusBar StatusBar { get; set; } Property Value Type Description StatusBar Methods | Improve this Doc View Source Add(View) Declaration public override void Add(View view) Parameters Type Name Description View view Overrides View.Add(View) | Improve this Doc View Source Create() Convenience factory method that creates a new Toplevel with the current terminal dimensions. Declaration public static Toplevel Create() Returns Type Description Toplevel The created Toplevel. | Improve this Doc View Source GetTopMdiChild(Type, String[]) Gets the current visible Toplevel Mdi child that matches the arguments pattern. Declaration public View GetTopMdiChild(Type type = null, string[] exclude = null) Parameters Type Name Description System.Type type The type. System.String [] exclude The strings to exclude. Returns Type Description View The matched view. | Improve this Doc View Source MouseEvent(MouseEvent) Declaration public override bool MouseEvent(MouseEvent mouseEvent) Parameters Type Name Description MouseEvent mouseEvent Returns Type Description System.Boolean Overrides Responder.MouseEvent(MouseEvent) | Improve this Doc View Source MoveNext() Move to the next Mdi child from the MdiTop . Declaration public virtual void MoveNext() | Improve this Doc View Source MovePrevious() Move to the previous Mdi child from the MdiTop . Declaration public virtual void MovePrevious() | Improve this Doc View Source OnAlternateBackwardKeyChanged(Key) Virtual method to invoke the AlternateBackwardKeyChanged event. Declaration public virtual void OnAlternateBackwardKeyChanged(Key oldKey) Parameters Type Name Description Key oldKey | Improve this Doc View Source OnAlternateForwardKeyChanged(Key) Virtual method to invoke the AlternateForwardKeyChanged event. Declaration public virtual void OnAlternateForwardKeyChanged(Key oldKey) Parameters Type Name Description Key oldKey | Improve this Doc View Source OnKeyDown(KeyEvent) Declaration public override bool OnKeyDown(KeyEvent keyEvent) Parameters Type Name Description KeyEvent keyEvent Returns Type Description System.Boolean Overrides View.OnKeyDown(KeyEvent) | Improve this Doc View Source OnKeyUp(KeyEvent) Declaration public override bool OnKeyUp(KeyEvent keyEvent) Parameters Type Name Description KeyEvent keyEvent Returns Type Description System.Boolean Overrides View.OnKeyUp(KeyEvent) | Improve this Doc View Source OnLoaded() Called from Begin(Toplevel) before the Toplevel redraws for the first time. Declaration public virtual void OnLoaded() | Improve this Doc View Source OnQuitKeyChanged(Key) Virtual method to invoke the QuitKeyChanged event. Declaration public virtual void OnQuitKeyChanged(Key oldKey) Parameters Type Name Description Key oldKey | Improve this Doc View Source PositionCursor() Declaration public override void PositionCursor() Overrides View.PositionCursor() | Improve this Doc View Source PositionToplevel(Toplevel) Virtual method enabling implementation of specific positions for inherited Toplevel views. Declaration public virtual void PositionToplevel(Toplevel top) Parameters Type Name Description Toplevel top The toplevel. | Improve this Doc View Source ProcessColdKey(KeyEvent) Declaration public override bool ProcessColdKey(KeyEvent keyEvent) Parameters Type Name Description KeyEvent keyEvent Returns Type Description System.Boolean Overrides View.ProcessColdKey(KeyEvent) | Improve this Doc View Source ProcessKey(KeyEvent) Declaration public override bool ProcessKey(KeyEvent keyEvent) Parameters Type Name Description KeyEvent keyEvent Returns Type Description System.Boolean Overrides View.ProcessKey(KeyEvent) | Improve this Doc View Source Redraw(Rect) Declaration public override void Redraw(Rect bounds) Parameters Type Name Description Rect bounds Overrides View.Redraw(Rect) | Improve this Doc View Source Remove(View) Declaration public override void Remove(View view) Parameters Type Name Description View view Overrides View.Remove(View) | Improve this Doc View Source RemoveAll() Declaration public override void RemoveAll() Overrides View.RemoveAll() | Improve this Doc View Source RequestStop() Stops and closes this Toplevel . If this Toplevel is the top-most Toplevel, RequestStop(Toplevel) will be called, causing the application to exit. Declaration public virtual void RequestStop() | Improve this Doc View Source RequestStop(Toplevel) Stops and closes the Toplevel specified by top . If top is the top-most Toplevel, RequestStop(Toplevel) will be called, causing the application to exit. Declaration public virtual void RequestStop(Toplevel top) Parameters Type Name Description Toplevel top The toplevel to request stop. | Improve this Doc View Source ShowChild(Toplevel) Shows the Mdi child indicated by top , setting it as Current . Declaration public virtual bool ShowChild(Toplevel top = null) Parameters Type Name Description Toplevel top The Toplevel. Returns Type Description System.Boolean true if the toplevel can be shown or false if not. | Improve this Doc View Source WillPresent() Invoked by Begin(Toplevel) as part of Run(Toplevel, Func<Exception, Boolean>) after the views have been laid out, and before the views are drawn for the first time. Declaration public virtual void WillPresent() Events | Improve this Doc View Source Activate Invoked when the Toplevel Application.RunState becomes the Current Toplevel. Declaration public event Action<Toplevel> Activate Event Type Type Description System.Action < Toplevel > | Improve this Doc View Source AllChildClosed Invoked when the last child of the Toplevel Application.RunState is closed from by Terminal.Gui.Application.End(Terminal.Gui.View) . Declaration public event Action AllChildClosed Event Type Type Description System.Action | Improve this Doc View Source AlternateBackwardKeyChanged Invoked when the AlternateBackwardKey is changed. Declaration public event Action<Key> AlternateBackwardKeyChanged Event Type Type Description System.Action < Key > | Improve this Doc View Source AlternateForwardKeyChanged Invoked when the AlternateForwardKey is changed. Declaration public event Action<Key> AlternateForwardKeyChanged Event Type Type Description System.Action < Key > | Improve this Doc View Source ChildClosed Invoked when a child of the Toplevel Application.RunState is closed by Terminal.Gui.Application.End(Terminal.Gui.View) . Declaration public event Action<Toplevel> ChildClosed Event Type Type Description System.Action < Toplevel > | Improve this Doc View Source ChildLoaded Invoked when a child Toplevel's Application.RunState has been loaded. Declaration public event Action<Toplevel> ChildLoaded Event Type Type Description System.Action < Toplevel > | Improve this Doc View Source ChildUnloaded Invoked when a cjhild Toplevel's Application.RunState has been unloaded. Declaration public event Action<Toplevel> ChildUnloaded Event Type Type Description System.Action < Toplevel > | Improve this Doc View Source Closed Invoked when the Toplevel's Application.RunState is closed by Terminal.Gui.Application.End(Terminal.Gui.View) . Declaration public event Action<Toplevel> Closed Event Type Type Description System.Action < Toplevel > | Improve this Doc View Source Closing Invoked when the Toplevel's Application.RunState is being closed by RequestStop(Toplevel) . Declaration public event Action<ToplevelClosingEventArgs> Closing Event Type Type Description System.Action < ToplevelClosingEventArgs > | Improve this Doc View Source Deactivate Invoked when the Toplevel Application.RunState ceases to be the Current Toplevel. Declaration public event Action<Toplevel> Deactivate Event Type Type Description System.Action < Toplevel > | Improve this Doc View Source Loaded Invoked when the Toplevel Application.RunState has begin loaded. A Loaded event handler is a good place to finalize initialization before calling RunLoop(Application.RunState, Boolean) . Declaration public event Action Loaded Event Type Type Description System.Action | Improve this Doc View Source QuitKeyChanged Invoked when the QuitKey is changed. Declaration public event Action<Key> QuitKeyChanged Event Type Type Description System.Action < Key > | Improve this Doc View Source Ready Invoked when the Toplevel MainLoop has started it's first iteration. Subscribe to this event to perform tasks when the Toplevel has been laid out and focus has been set. changes. A Ready event handler is a good place to finalize initialization after calling Run(Func<Exception, Boolean>) on this Toplevel. Declaration public event Action Ready Event Type Type Description System.Action | Improve this Doc View Source Resized Invoked when the terminal has been resized. The new Size of the terminal is provided. Declaration public event Action<Size> Resized Event Type Type Description System.Action < Size > | Improve this Doc View Source Unloaded Invoked when the Toplevel Application.RunState has been unloaded. A Unloaded event handler is a good place to dispose objects after calling End(Application.RunState) . Declaration public event Action Unloaded Event Type Type Description System.Action Implements System.IDisposable System.ComponentModel.ISupportInitializeNotification System.ComponentModel.ISupportInitialize"
  },
  "api/Terminal.Gui/Terminal.Gui.ToplevelClosingEventArgs.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.ToplevelClosingEventArgs.html",
    "title": "Class ToplevelClosingEventArgs",
    "keywords": "Class ToplevelClosingEventArgs System.EventArgs implementation for the Closing event. Inheritance System.Object System.EventArgs ToplevelClosingEventArgs Inherited Members System.EventArgs.Empty System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Terminal.Gui Assembly : Terminal.Gui.dll Syntax public class ToplevelClosingEventArgs : EventArgs Constructors | Improve this Doc View Source ToplevelClosingEventArgs(Toplevel) Initializes the event arguments with the requesting toplevel. Declaration public ToplevelClosingEventArgs(Toplevel requestingTop) Parameters Type Name Description Toplevel requestingTop The RequestingTop . Properties | Improve this Doc View Source Cancel Provides an event cancellation option. Declaration public bool Cancel { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source RequestingTop The toplevel requesting stop. Declaration public View RequestingTop { get; } Property Value Type Description View"
  },
  "api/Terminal.Gui/Terminal.Gui.ToplevelComparer.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.ToplevelComparer.html",
    "title": "Class ToplevelComparer",
    "keywords": "Class ToplevelComparer Implements the System.Collections.Generic.IComparer<T> to sort the Toplevel from the MdiChildes if needed. Inheritance System.Object ToplevelComparer Implements System.Collections.Generic.IComparer < Toplevel > Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Terminal.Gui Assembly : Terminal.Gui.dll Syntax public sealed class ToplevelComparer : IComparer<Toplevel> Methods | Improve this Doc View Source Compare(Toplevel, Toplevel) Compares two objects and returns a value indicating whether one is less than, equal to, or greater than the other. Declaration public int Compare(Toplevel x, Toplevel y) Parameters Type Name Description Toplevel x The first object to compare. Toplevel y The second object to compare. Returns Type Description System.Int32 A signed integer that indicates the relative values of x and y , as shown in the following table.Value Meaning Less than zero x is less than y .Zero x equals y .Greater than zero x is greater than y . Implements System.Collections.Generic.IComparer<T>"
  },
  "api/Terminal.Gui/Terminal.Gui.ToplevelEqualityComparer.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.ToplevelEqualityComparer.html",
    "title": "Class ToplevelEqualityComparer",
    "keywords": "Class ToplevelEqualityComparer Implements the System.Collections.Generic.IEqualityComparer<T> for comparing two Toplevel s used by StackExtensions . Inheritance System.Object ToplevelEqualityComparer Implements System.Collections.Generic.IEqualityComparer < Toplevel > Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Terminal.Gui Assembly : Terminal.Gui.dll Syntax public class ToplevelEqualityComparer : IEqualityComparer<Toplevel> Methods | Improve this Doc View Source Equals(Toplevel, Toplevel) Determines whether the specified objects are equal. Declaration public bool Equals(Toplevel x, Toplevel y) Parameters Type Name Description Toplevel x The first object of type Toplevel to compare. Toplevel y The second object of type Toplevel to compare. Returns Type Description System.Boolean true if the specified objects are equal; otherwise, false . | Improve this Doc View Source GetHashCode(Toplevel) Returns a hash code for the specified object. Declaration public int GetHashCode(Toplevel obj) Parameters Type Name Description Toplevel obj The Toplevel for which a hash code is to be returned. Returns Type Description System.Int32 A hash code for the specified object. Exceptions Type Condition System.ArgumentNullException The type of obj is a reference type and obj is null . Implements System.Collections.Generic.IEqualityComparer<T>"
  },
  "api/Terminal.Gui/Terminal.Gui.Trees.AspectGetterDelegate-1.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.Trees.AspectGetterDelegate-1.html",
    "title": "Delegate AspectGetterDelegate<T>",
    "keywords": "Delegate AspectGetterDelegate<T> Delegates of this type are used to fetch string representations of user's model objects Namespace : Terminal.Gui.Trees Assembly : Terminal.Gui.dll Syntax public delegate string AspectGetterDelegate<T>(T toRender) where T : class; Parameters Type Name Description T toRender The object that is being rendered Returns Type Description System.String Type Parameters Name Description T"
  },
  "api/Terminal.Gui/Terminal.Gui.Trees.DelegateTreeBuilder-1.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.Trees.DelegateTreeBuilder-1.html",
    "title": "Class DelegateTreeBuilder<T>",
    "keywords": "Class DelegateTreeBuilder<T> Implementation of ITreeBuilder<T> that uses user defined functions Inheritance System.Object TreeBuilder <T> DelegateTreeBuilder<T> Implements ITreeBuilder <T> Inherited Members TreeBuilder<T>.SupportsCanExpand System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Terminal.Gui.Trees Assembly : Terminal.Gui.dll Syntax public class DelegateTreeBuilder<T> : TreeBuilder<T>, ITreeBuilder<T> Type Parameters Name Description T Constructors | Improve this Doc View Source DelegateTreeBuilder(Func<T, IEnumerable<T>>) Constructs an implementation of ITreeBuilder<T> that calls the user defined method childGetter to determine children Declaration public DelegateTreeBuilder(Func<T, IEnumerable<T>> childGetter) Parameters Type Name Description System.Func <T, System.Collections.Generic.IEnumerable <T>> childGetter | Improve this Doc View Source DelegateTreeBuilder(Func<T, IEnumerable<T>>, Func<T, Boolean>) Constructs an implementation of ITreeBuilder<T> that calls the user defined method childGetter to determine children and canExpand to determine expandability Declaration public DelegateTreeBuilder(Func<T, IEnumerable<T>> childGetter, Func<T, bool> canExpand) Parameters Type Name Description System.Func <T, System.Collections.Generic.IEnumerable <T>> childGetter System.Func <T, System.Boolean > canExpand Methods | Improve this Doc View Source CanExpand(T) Returns whether a node can be expanded based on the delegate passed during construction Declaration public override bool CanExpand(T toExpand) Parameters Type Name Description T toExpand Returns Type Description System.Boolean Overrides Terminal.Gui.Trees.TreeBuilder<T>.CanExpand(T) | Improve this Doc View Source GetChildren(T) Returns children using the delegate method passed during construction Declaration public override IEnumerable<T> GetChildren(T forObject) Parameters Type Name Description T forObject Returns Type Description System.Collections.Generic.IEnumerable <T> Overrides Terminal.Gui.Trees.TreeBuilder<T>.GetChildren(T) Implements ITreeBuilder<T>"
  },
  "api/Terminal.Gui/Terminal.Gui.Trees.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.Trees.html",
    "title": "Namespace Terminal.Gui.Trees",
    "keywords": "Namespace Terminal.Gui.Trees Classes DelegateTreeBuilder<T> Implementation of ITreeBuilder<T> that uses user defined functions ObjectActivatedEventArgs<T> Event args for the ObjectActivated event SelectionChangedEventArgs<T> Event arguments describing a change in selected object in a tree view TreeBuilder<T> Abstract implementation of ITreeBuilder<T> . TreeNode Simple class for representing nodes, use with regular (non generic) TreeView . TreeNodeBuilder ITreeBuilder<T> implementation for ITreeNode objects TreeStyle Defines rendering options that affect how the tree is displayed Interfaces ITreeBuilder<T> Interface for supplying data to a TreeView<T> on demand as root level nodes are expanded by the user ITreeNode Interface to implement when you want the regular (non generic) TreeView to automatically determine children for your class (without having to specify an ITreeBuilder<T> ) Delegates AspectGetterDelegate<T> Delegates of this type are used to fetch string representations of user's model objects"
  },
  "api/Terminal.Gui/Terminal.Gui.Trees.ITreeBuilder-1.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.Trees.ITreeBuilder-1.html",
    "title": "Interface ITreeBuilder<T>",
    "keywords": "Interface ITreeBuilder<T> Interface for supplying data to a TreeView<T> on demand as root level nodes are expanded by the user Namespace : Terminal.Gui.Trees Assembly : Terminal.Gui.dll Syntax public interface ITreeBuilder<T> Type Parameters Name Description T Properties | Improve this Doc View Source SupportsCanExpand Returns true if CanExpand(T) is implemented by this class Declaration bool SupportsCanExpand { get; } Property Value Type Description System.Boolean Methods | Improve this Doc View Source CanExpand(T) Returns true/false for whether a model has children. This method should be implemented when GetChildren(T) is an expensive operation otherwise SupportsCanExpand should return false (in which case this method will not be called) Declaration bool CanExpand(T toExpand) Parameters Type Name Description T toExpand Returns Type Description System.Boolean | Improve this Doc View Source GetChildren(T) Returns all children of a given forObject which should be added to the tree as new branches underneath it Declaration IEnumerable<T> GetChildren(T forObject) Parameters Type Name Description T forObject Returns Type Description System.Collections.Generic.IEnumerable <T>"
  },
  "api/Terminal.Gui/Terminal.Gui.Trees.ITreeNode.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.Trees.ITreeNode.html",
    "title": "Interface ITreeNode",
    "keywords": "Interface ITreeNode Interface to implement when you want the regular (non generic) TreeView to automatically determine children for your class (without having to specify an ITreeBuilder<T> ) Namespace : Terminal.Gui.Trees Assembly : Terminal.Gui.dll Syntax public interface ITreeNode Properties | Improve this Doc View Source Children The children of your class which should be rendered underneath it when expanded Declaration IList<ITreeNode> Children { get; } Property Value Type Description System.Collections.Generic.IList < ITreeNode > | Improve this Doc View Source Tag Optionally allows you to store some custom data/class here. Declaration object Tag { get; set; } Property Value Type Description System.Object | Improve this Doc View Source Text Text to display when rendering the node Declaration string Text { get; set; } Property Value Type Description System.String"
  },
  "api/Terminal.Gui/Terminal.Gui.Trees.ObjectActivatedEventArgs-1.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.Trees.ObjectActivatedEventArgs-1.html",
    "title": "Class ObjectActivatedEventArgs<T>",
    "keywords": "Class ObjectActivatedEventArgs<T> Event args for the ObjectActivated event Inheritance System.Object ObjectActivatedEventArgs<T> Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Terminal.Gui.Trees Assembly : Terminal.Gui.dll Syntax public class ObjectActivatedEventArgs<T> where T : class Type Parameters Name Description T Constructors | Improve this Doc View Source ObjectActivatedEventArgs(TreeView<T>, T) Creates a new instance documenting activation of the activated object Declaration public ObjectActivatedEventArgs(TreeView<T> tree, T activated) Parameters Type Name Description TreeView <T> tree Tree in which the activation is happening T activated What object is being activated Properties | Improve this Doc View Source ActivatedObject The object that was selected at the time of activation Declaration public T ActivatedObject { get; } Property Value Type Description T | Improve this Doc View Source Tree The tree in which the activation occurred Declaration public TreeView<T> Tree { get; } Property Value Type Description TreeView <T>"
  },
  "api/Terminal.Gui/Terminal.Gui.Trees.SelectionChangedEventArgs-1.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.Trees.SelectionChangedEventArgs-1.html",
    "title": "Class SelectionChangedEventArgs<T>",
    "keywords": "Class SelectionChangedEventArgs<T> Event arguments describing a change in selected object in a tree view Inheritance System.Object System.EventArgs SelectionChangedEventArgs<T> Inherited Members System.EventArgs.Empty System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Terminal.Gui.Trees Assembly : Terminal.Gui.dll Syntax public class SelectionChangedEventArgs<T> : EventArgs where T : class Type Parameters Name Description T Constructors | Improve this Doc View Source SelectionChangedEventArgs(TreeView<T>, T, T) Creates a new instance of event args describing a change of selection in tree Declaration public SelectionChangedEventArgs(TreeView<T> tree, T oldValue, T newValue) Parameters Type Name Description TreeView <T> tree T oldValue T newValue Properties | Improve this Doc View Source NewValue The newly selected value in the Tree (can be null) Declaration public T NewValue { get; } Property Value Type Description T | Improve this Doc View Source OldValue The previously selected value (can be null) Declaration public T OldValue { get; } Property Value Type Description T | Improve this Doc View Source Tree The view in which the change occurred Declaration public TreeView<T> Tree { get; } Property Value Type Description TreeView <T>"
  },
  "api/Terminal.Gui/Terminal.Gui.Trees.TreeBuilder-1.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.Trees.TreeBuilder-1.html",
    "title": "Class TreeBuilder<T>",
    "keywords": "Class TreeBuilder<T> Abstract implementation of ITreeBuilder<T> . Inheritance System.Object TreeBuilder<T> DelegateTreeBuilder<T> TreeNodeBuilder Implements ITreeBuilder <T> Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Terminal.Gui.Trees Assembly : Terminal.Gui.dll Syntax public abstract class TreeBuilder<T> : ITreeBuilder<T> Type Parameters Name Description T Constructors | Improve this Doc View Source TreeBuilder(Boolean) Constructs base and initializes SupportsCanExpand Declaration public TreeBuilder(bool supportsCanExpand) Parameters Type Name Description System.Boolean supportsCanExpand Pass true if you intend to implement CanExpand(T) otherwise false Properties | Improve this Doc View Source SupportsCanExpand Declaration public bool SupportsCanExpand { get; protected set; } Property Value Type Description System.Boolean Methods | Improve this Doc View Source CanExpand(T) Override this method to return a rapid answer as to whether GetChildren(T) returns results. If you are implementing this method ensure you passed true in base constructor or set SupportsCanExpand Declaration public virtual bool CanExpand(T toExpand) Parameters Type Name Description T toExpand Returns Type Description System.Boolean | Improve this Doc View Source GetChildren(T) Declaration public abstract IEnumerable<T> GetChildren(T forObject) Parameters Type Name Description T forObject Returns Type Description System.Collections.Generic.IEnumerable <T> Implements ITreeBuilder<T>"
  },
  "api/Terminal.Gui/Terminal.Gui.Trees.TreeNode.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.Trees.TreeNode.html",
    "title": "Class TreeNode",
    "keywords": "Class TreeNode Simple class for representing nodes, use with regular (non generic) TreeView . Inheritance System.Object TreeNode Implements ITreeNode Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Terminal.Gui.Trees Assembly : Terminal.Gui.dll Syntax public class TreeNode : ITreeNode Constructors | Improve this Doc View Source TreeNode() Initialises a new instance with no Text Declaration public TreeNode() | Improve this Doc View Source TreeNode(String) Initialises a new instance and sets starting Text Declaration public TreeNode(string text) Parameters Type Name Description System.String text Properties | Improve this Doc View Source Children Children of the current node Declaration public virtual IList<ITreeNode> Children { get; set; } Property Value Type Description System.Collections.Generic.IList < ITreeNode > | Improve this Doc View Source Tag Optionally allows you to store some custom data/class here. Declaration public object Tag { get; set; } Property Value Type Description System.Object | Improve this Doc View Source Text Text to display in tree node for current entry Declaration public virtual string Text { get; set; } Property Value Type Description System.String Methods | Improve this Doc View Source ToString() returns Text Declaration public override string ToString() Returns Type Description System.String Overrides System.Object.ToString() Implements ITreeNode"
  },
  "api/Terminal.Gui/Terminal.Gui.Trees.TreeNodeBuilder.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.Trees.TreeNodeBuilder.html",
    "title": "Class TreeNodeBuilder",
    "keywords": "Class TreeNodeBuilder ITreeBuilder<T> implementation for ITreeNode objects Inheritance System.Object TreeBuilder < ITreeNode > TreeNodeBuilder Implements ITreeBuilder < ITreeNode > Inherited Members TreeBuilder<ITreeNode>.SupportsCanExpand TreeBuilder<ITreeNode>.CanExpand(ITreeNode) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Terminal.Gui.Trees Assembly : Terminal.Gui.dll Syntax public class TreeNodeBuilder : TreeBuilder<ITreeNode>, ITreeBuilder<ITreeNode> Constructors | Improve this Doc View Source TreeNodeBuilder() Initialises a new instance of builder for any model objects of Type ITreeNode Declaration public TreeNodeBuilder() Methods | Improve this Doc View Source GetChildren(ITreeNode) Returns Children from model Declaration public override IEnumerable<ITreeNode> GetChildren(ITreeNode model) Parameters Type Name Description ITreeNode model Returns Type Description System.Collections.Generic.IEnumerable < ITreeNode > Overrides Terminal.Gui.Trees.TreeBuilder<Terminal.Gui.Trees.ITreeNode>.GetChildren(Terminal.Gui.Trees.ITreeNode) Implements ITreeBuilder<T>"
  },
  "api/Terminal.Gui/Terminal.Gui.Trees.TreeStyle.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.Trees.TreeStyle.html",
    "title": "Class TreeStyle",
    "keywords": "Class TreeStyle Defines rendering options that affect how the tree is displayed Inheritance System.Object TreeStyle Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Terminal.Gui.Trees Assembly : Terminal.Gui.dll Syntax public class TreeStyle Properties | Improve this Doc View Source CollapseableSymbol Symbol to use for branch nodes that can be collapsed (are currently expanded). Defaults to '-'. Set to null to hide Declaration public Rune? CollapseableSymbol { get; set; } Property Value Type Description System.Nullable < System.Rune > | Improve this Doc View Source ColorExpandSymbol Set to true to highlight expand/collapse symbols in hot key color Declaration public bool ColorExpandSymbol { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source ExpandableSymbol Symbol to use for branch nodes that can be expanded to indicate this to the user. Defaults to '+'. Set to null to hide Declaration public Rune? ExpandableSymbol { get; set; } Property Value Type Description System.Nullable < System.Rune > | Improve this Doc View Source InvertExpandSymbolColors Invert console colours used to render the expand symbol Declaration public bool InvertExpandSymbolColors { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source LeaveLastRow True to leave the last row of the control free for overwritting (e.g. by a scrollbar) When True scrolling will be triggered on the second last row of the control rather than the last. Declaration public bool LeaveLastRow { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source ShowBranchLines True to render vertical lines under expanded nodes to show which node belongs to which parent. False to use only whitespace Declaration public bool ShowBranchLines { get; set; } Property Value Type Description System.Boolean"
  },
  "api/Terminal.Gui/Terminal.Gui.TreeView.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.TreeView.html",
    "title": "Class TreeView",
    "keywords": "Class TreeView Convenience implementation of generic TreeView<T> for any tree were all nodes implement ITreeNode . See TreeView Deep Dive for more information . Inheritance System.Object Responder View TreeView < ITreeNode > TreeView Implements System.IDisposable System.ComponentModel.ISupportInitializeNotification System.ComponentModel.ISupportInitialize ITreeView Inherited Members TreeView<ITreeNode>.TreeBuilder TreeView<ITreeNode>.Style TreeView<ITreeNode>.MultiSelect TreeView<ITreeNode>.AllowLetterBasedNavigation TreeView<ITreeNode>.SelectedObject TreeView<ITreeNode>.ObjectActivated TreeView<ITreeNode>.ObjectActivationKey TreeView<ITreeNode>.ObjectActivationButton TreeView<ITreeNode>.ColorGetter TreeView<ITreeNode>.NoBuilderError TreeView<ITreeNode>.SelectionChanged TreeView<ITreeNode>.Objects TreeView<ITreeNode>.ScrollOffsetVertical TreeView<ITreeNode>.ScrollOffsetHorizontal TreeView<ITreeNode>.ContentHeight TreeView<ITreeNode>.AspectGetter TreeView<ITreeNode>.DesiredCursorVisibility TreeView<ITreeNode>.OnEnter(View) TreeView<ITreeNode>.AddObject(ITreeNode) TreeView<ITreeNode>.ClearObjects() TreeView<ITreeNode>.Remove(ITreeNode) TreeView<ITreeNode>.AddObjects(IEnumerable<ITreeNode>) TreeView<ITreeNode>.RefreshObject(ITreeNode, Boolean) TreeView<ITreeNode>.RebuildTree() TreeView<ITreeNode>.GetChildren(ITreeNode) TreeView<ITreeNode>.GetParent(ITreeNode) TreeView<ITreeNode>.Redraw(Rect) TreeView<ITreeNode>.GetScrollOffsetOf(ITreeNode) TreeView<ITreeNode>.GetContentWidth(Boolean) TreeView<ITreeNode>.ProcessKey(KeyEvent) TreeView<ITreeNode>.ActivateSelectedObjectIfAny() TreeView<ITreeNode>.GetObjectRow(ITreeNode) TreeView<ITreeNode>.AdjustSelectionToNextItemBeginningWith(Char, StringComparison) TreeView<ITreeNode>.MovePageUp(Boolean) TreeView<ITreeNode>.MovePageDown(Boolean) TreeView<ITreeNode>.ScrollDown() TreeView<ITreeNode>.ScrollUp() TreeView<ITreeNode>.OnObjectActivated(ObjectActivatedEventArgs<ITreeNode>) TreeView<ITreeNode>.GetObjectOnRow(Int32) TreeView<ITreeNode>.MouseEvent(MouseEvent) TreeView<ITreeNode>.PositionCursor() TreeView<ITreeNode>.CursorLeft(Boolean) TreeView<ITreeNode>.GoToFirst() TreeView<ITreeNode>.GoToEnd() TreeView<ITreeNode>.GoTo(ITreeNode) TreeView<ITreeNode>.AdjustSelection(Int32, Boolean) TreeView<ITreeNode>.AdjustSelectionToBranchStart() TreeView<ITreeNode>.AdjustSelectionToBranchEnd() TreeView<ITreeNode>.EnsureVisible(ITreeNode) TreeView<ITreeNode>.Expand() TreeView<ITreeNode>.Expand(ITreeNode) TreeView<ITreeNode>.ExpandAll(ITreeNode) TreeView<ITreeNode>.ExpandAll() TreeView<ITreeNode>.CanExpand(ITreeNode) TreeView<ITreeNode>.IsExpanded(ITreeNode) TreeView<ITreeNode>.Collapse() TreeView<ITreeNode>.Collapse(ITreeNode) TreeView<ITreeNode>.CollapseAll(ITreeNode) TreeView<ITreeNode>.CollapseAll() TreeView<ITreeNode>.CollapseImpl(ITreeNode, Boolean) TreeView<ITreeNode>.InvalidateLineMap() TreeView<ITreeNode>.IsSelected(ITreeNode) TreeView<ITreeNode>.GetAllSelectedObjects() TreeView<ITreeNode>.SelectAll() TreeView<ITreeNode>.OnSelectionChanged(SelectionChangedEventArgs<ITreeNode>) View.Added View.Removed View.Enter View.Leave View.MouseEnter View.MouseLeave View.MouseClick View.CanFocusChanged View.EnabledChanged View.VisibleChanged View.HotKeyChanged View.HotKey View.HotKeySpecifier View.Shortcut View.ShortcutTag View.ShortcutAction View.Data View.Driver View.Subviews View.TabIndexes View.TabIndex View.TabStop View.CanFocus View.Id View.IsCurrentTop View.WantMousePositionReports View.WantContinuousButtonPressed View.Frame View.LayoutStyle View.Bounds View.X View.Y View.Width View.Height View.ForceValidatePosDim View.GetMinWidthHeight(Size) View.SetMinWidthHeight() View.TextFormatter View.SuperView View.UpdateTextFormatterText() View.ProcessResizeView() View.SetNeedsDisplay() View.ClearLayoutNeeded() View.SetNeedsDisplay(Rect) View.SetChildNeedsDisplay() View.Add(View) View.Add(View[]) View.RemoveAll() View.Remove(View) View.BringSubviewToFront(View) View.SendSubviewToBack(View) View.SendSubviewBackwards(View) View.BringSubviewForward(View) View.Clear() View.Clear(Rect) View.ScreenToView(Int32, Int32) View.ClipToBounds() View.SetClip(Rect) View.DrawFrame(Rect, Int32, Boolean) View.DrawHotString(ustring, Attribute, Attribute) View.DrawHotString(ustring, Boolean, ColorScheme) View.Move(Int32, Int32, Boolean) View.HasFocus View.OnAdded(View) View.OnRemoved(View) View.OnLeave(View) View.Focused View.MostFocused View.ColorScheme View.AddRune(Int32, Int32, Rune) View.ClearNeedsDisplay() View.DrawContent View.OnDrawContent(Rect) View.DrawContentComplete View.OnDrawContentComplete(Rect) View.SetFocus() View.KeyPress View.InvokeKeybindings(KeyEvent) View.AddKeyBinding(Key, Command[]) View.ReplaceKeyBinding(Key, Key) View.ContainsKeyBinding(Key) View.ClearKeybindings() View.ClearKeybinding(Key) View.ClearKeybinding(Command[]) View.AddCommand(Command, Func<Nullable<Boolean>>) View.GetSupportedCommands() View.GetKeyFromCommand(Command[]) View.ProcessHotKey(KeyEvent) View.ProcessColdKey(KeyEvent) View.KeyDown View.OnKeyDown(KeyEvent) View.KeyUp View.OnKeyUp(KeyEvent) View.EnsureFocus() View.FocusFirst() View.FocusLast() View.FocusPrev() View.FocusNext() View.LayoutStarted View.LayoutComplete View.Initialized View.LayoutSubviews() View.Text View.AutoSize View.PreserveTrailingSpaces View.TextAlignment View.VerticalTextAlignment View.TextDirection View.IsInitialized View.IsAdded View.Enabled View.Visible View.Border View.ToString() View.GetAutoSize() View.GetHotKeySpecifierLength(Boolean) View.GetTextFormatterBoundsSize() View.GetBoundsTextFormatterSize() View.OnMouseEnter(MouseEvent) View.OnMouseLeave(MouseEvent) View.OnMouseEvent(MouseEvent) View.OnMouseClick(View.MouseEventArgs) View.OnCanFocusChanged() View.OnEnabledChanged() View.OnVisibleChanged() View.Dispose(Boolean) View.BeginInit() View.EndInit() View.SetWidth(Int32, Int32) View.SetHeight(Int32, Int32) View.GetCurrentWidth(Int32) View.GetCurrentHeight(Int32) View.GetNormalColor() View.GetTopSuperView() Responder.Dispose() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Terminal.Gui Assembly : Terminal.Gui.dll Syntax public class TreeView : TreeView<ITreeNode>, IDisposable, ISupportInitializeNotification, ISupportInitialize, ITreeView Constructors | Improve this Doc View Source TreeView() Creates a new instance of the tree control with absolute positioning and initialises TreeBuilder<T> with default ITreeNode based builder Declaration public TreeView() Implements System.IDisposable System.ComponentModel.ISupportInitializeNotification System.ComponentModel.ISupportInitialize ITreeView"
  },
  "api/Terminal.Gui/Terminal.Gui.TreeView-1.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.TreeView-1.html",
    "title": "Class TreeView<T>",
    "keywords": "Class TreeView<T> Hierarchical tree view with expandable branches. Branch objects are dynamically determined when expanded using a user defined ITreeBuilder<T> See TreeView Deep Dive for more information . Inheritance System.Object Responder View TreeView<T> TreeView Implements System.IDisposable System.ComponentModel.ISupportInitializeNotification System.ComponentModel.ISupportInitialize ITreeView Inherited Members View.Added View.Removed View.Enter View.Leave View.MouseEnter View.MouseLeave View.MouseClick View.CanFocusChanged View.EnabledChanged View.VisibleChanged View.HotKeyChanged View.HotKey View.HotKeySpecifier View.Shortcut View.ShortcutTag View.ShortcutAction View.Data View.Driver View.Subviews View.TabIndexes View.TabIndex View.TabStop View.CanFocus View.Id View.IsCurrentTop View.WantMousePositionReports View.WantContinuousButtonPressed View.Frame View.LayoutStyle View.Bounds View.X View.Y View.Width View.Height View.ForceValidatePosDim View.GetMinWidthHeight(Size) View.SetMinWidthHeight() View.TextFormatter View.SuperView View.UpdateTextFormatterText() View.ProcessResizeView() View.SetNeedsDisplay() View.ClearLayoutNeeded() View.SetNeedsDisplay(Rect) View.SetChildNeedsDisplay() View.Add(View) View.Add(View[]) View.RemoveAll() View.Remove(View) View.BringSubviewToFront(View) View.SendSubviewToBack(View) View.SendSubviewBackwards(View) View.BringSubviewForward(View) View.Clear() View.Clear(Rect) View.ScreenToView(Int32, Int32) View.ClipToBounds() View.SetClip(Rect) View.DrawFrame(Rect, Int32, Boolean) View.DrawHotString(ustring, Attribute, Attribute) View.DrawHotString(ustring, Boolean, ColorScheme) View.Move(Int32, Int32, Boolean) View.HasFocus View.OnAdded(View) View.OnRemoved(View) View.OnLeave(View) View.Focused View.MostFocused View.ColorScheme View.AddRune(Int32, Int32, Rune) View.ClearNeedsDisplay() View.DrawContent View.OnDrawContent(Rect) View.DrawContentComplete View.OnDrawContentComplete(Rect) View.SetFocus() View.KeyPress View.InvokeKeybindings(KeyEvent) View.AddKeyBinding(Key, Command[]) View.ReplaceKeyBinding(Key, Key) View.ContainsKeyBinding(Key) View.ClearKeybindings() View.ClearKeybinding(Key) View.ClearKeybinding(Command[]) View.AddCommand(Command, Func<Nullable<Boolean>>) View.GetSupportedCommands() View.GetKeyFromCommand(Command[]) View.ProcessHotKey(KeyEvent) View.ProcessColdKey(KeyEvent) View.KeyDown View.OnKeyDown(KeyEvent) View.KeyUp View.OnKeyUp(KeyEvent) View.EnsureFocus() View.FocusFirst() View.FocusLast() View.FocusPrev() View.FocusNext() View.LayoutStarted View.LayoutComplete View.Initialized View.LayoutSubviews() View.Text View.AutoSize View.PreserveTrailingSpaces View.TextAlignment View.VerticalTextAlignment View.TextDirection View.IsInitialized View.IsAdded View.Enabled View.Visible View.Border View.ToString() View.GetAutoSize() View.GetHotKeySpecifierLength(Boolean) View.GetTextFormatterBoundsSize() View.GetBoundsTextFormatterSize() View.OnMouseEnter(MouseEvent) View.OnMouseLeave(MouseEvent) View.OnMouseEvent(MouseEvent) View.OnMouseClick(View.MouseEventArgs) View.OnCanFocusChanged() View.OnEnabledChanged() View.OnVisibleChanged() View.Dispose(Boolean) View.BeginInit() View.EndInit() View.SetWidth(Int32, Int32) View.SetHeight(Int32, Int32) View.GetCurrentWidth(Int32) View.GetCurrentHeight(Int32) View.GetNormalColor() View.GetTopSuperView() Responder.Dispose() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Terminal.Gui Assembly : Terminal.Gui.dll Syntax public class TreeView<T> : View, IDisposable, ISupportInitializeNotification, ISupportInitialize, ITreeView where T : class Type Parameters Name Description T Constructors | Improve this Doc View Source TreeView() Creates a new tree view with absolute positioning. Use AddObjects(IEnumerable<T>) to set set root objects for the tree. Children will not be rendered until you set TreeBuilder Declaration public TreeView() | Improve this Doc View Source TreeView(ITreeBuilder<T>) Initialises TreeBuilder .Creates a new tree view with absolute positioning. Use AddObjects(IEnumerable<T>) to set set root objects for the tree. Declaration public TreeView(ITreeBuilder<T> builder) Parameters Type Name Description ITreeBuilder <T> builder Fields | Improve this Doc View Source NoBuilderError Error message to display when the control is not properly initialized at draw time (nodes added but no tree builder set) Declaration public static ustring NoBuilderError Field Value Type Description NStack.ustring Properties | Improve this Doc View Source AllowLetterBasedNavigation True makes a letter key press navigate to the next visible branch that begins with that letter/digit Declaration public bool AllowLetterBasedNavigation { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source AspectGetter Returns the string representation of model objects hosted in the tree. Default implementation is to call System.Object.ToString() Declaration public AspectGetterDelegate<T> AspectGetter { get; set; } Property Value Type Description AspectGetterDelegate <T> | Improve this Doc View Source ColorGetter Delegate for multi colored tree views. Return the ColorScheme to use for each passed object or null to use the default. Declaration public Func<T, ColorScheme> ColorGetter { get; set; } Property Value Type Description System.Func <T, ColorScheme > | Improve this Doc View Source ContentHeight The current number of rows in the tree (ignoring the controls bounds) Declaration public int ContentHeight { get; } Property Value Type Description System.Int32 | Improve this Doc View Source DesiredCursorVisibility Get / Set the wished cursor when the tree is focused Declaration public CursorVisibility DesiredCursorVisibility { get; set; } Property Value Type Description CursorVisibility | Improve this Doc View Source MultiSelect True to allow multiple objects to be selected at once Declaration public bool MultiSelect { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source ObjectActivationButton Mouse event to trigger ObjectActivated . Defaults to double click ( Button1DoubleClicked ). Set to null to disable this feature. Declaration public MouseFlags? ObjectActivationButton { get; set; } Property Value Type Description System.Nullable < MouseFlags > | Improve this Doc View Source ObjectActivationKey Key which when pressed triggers ObjectActivated . Defaults to Enter Declaration public Key ObjectActivationKey { get; set; } Property Value Type Description Key | Improve this Doc View Source Objects The root objects in the tree, note that this collection is of root objects only Declaration public IEnumerable<T> Objects { get; } Property Value Type Description System.Collections.Generic.IEnumerable <T> | Improve this Doc View Source ScrollOffsetHorizontal The amount of tree view that has been scrolled to the right (horizontally) Declaration public int ScrollOffsetHorizontal { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source ScrollOffsetVertical The amount of tree view that has been scrolled off the top of the screen (by the user scrolling down) Declaration public int ScrollOffsetVertical { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source SelectedObject The currently selected object in the tree. When MultiSelect is true this is the object at which the cursor is at Declaration public T SelectedObject { get; set; } Property Value Type Description T | Improve this Doc View Source Style Contains options for changing how the tree is rendered Declaration public TreeStyle Style { get; set; } Property Value Type Description TreeStyle | Improve this Doc View Source TreeBuilder Determines how sub branches of the tree are dynamically built at runtime as the user expands root nodes Declaration public ITreeBuilder<T> TreeBuilder { get; set; } Property Value Type Description ITreeBuilder <T> Methods | Improve this Doc View Source ActivateSelectedObjectIfAny() Triggers the ObjectActivated event with the SelectedObject . This method also ensures that the selected object is visible Declaration public void ActivateSelectedObjectIfAny() | Improve this Doc View Source AddObject(T) Adds a new root level object unless it is already a root of the tree Declaration public void AddObject(T o) Parameters Type Name Description T o | Improve this Doc View Source AddObjects(IEnumerable<T>) Adds many new root level objects. Objects that are already root objects are ignored Declaration public void AddObjects(IEnumerable<T> collection) Parameters Type Name Description System.Collections.Generic.IEnumerable <T> collection Objects to add as new root level objects | Improve this Doc View Source AdjustSelection(Int32, Boolean) The number of screen lines to move the currently selected object by. Supports negative offset . Each branch occupies 1 line on screen Declaration public void AdjustSelection(int offset, bool expandSelection = false) Parameters Type Name Description System.Int32 offset Positive to move the selection down the screen, negative to move it up System.Boolean expandSelection True to expand the selection (assuming MultiSelect is enabled). False to replace | Improve this Doc View Source AdjustSelectionToBranchEnd() Moves the selection to the last child in the currently selected level Declaration public void AdjustSelectionToBranchEnd() | Improve this Doc View Source AdjustSelectionToBranchStart() Moves the selection to the first child in the currently selected level Declaration public void AdjustSelectionToBranchStart() | Improve this Doc View Source AdjustSelectionToNextItemBeginningWith(Char, StringComparison) Moves the SelectedObject to the next item that begins with character This method will loop back to the start of the tree if reaching the end without finding a match Declaration public void AdjustSelectionToNextItemBeginningWith(char character, StringComparison caseSensitivity = StringComparison.CurrentCultureIgnoreCase) Parameters Type Name Description System.Char character The first character of the next item you want selected System.StringComparison caseSensitivity Case sensitivity of the search | Improve this Doc View Source CanExpand(T) Returns true if the given object o is exposed in the tree and can be expanded otherwise false Declaration public bool CanExpand(T o) Parameters Type Name Description T o Returns Type Description System.Boolean | Improve this Doc View Source ClearObjects() Removes all objects from the tree and clears SelectedObject Declaration public void ClearObjects() | Improve this Doc View Source Collapse() Collapses the SelectedObject Declaration public void Collapse() | Improve this Doc View Source Collapse(T) Collapses the supplied object if it is currently expanded Declaration public void Collapse(T toCollapse) Parameters Type Name Description T toCollapse The object to collapse | Improve this Doc View Source CollapseAll() Collapses all root nodes in the tree Declaration public void CollapseAll() | Improve this Doc View Source CollapseAll(T) Collapses the supplied object if it is currently expanded. Also collapses all children branches (this will only become apparent when/if the user expands it again) Declaration public void CollapseAll(T toCollapse) Parameters Type Name Description T toCollapse The object to collapse | Improve this Doc View Source CollapseImpl(T, Boolean) Implementation of Collapse(T) and CollapseAll(T) . Performs operation and updates selection if disapeared Declaration protected void CollapseImpl(T toCollapse, bool all) Parameters Type Name Description T toCollapse System.Boolean all | Improve this Doc View Source CursorLeft(Boolean) Determines systems behaviour when the left arrow key is pressed. Default behaviour is to collapse the current tree node if possible otherwise changes selection to current branches parent Declaration protected virtual void CursorLeft(bool ctrl) Parameters Type Name Description System.Boolean ctrl | Improve this Doc View Source EnsureVisible(T) Adjusts the ScrollOffsetVertical to ensure the given model is visible. Has no effect if already visible Declaration public void EnsureVisible(T model) Parameters Type Name Description T model | Improve this Doc View Source Expand() Expands the currently SelectedObject Declaration public void Expand() | Improve this Doc View Source Expand(T) Expands the supplied object if it is contained in the tree (either as a root object or as an exposed branch object) Declaration public void Expand(T toExpand) Parameters Type Name Description T toExpand The object to expand | Improve this Doc View Source ExpandAll() Fully expands all nodes in the tree, if the tree is very big and built dynamically this may take a while (e.g. for file system) Declaration public void ExpandAll() | Improve this Doc View Source ExpandAll(T) Expands the supplied object and all child objects Declaration public void ExpandAll(T toExpand) Parameters Type Name Description T toExpand The object to expand | Improve this Doc View Source GetAllSelectedObjects() Returns SelectedObject (if not null) and all multi selected objects if MultiSelect is true Declaration public IEnumerable<T> GetAllSelectedObjects() Returns Type Description System.Collections.Generic.IEnumerable <T> | Improve this Doc View Source GetChildren(T) Returns the currently expanded children of the passed object. Returns an empty collection if the branch is not exposed or not expanded Declaration public IEnumerable<T> GetChildren(T o) Parameters Type Name Description T o An object in the tree Returns Type Description System.Collections.Generic.IEnumerable <T> | Improve this Doc View Source GetContentWidth(Boolean) Returns the maximum width line in the tree including prefix and expansion symbols Declaration public int GetContentWidth(bool visible) Parameters Type Name Description System.Boolean visible True to consider only rows currently visible (based on window bounds and ScrollOffsetVertical . False to calculate the width of every exposed branch in the tree Returns Type Description System.Int32 | Improve this Doc View Source GetObjectOnRow(Int32) Returns the object in the tree list that is currently visible at the provided row. Returns null if no object is at that location. If you have screen coordinates then use ScreenToView(Int32, Int32) to translate these into the client area of the TreeView<T> . Declaration public T GetObjectOnRow(int row) Parameters Type Name Description System.Int32 row The row of the Bounds of the TreeView<T> Returns Type Description T The object currently displayed on this row or null | Improve this Doc View Source GetObjectRow(T) Returns the Y coordinate within the Bounds of the tree at which toFind would be displayed or null if it is not currently exposed (e.g. its parent is collapsed). Note that the returned value can be negative if the TreeView is scrolled down and the toFind object is off the top of the view. Declaration public int? GetObjectRow(T toFind) Parameters Type Name Description T toFind Returns Type Description System.Nullable < System.Int32 > | Improve this Doc View Source GetParent(T) Returns the parent object of o in the tree. Returns null if the object is not exposed in the tree Declaration public T GetParent(T o) Parameters Type Name Description T o An object in the tree Returns Type Description T | Improve this Doc View Source GetScrollOffsetOf(T) Returns the index of the object o if it is currently exposed (it's parent(s) have been expanded). This can be used with ScrollOffsetVertical and SetNeedsDisplay() to scroll to a specific object Declaration public int GetScrollOffsetOf(T o) Parameters Type Name Description T o An object that appears in your tree and is currently exposed Returns Type Description System.Int32 The index the object was found at or -1 if it is not currently revealed or not in the tree at all | Improve this Doc View Source GoTo(T) Changes the SelectedObject to toSelect and scrolls to ensure it is visible. Has no effect if toSelect is not exposed in the tree (e.g. its parents are collapsed) Declaration public void GoTo(T toSelect) Parameters Type Name Description T toSelect | Improve this Doc View Source GoToEnd() Changes the SelectedObject to the last object in the tree and scrolls so that it is visible Declaration public void GoToEnd() | Improve this Doc View Source GoToFirst() Changes the SelectedObject to the first root object and resets the ScrollOffsetVertical to 0 Declaration public void GoToFirst() | Improve this Doc View Source InvalidateLineMap() Clears any cached results of Terminal.Gui.TreeView`1.BuildLineMap Declaration protected void InvalidateLineMap() | Improve this Doc View Source IsExpanded(T) Returns true if the given object o is exposed in the tree and expanded otherwise false Declaration public bool IsExpanded(T o) Parameters Type Name Description T o Returns Type Description System.Boolean | Improve this Doc View Source IsSelected(T) Returns true if the model is either the SelectedObject or part of a MultiSelect Declaration public bool IsSelected(T model) Parameters Type Name Description T model Returns Type Description System.Boolean | Improve this Doc View Source MouseEvent(MouseEvent) Declaration public override bool MouseEvent(MouseEvent me) Parameters Type Name Description MouseEvent me Returns Type Description System.Boolean Overrides Responder.MouseEvent(MouseEvent) | Improve this Doc View Source MovePageDown(Boolean) Moves the selection down by the height of the control (1 page). Declaration public void MovePageDown(bool expandSelection = false) Parameters Type Name Description System.Boolean expandSelection True if the navigation should add the covered nodes to the selected current selection Exceptions Type Condition System.NotImplementedException | Improve this Doc View Source MovePageUp(Boolean) Moves the selection up by the height of the control (1 page). Declaration public void MovePageUp(bool expandSelection = false) Parameters Type Name Description System.Boolean expandSelection True if the navigation should add the covered nodes to the selected current selection Exceptions Type Condition System.NotImplementedException | Improve this Doc View Source OnEnter(View) Declaration public override bool OnEnter(View view) Parameters Type Name Description View view Returns Type Description System.Boolean Overrides View.OnEnter(View) | Improve this Doc View Source OnObjectActivated(ObjectActivatedEventArgs<T>) Raises the ObjectActivated event Declaration protected virtual void OnObjectActivated(ObjectActivatedEventArgs<T> e) Parameters Type Name Description ObjectActivatedEventArgs <T> e | Improve this Doc View Source OnSelectionChanged(SelectionChangedEventArgs<T>) Raises the SelectionChanged event Declaration protected virtual void OnSelectionChanged(SelectionChangedEventArgs<T> e) Parameters Type Name Description SelectionChangedEventArgs <T> e | Improve this Doc View Source PositionCursor() Positions the cursor at the start of the selected objects line (if visible) Declaration public override void PositionCursor() Overrides View.PositionCursor() | Improve this Doc View Source ProcessKey(KeyEvent) Declaration public override bool ProcessKey(KeyEvent keyEvent) Parameters Type Name Description KeyEvent keyEvent Returns Type Description System.Boolean Overrides View.ProcessKey(KeyEvent) | Improve this Doc View Source RebuildTree() Rebuilds the tree structure for all exposed objects starting with the root objects. Call this method when you know there are changes to the tree but don't know which objects have changed (otherwise use RefreshObject(T, Boolean) ) Declaration public void RebuildTree() | Improve this Doc View Source Redraw(Rect) Declaration public override void Redraw(Rect bounds) Parameters Type Name Description Rect bounds Overrides View.Redraw(Rect) | Improve this Doc View Source RefreshObject(T, Boolean) Refreshes the state of the object o in the tree. This will recompute children, string representation etc Declaration public void RefreshObject(T o, bool startAtTop = false) Parameters Type Name Description T o System.Boolean startAtTop True to also refresh all ancestors of the objects branch (starting with the root). False to refresh only the passed node | Improve this Doc View Source Remove(T) Removes the given root object from the tree Declaration public void Remove(T o) Parameters Type Name Description T o | Improve this Doc View Source ScrollDown() Scrolls the view area down a single line without changing the current selection Declaration public void ScrollDown() | Improve this Doc View Source ScrollUp() Scrolls the view area up a single line without changing the current selection Declaration public void ScrollUp() | Improve this Doc View Source SelectAll() Selects all objects in the tree when MultiSelect is enabled otherwise does nothing Declaration public void SelectAll() Events | Improve this Doc View Source ObjectActivated This event is raised when an object is activated e.g. by double clicking or pressing ObjectActivationKey Declaration public event Action<ObjectActivatedEventArgs<T>> ObjectActivated Event Type Type Description System.Action < ObjectActivatedEventArgs <T>> | Improve this Doc View Source SelectionChanged Called when the SelectedObject changes Declaration public event EventHandler<SelectionChangedEventArgs<T>> SelectionChanged Event Type Type Description System.EventHandler < SelectionChangedEventArgs <T>> Implements System.IDisposable System.ComponentModel.ISupportInitializeNotification System.ComponentModel.ISupportInitialize ITreeView"
  },
  "api/Terminal.Gui/Terminal.Gui.VerticalTextAlignment.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.VerticalTextAlignment.html",
    "title": "Enum VerticalTextAlignment",
    "keywords": "Enum VerticalTextAlignment Vertical text alignment enumeration, controls how text is displayed. Namespace : Terminal.Gui Assembly : Terminal.Gui.dll Syntax public enum VerticalTextAlignment Fields Name Description Bottom Aligns the text to the bottom of the frame. Justified Shows the text as justified text in the frame. Middle Centers the text verticaly in the frame. Top Aligns the text to the top of the frame."
  },
  "api/Terminal.Gui/Terminal.Gui.View.FocusEventArgs.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.View.FocusEventArgs.html",
    "title": "Class View.FocusEventArgs",
    "keywords": "Class View.FocusEventArgs Defines the event arguments for Terminal.Gui.View.SetFocus(Terminal.Gui.View) Inheritance System.Object System.EventArgs View.FocusEventArgs Inherited Members System.EventArgs.Empty System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Terminal.Gui Assembly : Terminal.Gui.dll Syntax public class FocusEventArgs : EventArgs Constructors | Improve this Doc View Source FocusEventArgs(View) Constructs. Declaration public FocusEventArgs(View view) Parameters Type Name Description View view The view that gets or loses focus. Properties | Improve this Doc View Source Handled Indicates if the current focus event has already been processed and the driver should stop notifying any other event subscriber. Its important to set this value to true specially when updating any View's layout from inside the subscriber method. Declaration public bool Handled { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source View Indicates the current view that gets or loses focus. Declaration public View View { get; set; } Property Value Type Description View"
  },
  "api/Terminal.Gui/Terminal.Gui.View.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.View.html",
    "title": "Class View",
    "keywords": "Class View View is the base class for all views on the screen and represents a visible element that can render itself and contains zero or more nested views. Inheritance System.Object Responder View Button CheckBox ColorPicker ComboBox FrameView GraphView HexView Label LineView ListView MenuBar PanelView ProgressBar RadioGroup ScrollBarView ScrollView StatusBar TableView TabView TextField TextValidateField TextView Toplevel TreeView<T> Implements System.IDisposable System.ComponentModel.ISupportInitializeNotification System.ComponentModel.ISupportInitialize Remarks The View defines the base functionality for user interface elements in Terminal.Gui. Views can contain one or more subviews, can respond to user input and render themselves on the screen. Views supports two layout styles: Absolute or Computed. The choice as to which layout style is used by the View is determined when the View is initialized. To create a View using Absolute layout, call a constructor that takes a Rect parameter to specify the absolute position and size (the View. Frame )/. To create a View using Computed layout use a constructor that does not take a Rect parameter and set the X, Y, Width and Height properties on the view. Both approaches use coordinates that are relative to the container they are being added to. To switch between Absolute and Computed layout, use the LayoutStyle property. Computed layout is more flexible and supports dynamic console apps where controls adjust layout as the terminal resizes or other Views change size or position. The X, Y, Width and Height properties are Dim and Pos objects that dynamically update the position of a view. The X and Y properties are of type Pos and you can use either absolute positions, percentages or anchor points. The Width and Height properties are of type Dim and can use absolute position, percentages and anchors. These are useful as they will take care of repositioning views when view's frames are resized or if the terminal size changes. Absolute layout requires specifying coordinates and sizes of Views explicitly, and the View will typically stay in a fixed position and size. To change the position and size use the Frame property. Subviews (child views) can be added to a View by calling the Add(View) method. The container of a View can be accessed with the SuperView property. To flag a region of the View's Bounds to be redrawn call SetNeedsDisplay(Rect) . To flag the entire view for redraw call SetNeedsDisplay() . Views have a ColorScheme property that defines the default colors that subviews should use for rendering. This ensures that the views fit in the context where they are being used, and allows for themes to be plugged in. For example, the default colors for windows and toplevels uses a blue background, while it uses a white background for dialog boxes and a red background for errors. Subclasses should not rely on ColorScheme being set at construction time. If a ColorScheme is not set on a view, the view will inherit the value from its SuperView and the value might only be valid once a view has been added to a SuperView. By using ColorScheme applications will work both in color as well as black and white displays. Views that are focusable should implement the PositionCursor() to make sure that the cursor is placed in a location that makes sense. Unix terminals do not have a way of hiding the cursor, so it can be distracting to have the cursor left at the last focused view. So views should make sure that they place the cursor in a visually sensible place. The LayoutSubviews() method is invoked when the size or layout of a view has changed. The default processing system will keep the size and dimensions for views that use the Absolute , and will recompute the frames for the vies that use Computed . Inherited Members Responder.MouseEvent(MouseEvent) Responder.Dispose() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Terminal.Gui Assembly : Terminal.Gui.dll Syntax public class View : Responder, IDisposable, ISupportInitializeNotification, ISupportInitialize Constructors | Improve this Doc View Source View() Initializes a new instance of View using Computed layout. Declaration public View() | Improve this Doc View Source View(ustring, TextDirection, Border) Initializes a new instance of View using Computed layout. Declaration public View(ustring text, TextDirection direction = TextDirection.LeftRight_TopBottom, Border border = null) Parameters Type Name Description NStack.ustring text text to initialize the Text property with. TextDirection direction The text direction. Border border The Border . | Improve this Doc View Source View(Int32, Int32, ustring) Initializes a new instance of View using Absolute layout. Declaration public View(int x, int y, ustring text) Parameters Type Name Description System.Int32 x column to locate the Label. System.Int32 y row to locate the Label. NStack.ustring text text to initialize the Text property with. | Improve this Doc View Source View(Rect) Initializes a new instance of a Absolute View class with the absolute dimensions specified in the frame parameter. Declaration public View(Rect frame) Parameters Type Name Description Rect frame The region covered by this view. | Improve this Doc View Source View(Rect, ustring, Border) Initializes a new instance of View using Absolute layout. Declaration public View(Rect rect, ustring text, Border border = null) Parameters Type Name Description Rect rect Location. NStack.ustring text text to initialize the Text property with. Border border The Border . Properties | Improve this Doc View Source AutoSize Gets or sets a flag that determines whether the View will be automatically resized to fit the Text . The default is `false`. Set to `true` to turn on AutoSize. If AutoSize is `true` the Width and Height will always be used if the text size is lower. If the text size is higher the bounds will be resized to fit it. In addition, if ForceValidatePosDim is `true` the new values of Width and Height must be of the same types of the existing one to avoid breaking the Dim settings. Declaration public virtual bool AutoSize { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source Border Declaration public virtual Border Border { get; set; } Property Value Type Description Border | Improve this Doc View Source Bounds The bounds represent the View-relative rectangle used for this view; the area inside of the view. Declaration public Rect Bounds { get; set; } Property Value Type Description Rect The bounds. | Improve this Doc View Source CanFocus Declaration public override bool CanFocus { get; set; } Property Value Type Description System.Boolean Overrides Responder.CanFocus | Improve this Doc View Source ColorScheme The color scheme for this view, if it is not defined, it returns the SuperView 's color scheme. Declaration public virtual ColorScheme ColorScheme { get; set; } Property Value Type Description ColorScheme | Improve this Doc View Source Data Gets or sets arbitrary data for the view. Declaration public object Data { get; set; } Property Value Type Description System.Object | Improve this Doc View Source Driver Points to the current driver in use by the view, it is a convenience property for simplifying the development of new views. Declaration public static ConsoleDriver Driver { get; } Property Value Type Description ConsoleDriver | Improve this Doc View Source Enabled Declaration public override bool Enabled { get; set; } Property Value Type Description System.Boolean Overrides Responder.Enabled | Improve this Doc View Source Focused Returns the currently focused view inside this view, or null if nothing is focused. Declaration public View Focused { get; } Property Value Type Description View The focused. | Improve this Doc View Source ForceValidatePosDim Forces validation with Computed layout to avoid breaking the Pos and Dim settings. Declaration public bool ForceValidatePosDim { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source Frame Gets or sets the frame for the view. The frame is relative to the view's container ( SuperView ). Declaration public virtual Rect Frame { get; set; } Property Value Type Description Rect The frame. | Improve this Doc View Source HasFocus Declaration public override bool HasFocus { get; } Property Value Type Description System.Boolean Overrides Responder.HasFocus | Improve this Doc View Source Height Gets or sets the height of the view. Only used the LayoutStyle is Computed . Declaration public Dim Height { get; set; } Property Value Type Description Dim The height. | Improve this Doc View Source HotKey Gets or sets the HotKey defined for this view. A user pressing HotKey on the keyboard while this view has focus will cause the Clicked event to fire. Declaration public virtual Key HotKey { get; set; } Property Value Type Description Key | Improve this Doc View Source HotKeySpecifier Gets or sets the specifier character for the hotkey (e.g. '_'). Set to '\\xffff' to disable hotkey support for this View instance. The default is '\\xffff'. Declaration public virtual Rune HotKeySpecifier { get; set; } Property Value Type Description System.Rune | Improve this Doc View Source Id Gets or sets an identifier for the view; Declaration public ustring Id { get; set; } Property Value Type Description NStack.ustring The identifier. | Improve this Doc View Source IsAdded Gets information if the view was already added to the SuperView . Declaration public bool IsAdded { get; } Property Value Type Description System.Boolean | Improve this Doc View Source IsCurrentTop Returns a value indicating if this View is currently on Top (Active) Declaration public bool IsCurrentTop { get; } Property Value Type Description System.Boolean | Improve this Doc View Source IsInitialized Get or sets if the View was already initialized. This derived from System.ComponentModel.ISupportInitializeNotification to allow notify all the views that are being initialized. Declaration public virtual bool IsInitialized { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source LayoutStyle Controls how the View's Frame is computed during the LayoutSubviews method, if the style is set to Absolute , LayoutSubviews does not change the Frame . If the style is Computed the Frame is updated using the X , Y , Width , and Height properties. Declaration public LayoutStyle LayoutStyle { get; set; } Property Value Type Description LayoutStyle The layout style. | Improve this Doc View Source MostFocused Returns the most focused view in the chain of subviews (the leaf view that has the focus). Declaration public View MostFocused { get; } Property Value Type Description View The most focused. | Improve this Doc View Source PreserveTrailingSpaces Gets or sets a flag that determines whether Text will have trailing spaces preserved or not when WordWrap(ustring, Int32, Boolean, Int32, TextDirection) is enabled. If `true` any trailing spaces will be trimmed when either the Text property is changed or when WordWrap(ustring, Int32, Boolean, Int32, TextDirection) is set to `true`. The default is `false`. Declaration public virtual bool PreserveTrailingSpaces { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source Shortcut This is the global setting that can be used as a global shortcut to invoke an action if provided. Declaration public Key Shortcut { get; set; } Property Value Type Description Key | Improve this Doc View Source ShortcutAction The action to run if the Shortcut is defined. Declaration public virtual Action ShortcutAction { get; set; } Property Value Type Description System.Action | Improve this Doc View Source ShortcutTag The keystroke combination used in the Shortcut as string. Declaration public ustring ShortcutTag { get; } Property Value Type Description NStack.ustring | Improve this Doc View Source Subviews This returns a list of the subviews contained by this view. Declaration public IList<View> Subviews { get; } Property Value Type Description System.Collections.Generic.IList < View > The subviews. | Improve this Doc View Source SuperView Returns the container for this view, or null if this view has not been added to a container. Declaration public View SuperView { get; } Property Value Type Description View The super view. | Improve this Doc View Source TabIndex Indicates the index of the current View from the TabIndexes list. Declaration public int TabIndex { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source TabIndexes This returns a tab index list of the subviews contained by this view. Declaration public IList<View> TabIndexes { get; } Property Value Type Description System.Collections.Generic.IList < View > The tabIndexes. | Improve this Doc View Source TabStop This only be true if the CanFocus is also true and the focus can be avoided by setting this to false Declaration public bool TabStop { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source Text The text displayed by the View . Declaration public virtual ustring Text { get; set; } Property Value Type Description NStack.ustring | Improve this Doc View Source TextAlignment Gets or sets how the View's Text is aligned horizontally when drawn. Changing this property will redisplay the View . Declaration public virtual TextAlignment TextAlignment { get; set; } Property Value Type Description TextAlignment The text alignment. | Improve this Doc View Source TextDirection Gets or sets the direction of the View's Text . Changing this property will redisplay the View . Declaration public virtual TextDirection TextDirection { get; set; } Property Value Type Description TextDirection The text alignment. | Improve this Doc View Source TextFormatter Gets or sets the TextFormatter which can be handled differently by any derived class. Declaration public TextFormatter TextFormatter { get; set; } Property Value Type Description TextFormatter | Improve this Doc View Source VerticalTextAlignment Gets or sets how the View's Text is aligned verticaly when drawn. Changing this property will redisplay the View . Declaration public virtual VerticalTextAlignment VerticalTextAlignment { get; set; } Property Value Type Description VerticalTextAlignment The text alignment. | Improve this Doc View Source Visible Declaration public override bool Visible { get; set; } Property Value Type Description System.Boolean Overrides Responder.Visible | Improve this Doc View Source WantContinuousButtonPressed Gets or sets a value indicating whether this View want continuous button pressed event. Declaration public virtual bool WantContinuousButtonPressed { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source WantMousePositionReports Gets or sets a value indicating whether this View wants mouse position reports. Declaration public virtual bool WantMousePositionReports { get; set; } Property Value Type Description System.Boolean true if want mouse position reports; otherwise, false . | Improve this Doc View Source Width Gets or sets the width of the view. Only used the LayoutStyle is Computed . Declaration public Dim Width { get; set; } Property Value Type Description Dim The width. | Improve this Doc View Source X Gets or sets the X position for the view (the column). Only used the LayoutStyle is Computed . Declaration public Pos X { get; set; } Property Value Type Description Pos The X Position. | Improve this Doc View Source Y Gets or sets the Y position for the view (the row). Only used the LayoutStyle is Computed . Declaration public Pos Y { get; set; } Property Value Type Description Pos The y position (line). Methods | Improve this Doc View Source Add(View) Adds a subview (child) to this view. Declaration public virtual void Add(View view) Parameters Type Name Description View view | Improve this Doc View Source Add(View[]) Adds the specified views (children) to the view. Declaration public void Add(params View[] views) Parameters Type Name Description View [] views Array of one or more views (can be optional parameter). | Improve this Doc View Source AddCommand(Command, Func<Nullable<Boolean>>) States that the given View supports a given command and what f to perform to make that command happen If the command already has an implementation the f will replace the old one Declaration protected void AddCommand(Command command, Func<bool?> f) Parameters Type Name Description Command command The command. System.Func < System.Nullable < System.Boolean >> f The function. | Improve this Doc View Source AddKeyBinding(Key, Command[]) Adds a new key combination that will trigger the given command (if supported by the View - see GetSupportedCommands() ) If the key is already bound to a different Command it will be rebound to this one Commands are only ever applied to the current View (i.e. this feature cannot be used to switch focus to another view and perform multiple commands there) Declaration public void AddKeyBinding(Key key, params Command[] command) Parameters Type Name Description Key key Command [] command The command(s) to run on the View when key is pressed. When specifying multiple, all commands will be applied in sequence. The bound key strike will be consumed if any took effect. | Improve this Doc View Source AddRune(Int32, Int32, Rune) Displays the specified character in the specified column and row of the View. Declaration public void AddRune(int col, int row, Rune ch) Parameters Type Name Description System.Int32 col Column (view-relative). System.Int32 row Row (view-relative). System.Rune ch Ch. | Improve this Doc View Source BeginInit() This derived from System.ComponentModel.ISupportInitializeNotification to allow notify all the views that are beginning initialized. Declaration public void BeginInit() | Improve this Doc View Source BringSubviewForward(View) Moves the subview backwards in the hierarchy, only one step Declaration public void BringSubviewForward(View subview) Parameters Type Name Description View subview The subview to send backwards | Improve this Doc View Source BringSubviewToFront(View) Brings the specified subview to the front so it is drawn on top of any other views. Declaration public void BringSubviewToFront(View subview) Parameters Type Name Description View subview The subview to send to the front | Improve this Doc View Source Clear() Clears the view region with the current color. Declaration public void Clear() | Improve this Doc View Source Clear(Rect) Clears the specified region with the current color. Declaration public void Clear(Rect regionScreen) Parameters Type Name Description Rect regionScreen The screen-relative region to clear. | Improve this Doc View Source ClearKeybinding(Command[]) Removes all key bindings that trigger the given command. Views can have multiple different keys bound to the same command and this method will clear all of them. Declaration public void ClearKeybinding(params Command[] command) Parameters Type Name Description Command [] command | Improve this Doc View Source ClearKeybinding(Key) Clears the existing keybinding (if any) for the given key Declaration public void ClearKeybinding(Key key) Parameters Type Name Description Key key | Improve this Doc View Source ClearKeybindings() Removes all bound keys from the View making including the default key combinations such as cursor navigation, scrolling etc Declaration public void ClearKeybindings() | Improve this Doc View Source ClearLayoutNeeded() Removes the Terminal.Gui.View.SetNeedsLayout setting on this view. Declaration protected void ClearLayoutNeeded() | Improve this Doc View Source ClearNeedsDisplay() Removes the SetNeedsDisplay() and the Terminal.Gui.View.ChildNeedsDisplay setting on this view. Declaration protected void ClearNeedsDisplay() | Improve this Doc View Source ClipToBounds() Sets the ConsoleDriver 's clip region to the current View's Bounds . Declaration public Rect ClipToBounds() Returns Type Description Rect The existing driver's clip region, which can be then re-applied by setting Driver .Clip ( Clip ). | Improve this Doc View Source ContainsKeyBinding(Key) Checks if key combination already exist. Declaration public bool ContainsKeyBinding(Key key) Parameters Type Name Description Key key The key to check. Returns Type Description System.Boolean true If the key already exist, false otherwise. | Improve this Doc View Source Dispose(Boolean) Declaration protected override void Dispose(bool disposing) Parameters Type Name Description System.Boolean disposing Overrides Responder.Dispose(Boolean) | Improve this Doc View Source DrawFrame(Rect, Int32, Boolean) Draws a frame in the current view, clipped by the boundary of this view Declaration public void DrawFrame(Rect region, int padding = 0, bool fill = false) Parameters Type Name Description Rect region View-relative region for the frame to be drawn. System.Int32 padding The padding to add around the outside of the drawn frame. System.Boolean fill If set to true it fill will the contents. | Improve this Doc View Source DrawHotString(ustring, Boolean, ColorScheme) Utility function to draw strings that contains a hotkey using a ColorScheme and the \"focused\" state. Declaration public void DrawHotString(ustring text, bool focused, ColorScheme scheme) Parameters Type Name Description NStack.ustring text String to display, the underscore before a letter flags the next letter as the hotkey. System.Boolean focused If set to true this uses the focused colors from the color scheme, otherwise the regular ones. ColorScheme scheme The color scheme to use. | Improve this Doc View Source DrawHotString(ustring, Attribute, Attribute) Utility function to draw strings that contain a hotkey. Declaration public void DrawHotString(ustring text, Attribute hotColor, Attribute normalColor) Parameters Type Name Description NStack.ustring text String to display, the hotkey specifier before a letter flags the next letter as the hotkey. Attribute hotColor Hot color. Attribute normalColor Normal color. | Improve this Doc View Source EndInit() This derived from System.ComponentModel.ISupportInitializeNotification to allow notify all the views that are ending initialized. Declaration public void EndInit() | Improve this Doc View Source EnsureFocus() Finds the first view in the hierarchy that wants to get the focus if nothing is currently focused, otherwise, it does nothing. Declaration public void EnsureFocus() | Improve this Doc View Source FocusFirst() Focuses the first focusable subview if one exists. Declaration public void FocusFirst() | Improve this Doc View Source FocusLast() Focuses the last focusable subview if one exists. Declaration public void FocusLast() | Improve this Doc View Source FocusNext() Focuses the next view. Declaration public bool FocusNext() Returns Type Description System.Boolean true , if next was focused, false otherwise. | Improve this Doc View Source FocusPrev() Focuses the previous view. Declaration public bool FocusPrev() Returns Type Description System.Boolean true , if previous was focused, false otherwise. | Improve this Doc View Source GetAutoSize() Gets the size to fit all text if AutoSize is true. Declaration public Size GetAutoSize() Returns Type Description Size The Size | Improve this Doc View Source GetBoundsTextFormatterSize() Gets the text formatter size from a Bounds size. Declaration public Size GetBoundsTextFormatterSize() Returns Type Description Size The text formatter size more the HotKeySpecifier length. | Improve this Doc View Source GetCurrentHeight(out Int32) Calculate the height based on the Height settings. Declaration public bool GetCurrentHeight(out int currentHeight) Parameters Type Name Description System.Int32 currentHeight The real current height. Returns Type Description System.Boolean true if the height can be directly assigned, false otherwise. | Improve this Doc View Source GetCurrentWidth(out Int32) Gets the current width based on the Width settings. Declaration public bool GetCurrentWidth(out int currentWidth) Parameters Type Name Description System.Int32 currentWidth The real current width. Returns Type Description System.Boolean true if the width can be directly assigned, false otherwise. | Improve this Doc View Source GetHotKeySpecifierLength(Boolean) Get the width or height of the HotKeySpecifier length. Declaration public int GetHotKeySpecifierLength(bool isWidth = true) Parameters Type Name Description System.Boolean isWidth true if is the width (default) false if is the height. Returns Type Description System.Int32 The length of the HotKeySpecifier . | Improve this Doc View Source GetKeyFromCommand(Command[]) Gets the key used by a command. Declaration public Key GetKeyFromCommand(params Command[] command) Parameters Type Name Description Command [] command The command to search. Returns Type Description Key The Key used by a Command | Improve this Doc View Source GetMinWidthHeight(out Size) Verifies if the minimum width or height can be sets in the view. Declaration public bool GetMinWidthHeight(out Size size) Parameters Type Name Description Size size The size. Returns Type Description System.Boolean true if the size can be set, false otherwise. | Improve this Doc View Source GetNormalColor() Determines the current ColorScheme based on the Enabled value. Declaration public virtual Attribute GetNormalColor() Returns Type Description Attribute Normal if Enabled is true or Disabled if Enabled is false . If it's overridden can return other values. | Improve this Doc View Source GetSupportedCommands() Returns all commands that are supported by this View Declaration public IEnumerable<Command> GetSupportedCommands() Returns Type Description System.Collections.Generic.IEnumerable < Command > | Improve this Doc View Source GetTextFormatterBoundsSize() Gets the bounds size from a Size . Declaration public Size GetTextFormatterBoundsSize() Returns Type Description Size The bounds size minus the HotKeySpecifier length. | Improve this Doc View Source GetTopSuperView() Get the top superview of a given View . Declaration public View GetTopSuperView() Returns Type Description View The superview view. | Improve this Doc View Source InvokeKeybindings(KeyEvent) Invokes any binding that is registered on this View and matches the keyEvent Declaration protected bool? InvokeKeybindings(KeyEvent keyEvent) Parameters Type Name Description KeyEvent keyEvent The key event passed. Returns Type Description System.Nullable < System.Boolean > | Improve this Doc View Source LayoutSubviews() Invoked when a view starts executing or when the dimensions of the view have changed, for example in response to the container view or terminal resizing. Declaration public virtual void LayoutSubviews() | Improve this Doc View Source Move(Int32, Int32, Boolean) This moves the cursor to the specified column and row in the view. Declaration public void Move(int col, int row, bool clipped = true) Parameters Type Name Description System.Int32 col Col. System.Int32 row Row. System.Boolean clipped Whether to clip the result of the ViewToScreen method, if set to true , the col, row values are clamped to the screen (terminal) dimensions (0..TerminalDim-1). | Improve this Doc View Source OnAdded(View) Method invoked when a subview is being added to this view. Declaration public virtual void OnAdded(View view) Parameters Type Name Description View view The subview being added. | Improve this Doc View Source OnCanFocusChanged() Declaration public override void OnCanFocusChanged() Overrides Responder.OnCanFocusChanged() | Improve this Doc View Source OnDrawContent(Rect) Enables overrides to draw infinitely scrolled content and/or a background behind added controls. Declaration public virtual void OnDrawContent(Rect viewport) Parameters Type Name Description Rect viewport The view-relative rectangle describing the currently visible viewport into the View | Improve this Doc View Source OnDrawContentComplete(Rect) Enables overrides after completed drawing infinitely scrolled content and/or a background behind removed controls. Declaration public virtual void OnDrawContentComplete(Rect viewport) Parameters Type Name Description Rect viewport The view-relative rectangle describing the currently visible viewport into the View | Improve this Doc View Source OnEnabledChanged() Declaration public override void OnEnabledChanged() Overrides Responder.OnEnabledChanged() | Improve this Doc View Source OnEnter(View) Declaration public override bool OnEnter(View view) Parameters Type Name Description View view Returns Type Description System.Boolean Overrides Responder.OnEnter(View) | Improve this Doc View Source OnKeyDown(KeyEvent) Declaration public override bool OnKeyDown(KeyEvent keyEvent) Parameters Type Name Description KeyEvent keyEvent Returns Type Description System.Boolean Overrides Responder.OnKeyDown(KeyEvent) | Improve this Doc View Source OnKeyUp(KeyEvent) Declaration public override bool OnKeyUp(KeyEvent keyEvent) Parameters Type Name Description KeyEvent keyEvent Returns Type Description System.Boolean Overrides Responder.OnKeyUp(KeyEvent) | Improve this Doc View Source OnLeave(View) Declaration public override bool OnLeave(View view) Parameters Type Name Description View view Returns Type Description System.Boolean Overrides Responder.OnLeave(View) | Improve this Doc View Source OnMouseClick(View.MouseEventArgs) Invokes the MouseClick event. Declaration protected bool OnMouseClick(View.MouseEventArgs args) Parameters Type Name Description View.MouseEventArgs args Returns Type Description System.Boolean | Improve this Doc View Source OnMouseEnter(MouseEvent) Declaration public override bool OnMouseEnter(MouseEvent mouseEvent) Parameters Type Name Description MouseEvent mouseEvent Returns Type Description System.Boolean Overrides Responder.OnMouseEnter(MouseEvent) | Improve this Doc View Source OnMouseEvent(MouseEvent) Method invoked when a mouse event is generated Declaration public virtual bool OnMouseEvent(MouseEvent mouseEvent) Parameters Type Name Description MouseEvent mouseEvent Returns Type Description System.Boolean true , if the event was handled, false otherwise. | Improve this Doc View Source OnMouseLeave(MouseEvent) Declaration public override bool OnMouseLeave(MouseEvent mouseEvent) Parameters Type Name Description MouseEvent mouseEvent Returns Type Description System.Boolean Overrides Responder.OnMouseLeave(MouseEvent) | Improve this Doc View Source OnRemoved(View) Method invoked when a subview is being removed from this view. Declaration public virtual void OnRemoved(View view) Parameters Type Name Description View view The subview being removed. | Improve this Doc View Source OnVisibleChanged() Declaration public override void OnVisibleChanged() Overrides Responder.OnVisibleChanged() | Improve this Doc View Source PositionCursor() Positions the cursor in the right position based on the currently focused view in the chain. Declaration public virtual void PositionCursor() | Improve this Doc View Source ProcessColdKey(KeyEvent) Declaration public override bool ProcessColdKey(KeyEvent keyEvent) Parameters Type Name Description KeyEvent keyEvent Returns Type Description System.Boolean Overrides Responder.ProcessColdKey(KeyEvent) | Improve this Doc View Source ProcessHotKey(KeyEvent) Declaration public override bool ProcessHotKey(KeyEvent keyEvent) Parameters Type Name Description KeyEvent keyEvent Returns Type Description System.Boolean Overrides Responder.ProcessHotKey(KeyEvent) | Improve this Doc View Source ProcessKey(KeyEvent) Declaration public override bool ProcessKey(KeyEvent keyEvent) Parameters Type Name Description KeyEvent keyEvent Returns Type Description System.Boolean Overrides Responder.ProcessKey(KeyEvent) | Improve this Doc View Source ProcessResizeView() Can be overridden if the view resize behavior is different than the default. Declaration protected virtual void ProcessResizeView() | Improve this Doc View Source Redraw(Rect) Redraws this view and its subviews; only redraws the views that have been flagged for a re-display. Declaration public virtual void Redraw(Rect bounds) Parameters Type Name Description Rect bounds The bounds (view-relative region) to redraw. | Improve this Doc View Source Remove(View) Removes a subview added via Add(View) or Add(View[]) from this View. Declaration public virtual void Remove(View view) Parameters Type Name Description View view | Improve this Doc View Source RemoveAll() Removes all subviews (children) added via Add(View) or Add(View[]) from this View. Declaration public virtual void RemoveAll() | Improve this Doc View Source ReplaceKeyBinding(Key, Key) Replaces a key combination already bound to Command . Declaration protected void ReplaceKeyBinding(Key fromKey, Key toKey) Parameters Type Name Description Key fromKey The key to be replaced. Key toKey The new key to be used. | Improve this Doc View Source ScreenToView(Int32, Int32) Converts a point from screen-relative coordinates to view-relative coordinates. Declaration public Point ScreenToView(int x, int y) Parameters Type Name Description System.Int32 x X screen-coordinate point. System.Int32 y Y screen-coordinate point. Returns Type Description Point The mapped point. | Improve this Doc View Source SendSubviewBackwards(View) Moves the subview backwards in the hierarchy, only one step Declaration public void SendSubviewBackwards(View subview) Parameters Type Name Description View subview The subview to send backwards | Improve this Doc View Source SendSubviewToBack(View) Sends the specified subview to the front so it is the first view drawn Declaration public void SendSubviewToBack(View subview) Parameters Type Name Description View subview The subview to send to the front | Improve this Doc View Source SetChildNeedsDisplay() Indicates that any child views (in the Subviews list) need to be repainted. Declaration public void SetChildNeedsDisplay() | Improve this Doc View Source SetClip(Rect) Sets the clip region to the specified view-relative region. Declaration public Rect SetClip(Rect region) Parameters Type Name Description Rect region View-relative clip region. Returns Type Description Rect The previous screen-relative clip region. | Improve this Doc View Source SetFocus() Causes the specified view and the entire parent hierarchy to have the focused order updated. Declaration public void SetFocus() | Improve this Doc View Source SetHeight(Int32, out Int32) Calculate the height based on the Height settings. Declaration public bool SetHeight(int desiredHeight, out int resultHeight) Parameters Type Name Description System.Int32 desiredHeight The desired height. System.Int32 resultHeight The real result height. Returns Type Description System.Boolean true if the height can be directly assigned, false otherwise. | Improve this Doc View Source SetMinWidthHeight() Sets the minimum width or height if the view can be resized. Declaration public bool SetMinWidthHeight() Returns Type Description System.Boolean true if the size can be set, false otherwise. | Improve this Doc View Source SetNeedsDisplay() Sets a flag indicating this view needs to be redisplayed because its state has changed. Declaration public void SetNeedsDisplay() | Improve this Doc View Source SetNeedsDisplay(Rect) Flags the view-relative region on this View as needing to be repainted. Declaration public void SetNeedsDisplay(Rect region) Parameters Type Name Description Rect region The view-relative region that must be flagged for repaint. | Improve this Doc View Source SetWidth(Int32, out Int32) Calculate the width based on the Width settings. Declaration public bool SetWidth(int desiredWidth, out int resultWidth) Parameters Type Name Description System.Int32 desiredWidth The desired width. System.Int32 resultWidth The real result width. Returns Type Description System.Boolean true if the width can be directly assigned, false otherwise. | Improve this Doc View Source ToString() Pretty prints the View Declaration public override string ToString() Returns Type Description System.String Overrides System.Object.ToString() | Improve this Doc View Source UpdateTextFormatterText() Can be overridden if the Text has different format than the default. Declaration protected virtual void UpdateTextFormatterText() Events | Improve this Doc View Source Added Event fired when a subview is being added to this view. Declaration public event Action<View> Added Event Type Type Description System.Action < View > | Improve this Doc View Source CanFocusChanged Event fired when the CanFocus value is being changed. Declaration public event Action CanFocusChanged Event Type Type Description System.Action | Improve this Doc View Source DrawContent Event invoked when the content area of the View is to be drawn. Declaration public event Action<Rect> DrawContent Event Type Type Description System.Action < Rect > | Improve this Doc View Source DrawContentComplete Event invoked when the content area of the View is completed drawing. Declaration public event Action<Rect> DrawContentComplete Event Type Type Description System.Action < Rect > | Improve this Doc View Source EnabledChanged Event fired when the Enabled value is being changed. Declaration public event Action EnabledChanged Event Type Type Description System.Action | Improve this Doc View Source Enter Event fired when the view gets focus. Declaration public event Action<View.FocusEventArgs> Enter Event Type Type Description System.Action < View.FocusEventArgs > | Improve this Doc View Source HotKeyChanged Event invoked when the HotKey is changed. Declaration public event Action<Key> HotKeyChanged Event Type Type Description System.Action < Key > | Improve this Doc View Source Initialized Event called only once when the View is being initialized for the first time. Allows configurations and assignments to be performed before the View being shown. This derived from System.ComponentModel.ISupportInitializeNotification to allow notify all the views that are being initialized. Declaration public event EventHandler Initialized Event Type Type Description System.EventHandler | Improve this Doc View Source KeyDown Invoked when a key is pressed Declaration public event Action<View.KeyEventEventArgs> KeyDown Event Type Type Description System.Action < View.KeyEventEventArgs > | Improve this Doc View Source KeyPress Invoked when a character key is pressed and occurs after the key up event. Declaration public event Action<View.KeyEventEventArgs> KeyPress Event Type Type Description System.Action < View.KeyEventEventArgs > | Improve this Doc View Source KeyUp Invoked when a key is released Declaration public event Action<View.KeyEventEventArgs> KeyUp Event Type Type Description System.Action < View.KeyEventEventArgs > | Improve this Doc View Source LayoutComplete Fired after the Views's LayoutSubviews() method has completed. Declaration public event Action<View.LayoutEventArgs> LayoutComplete Event Type Type Description System.Action < View.LayoutEventArgs > | Improve this Doc View Source LayoutStarted Fired after the Views's LayoutSubviews() method has completed. Declaration public event Action<View.LayoutEventArgs> LayoutStarted Event Type Type Description System.Action < View.LayoutEventArgs > | Improve this Doc View Source Leave Event fired when the view looses focus. Declaration public event Action<View.FocusEventArgs> Leave Event Type Type Description System.Action < View.FocusEventArgs > | Improve this Doc View Source MouseClick Event fired when a mouse event is generated. Declaration public event Action<View.MouseEventArgs> MouseClick Event Type Type Description System.Action < View.MouseEventArgs > | Improve this Doc View Source MouseEnter Event fired when the view receives the mouse event for the first time. Declaration public event Action<View.MouseEventArgs> MouseEnter Event Type Type Description System.Action < View.MouseEventArgs > | Improve this Doc View Source MouseLeave Event fired when the view receives a mouse event for the last time. Declaration public event Action<View.MouseEventArgs> MouseLeave Event Type Type Description System.Action < View.MouseEventArgs > | Improve this Doc View Source Removed Event fired when a subview is being removed from this view. Declaration public event Action<View> Removed Event Type Type Description System.Action < View > | Improve this Doc View Source VisibleChanged Event fired when the Visible value is being changed. Declaration public event Action VisibleChanged Event Type Type Description System.Action Implements System.IDisposable System.ComponentModel.ISupportInitializeNotification System.ComponentModel.ISupportInitialize"
  },
  "api/Terminal.Gui/Terminal.Gui.View.KeyEventEventArgs.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.View.KeyEventEventArgs.html",
    "title": "Class View.KeyEventEventArgs",
    "keywords": "Class View.KeyEventEventArgs Defines the event arguments for KeyEvent Inheritance System.Object System.EventArgs View.KeyEventEventArgs Inherited Members System.EventArgs.Empty System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Terminal.Gui Assembly : Terminal.Gui.dll Syntax public class KeyEventEventArgs : EventArgs Constructors | Improve this Doc View Source KeyEventEventArgs(KeyEvent) Constructs. Declaration public KeyEventEventArgs(KeyEvent ke) Parameters Type Name Description KeyEvent ke Properties | Improve this Doc View Source Handled Indicates if the current Key event has already been processed and the driver should stop notifying any other event subscriber. Its important to set this value to true specially when updating any View's layout from inside the subscriber method. Declaration public bool Handled { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source KeyEvent The KeyEvent for the event. Declaration public KeyEvent KeyEvent { get; set; } Property Value Type Description KeyEvent"
  },
  "api/Terminal.Gui/Terminal.Gui.View.LayoutEventArgs.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.View.LayoutEventArgs.html",
    "title": "Class View.LayoutEventArgs",
    "keywords": "Class View.LayoutEventArgs Event arguments for the LayoutComplete event. Inheritance System.Object System.EventArgs View.LayoutEventArgs Inherited Members System.EventArgs.Empty System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Terminal.Gui Assembly : Terminal.Gui.dll Syntax public class LayoutEventArgs : EventArgs Properties | Improve this Doc View Source OldBounds The view-relative bounds of the View before it was laid out. Declaration public Rect OldBounds { get; set; } Property Value Type Description Rect"
  },
  "api/Terminal.Gui/Terminal.Gui.View.MouseEventArgs.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.View.MouseEventArgs.html",
    "title": "Class View.MouseEventArgs",
    "keywords": "Class View.MouseEventArgs Specifies the event arguments for MouseEvent Inheritance System.Object System.EventArgs View.MouseEventArgs Inherited Members System.EventArgs.Empty System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Terminal.Gui Assembly : Terminal.Gui.dll Syntax public class MouseEventArgs : EventArgs Constructors | Improve this Doc View Source MouseEventArgs(MouseEvent) Constructs. Declaration public MouseEventArgs(MouseEvent me) Parameters Type Name Description MouseEvent me Properties | Improve this Doc View Source Handled Indicates if the current mouse event has already been processed and the driver should stop notifying any other event subscriber. Its important to set this value to true specially when updating any View's layout from inside the subscriber method. Declaration public bool Handled { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source MouseEvent The MouseEvent for the event. Declaration public MouseEvent MouseEvent { get; set; } Property Value Type Description MouseEvent"
  },
  "api/Terminal.Gui/Terminal.Gui.Window.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.Window.html",
    "title": "Class Window",
    "keywords": "Class Window A Toplevel View that draws a border around its Frame with a Title at the top. Inheritance System.Object Responder View Toplevel Window Dialog Implements System.IDisposable System.ComponentModel.ISupportInitializeNotification System.ComponentModel.ISupportInitialize Remarks The 'client area' of a Window is a rectangle deflated by one or more rows/columns from Bounds . A this time there is no API to determine this rectangle. Inherited Members Toplevel.Running Toplevel.Loaded Toplevel.Ready Toplevel.Unloaded Toplevel.Activate Toplevel.Deactivate Toplevel.ChildClosed Toplevel.AllChildClosed Toplevel.Closing Toplevel.Closed Toplevel.ChildLoaded Toplevel.ChildUnloaded Toplevel.Resized Toplevel.OnLoaded() Toplevel.AlternateForwardKeyChanged Toplevel.OnAlternateForwardKeyChanged(Key) Toplevel.AlternateBackwardKeyChanged Toplevel.OnAlternateBackwardKeyChanged(Key) Toplevel.QuitKeyChanged Toplevel.OnQuitKeyChanged(Key) Toplevel.Create() Toplevel.CanFocus Toplevel.Modal Toplevel.MenuBar Toplevel.StatusBar Toplevel.IsMdiContainer Toplevel.IsMdiChild Toplevel.OnKeyDown(KeyEvent) Toplevel.OnKeyUp(KeyEvent) Toplevel.ProcessKey(KeyEvent) Toplevel.ProcessColdKey(KeyEvent) Toplevel.PositionToplevel(Toplevel) Toplevel.MouseEvent(MouseEvent) Toplevel.WillPresent() Toplevel.MoveNext() Toplevel.MovePrevious() Toplevel.RequestStop() Toplevel.RequestStop(Toplevel) Toplevel.PositionCursor() Toplevel.GetTopMdiChild(Type, String[]) Toplevel.ShowChild(Toplevel) View.Added View.Removed View.Enter View.Leave View.MouseEnter View.MouseLeave View.MouseClick View.CanFocusChanged View.EnabledChanged View.VisibleChanged View.HotKeyChanged View.HotKey View.HotKeySpecifier View.Shortcut View.ShortcutTag View.ShortcutAction View.Data View.Driver View.Subviews View.TabIndexes View.TabIndex View.TabStop View.Id View.IsCurrentTop View.WantMousePositionReports View.WantContinuousButtonPressed View.Frame View.LayoutStyle View.Bounds View.X View.Y View.Width View.Height View.ForceValidatePosDim View.GetMinWidthHeight(Size) View.SetMinWidthHeight() View.TextFormatter View.SuperView View.UpdateTextFormatterText() View.ProcessResizeView() View.SetNeedsDisplay() View.ClearLayoutNeeded() View.SetNeedsDisplay(Rect) View.SetChildNeedsDisplay() View.Add(View[]) View.BringSubviewToFront(View) View.SendSubviewToBack(View) View.SendSubviewBackwards(View) View.BringSubviewForward(View) View.Clear() View.Clear(Rect) View.ScreenToView(Int32, Int32) View.ClipToBounds() View.SetClip(Rect) View.DrawFrame(Rect, Int32, Boolean) View.DrawHotString(ustring, Attribute, Attribute) View.DrawHotString(ustring, Boolean, ColorScheme) View.Move(Int32, Int32, Boolean) View.HasFocus View.OnAdded(View) View.OnRemoved(View) View.OnEnter(View) View.OnLeave(View) View.Focused View.MostFocused View.ColorScheme View.AddRune(Int32, Int32, Rune) View.ClearNeedsDisplay() View.DrawContent View.OnDrawContent(Rect) View.DrawContentComplete View.OnDrawContentComplete(Rect) View.SetFocus() View.KeyPress View.InvokeKeybindings(KeyEvent) View.AddKeyBinding(Key, Command[]) View.ReplaceKeyBinding(Key, Key) View.ContainsKeyBinding(Key) View.ClearKeybindings() View.ClearKeybinding(Key) View.ClearKeybinding(Command[]) View.AddCommand(Command, Func<Nullable<Boolean>>) View.GetSupportedCommands() View.GetKeyFromCommand(Command[]) View.ProcessHotKey(KeyEvent) View.KeyDown View.KeyUp View.EnsureFocus() View.FocusFirst() View.FocusLast() View.FocusPrev() View.FocusNext() View.LayoutStarted View.LayoutComplete View.Initialized View.LayoutSubviews() View.AutoSize View.PreserveTrailingSpaces View.VerticalTextAlignment View.TextDirection View.IsInitialized View.IsAdded View.Enabled View.Visible View.ToString() View.GetAutoSize() View.GetHotKeySpecifierLength(Boolean) View.GetTextFormatterBoundsSize() View.GetBoundsTextFormatterSize() View.OnMouseEnter(MouseEvent) View.OnMouseLeave(MouseEvent) View.OnMouseEvent(MouseEvent) View.OnMouseClick(View.MouseEventArgs) View.OnEnabledChanged() View.OnVisibleChanged() View.Dispose(Boolean) View.BeginInit() View.EndInit() View.SetWidth(Int32, Int32) View.SetHeight(Int32, Int32) View.GetCurrentWidth(Int32) View.GetCurrentHeight(Int32) View.GetNormalColor() View.GetTopSuperView() Responder.Dispose() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Terminal.Gui Assembly : Terminal.Gui.dll Syntax public class Window : Toplevel, IDisposable, ISupportInitializeNotification, ISupportInitialize Constructors | Improve this Doc View Source Window() Initializes a new instance of the Window class using Computed positioning. Declaration public Window() | Improve this Doc View Source Window(ustring) Initializes a new instance of the Window class with an optional title using Computed positioning. Declaration public Window(ustring title = null) Parameters Type Name Description NStack.ustring title Title. | Improve this Doc View Source Window(ustring, Int32, Border) Initializes a new instance of the Window using Computed positioning, and an optional title. Declaration public Window(ustring title = null, int padding = 0, Border border = null) Parameters Type Name Description NStack.ustring title Title. System.Int32 padding Number of characters to use for padding of the drawn frame. Border border The Border . | Improve this Doc View Source Window(Rect, ustring) Initializes a new instance of the Window class with an optional title using Absolute positioning. Declaration public Window(Rect frame, ustring title = null) Parameters Type Name Description Rect frame Superview-relative rectangle specifying the location and size NStack.ustring title Title | Improve this Doc View Source Window(Rect, ustring, Int32, Border) Initializes a new instance of the Window using Absolute positioning with the specified frame for its location, with the specified frame padding, and an optional title. Declaration public Window(Rect frame, ustring title = null, int padding = 0, Border border = null) Parameters Type Name Description Rect frame Superview-relative rectangle specifying the location and size NStack.ustring title Title System.Int32 padding Number of characters to use for padding of the drawn frame. Border border The Border . Properties | Improve this Doc View Source Border Declaration public override Border Border { get; set; } Property Value Type Description Border Overrides View.Border | Improve this Doc View Source Text The text displayed by the Label . Declaration public override ustring Text { get; set; } Property Value Type Description NStack.ustring Overrides View.Text | Improve this Doc View Source TextAlignment Controls the text-alignment property of the label, changing it will redisplay the Label . Declaration public override TextAlignment TextAlignment { get; set; } Property Value Type Description TextAlignment The text alignment. Overrides View.TextAlignment | Improve this Doc View Source Title The title to be displayed for this window. Declaration public ustring Title { get; set; } Property Value Type Description NStack.ustring The title Methods | Improve this Doc View Source Add(View) Declaration public override void Add(View view) Parameters Type Name Description View view Overrides Toplevel.Add(View) | Improve this Doc View Source OnCanFocusChanged() Declaration public override void OnCanFocusChanged() Overrides View.OnCanFocusChanged() | Improve this Doc View Source OnTitleChanged(ustring, ustring) Called when the Title has been changed. Invokes the TitleChanged event. Declaration public virtual void OnTitleChanged(ustring oldTitle, ustring newTitle) Parameters Type Name Description NStack.ustring oldTitle The Title that is/has been replaced. NStack.ustring newTitle The new Title to be replaced. | Improve this Doc View Source OnTitleChanging(ustring, ustring) Called before the Title changes. Invokes the TitleChanging event, which can be cancelled. Declaration public virtual bool OnTitleChanging(ustring oldTitle, ustring newTitle) Parameters Type Name Description NStack.ustring oldTitle The Title that is/has been replaced. NStack.ustring newTitle The new Title to be replaced. Returns Type Description System.Boolean `true` if an event handler cancelled the Title change. | Improve this Doc View Source Redraw(Rect) Declaration public override void Redraw(Rect bounds) Parameters Type Name Description Rect bounds Overrides Toplevel.Redraw(Rect) | Improve this Doc View Source Remove(View) Declaration public override void Remove(View view) Parameters Type Name Description View view Overrides Toplevel.Remove(View) | Improve this Doc View Source RemoveAll() Declaration public override void RemoveAll() Overrides Toplevel.RemoveAll() Events | Improve this Doc View Source TitleChanged Event fired after the Title has been changed. Declaration public event Action<Window.TitleEventArgs> TitleChanged Event Type Type Description System.Action < Window.TitleEventArgs > | Improve this Doc View Source TitleChanging Event fired when the Title is changing. Set Cancel to `true` to cancel the Title change. Declaration public event Action<Window.TitleEventArgs> TitleChanging Event Type Type Description System.Action < Window.TitleEventArgs > Implements System.IDisposable System.ComponentModel.ISupportInitializeNotification System.ComponentModel.ISupportInitialize"
  },
  "api/Terminal.Gui/Terminal.Gui.Window.TitleEventArgs.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.Window.TitleEventArgs.html",
    "title": "Class Window.TitleEventArgs",
    "keywords": "Class Window.TitleEventArgs An System.EventArgs which allows passing a cancelable new Title value event. Inheritance System.Object System.EventArgs Window.TitleEventArgs Inherited Members System.EventArgs.Empty System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Terminal.Gui Assembly : Terminal.Gui.dll Syntax public class TitleEventArgs : EventArgs Constructors | Improve this Doc View Source TitleEventArgs(ustring, ustring) Initializes a new instance of Window.TitleEventArgs Declaration public TitleEventArgs(ustring oldTitle, ustring newTitle) Parameters Type Name Description NStack.ustring oldTitle The Title that is/has been replaced. NStack.ustring newTitle The new Title to be replaced. Properties | Improve this Doc View Source Cancel Flag which allows cancelling the Title change. Declaration public bool Cancel { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source NewTitle The new Window Title. Declaration public ustring NewTitle { get; set; } Property Value Type Description NStack.ustring | Improve this Doc View Source OldTitle The old Window Title. Declaration public ustring OldTitle { get; set; } Property Value Type Description NStack.ustring"
  },
  "api/Terminal.Gui/Terminal.Gui.Wizard.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.Wizard.html",
    "title": "Class Wizard",
    "keywords": "Class Wizard Provides navigation and a user interface (UI) to collect related data across multiple steps. Each step ( Wizard.WizardStep ) can host arbitrary View s, much like a Dialog . Each step also has a pane for help text. Along the bottom of the Wizard view are customizable buttons enabling the user to navigate forward and backward through the Wizard. Inheritance System.Object Responder View Toplevel Window Dialog Wizard Implements System.IDisposable System.ComponentModel.ISupportInitializeNotification System.ComponentModel.ISupportInitialize Remarks The Wizard can be displayed either as a modal (pop-up) Window (like Dialog ) or as an embedded View . By default, Modal is true . In this case launch the Wizard with Application.Run(wizard) . See Modal for more details. Examples using Terminal.Gui; using NStack; Application.Init(); var wizard = new Wizard ($\"Setup Wizard\"); // Add 1st step var firstStep = new Wizard.WizardStep (\"End User License Agreement\"); wizard.AddStep(firstStep); firstStep.NextButtonText = \"Accept!\"; firstStep.HelpText = \"This is the End User License Agreement.\"; // Add 2nd step var secondStep = new Wizard.WizardStep (\"Second Step\"); wizard.AddStep(secondStep); secondStep.HelpText = \"This is the help text for the Second Step.\"; var lbl = new Label (\"Name:\") { AutoSize = true }; secondStep.Add(lbl); var name = new TextField () { X = Pos.Right (lbl) + 1, Width = Dim.Fill () - 1 }; secondStep.Add(name); wizard.Finished += (args) => { MessageBox.Query(\"Wizard\", $\"Finished. The Name entered is '{name.Text}'\", \"Ok\"); Application.RequestStop(); }; Application.Top.Add (wizard); Application.Run (); Application.Shutdown (); Inherited Members Dialog.AddButton(Button) Dialog.ButtonAlignment Window.Border Window.Add(View) Window.Remove(View) Window.RemoveAll() Window.Redraw(Rect) Window.OnCanFocusChanged() Window.Text Window.TextAlignment Window.OnTitleChanging(ustring, ustring) Window.TitleChanging Window.OnTitleChanged(ustring, ustring) Window.TitleChanged Toplevel.Running Toplevel.Loaded Toplevel.Ready Toplevel.Unloaded Toplevel.Activate Toplevel.Deactivate Toplevel.ChildClosed Toplevel.AllChildClosed Toplevel.Closing Toplevel.Closed Toplevel.ChildLoaded Toplevel.ChildUnloaded Toplevel.Resized Toplevel.OnLoaded() Toplevel.AlternateForwardKeyChanged Toplevel.OnAlternateForwardKeyChanged(Key) Toplevel.AlternateBackwardKeyChanged Toplevel.OnAlternateBackwardKeyChanged(Key) Toplevel.QuitKeyChanged Toplevel.OnQuitKeyChanged(Key) Toplevel.Create() Toplevel.CanFocus Toplevel.MenuBar Toplevel.StatusBar Toplevel.IsMdiContainer Toplevel.IsMdiChild Toplevel.OnKeyDown(KeyEvent) Toplevel.OnKeyUp(KeyEvent) Toplevel.ProcessColdKey(KeyEvent) Toplevel.PositionToplevel(Toplevel) Toplevel.MouseEvent(MouseEvent) Toplevel.WillPresent() Toplevel.MoveNext() Toplevel.MovePrevious() Toplevel.RequestStop() Toplevel.RequestStop(Toplevel) Toplevel.PositionCursor() Toplevel.GetTopMdiChild(Type, String[]) Toplevel.ShowChild(Toplevel) View.Added View.Removed View.Enter View.Leave View.MouseEnter View.MouseLeave View.MouseClick View.CanFocusChanged View.EnabledChanged View.VisibleChanged View.HotKeyChanged View.HotKey View.HotKeySpecifier View.Shortcut View.ShortcutTag View.ShortcutAction View.Data View.Driver View.Subviews View.TabIndexes View.TabIndex View.TabStop View.Id View.IsCurrentTop View.WantMousePositionReports View.WantContinuousButtonPressed View.Frame View.LayoutStyle View.Bounds View.X View.Y View.Width View.Height View.ForceValidatePosDim View.GetMinWidthHeight(Size) View.SetMinWidthHeight() View.TextFormatter View.SuperView View.UpdateTextFormatterText() View.ProcessResizeView() View.SetNeedsDisplay() View.ClearLayoutNeeded() View.SetNeedsDisplay(Rect) View.SetChildNeedsDisplay() View.Add(View[]) View.BringSubviewToFront(View) View.SendSubviewToBack(View) View.SendSubviewBackwards(View) View.BringSubviewForward(View) View.Clear() View.Clear(Rect) View.ScreenToView(Int32, Int32) View.ClipToBounds() View.SetClip(Rect) View.DrawFrame(Rect, Int32, Boolean) View.DrawHotString(ustring, Attribute, Attribute) View.DrawHotString(ustring, Boolean, ColorScheme) View.Move(Int32, Int32, Boolean) View.HasFocus View.OnAdded(View) View.OnRemoved(View) View.OnEnter(View) View.OnLeave(View) View.Focused View.MostFocused View.ColorScheme View.AddRune(Int32, Int32, Rune) View.ClearNeedsDisplay() View.DrawContent View.OnDrawContent(Rect) View.DrawContentComplete View.OnDrawContentComplete(Rect) View.SetFocus() View.KeyPress View.InvokeKeybindings(KeyEvent) View.AddKeyBinding(Key, Command[]) View.ReplaceKeyBinding(Key, Key) View.ContainsKeyBinding(Key) View.ClearKeybindings() View.ClearKeybinding(Key) View.ClearKeybinding(Command[]) View.AddCommand(Command, Func<Nullable<Boolean>>) View.GetSupportedCommands() View.GetKeyFromCommand(Command[]) View.ProcessHotKey(KeyEvent) View.KeyDown View.KeyUp View.EnsureFocus() View.FocusFirst() View.FocusLast() View.FocusPrev() View.FocusNext() View.LayoutStarted View.LayoutComplete View.Initialized View.LayoutSubviews() View.AutoSize View.PreserveTrailingSpaces View.VerticalTextAlignment View.TextDirection View.IsInitialized View.IsAdded View.Enabled View.Visible View.ToString() View.GetAutoSize() View.GetHotKeySpecifierLength(Boolean) View.GetTextFormatterBoundsSize() View.GetBoundsTextFormatterSize() View.OnMouseEnter(MouseEvent) View.OnMouseLeave(MouseEvent) View.OnMouseEvent(MouseEvent) View.OnMouseClick(View.MouseEventArgs) View.OnEnabledChanged() View.OnVisibleChanged() View.Dispose(Boolean) View.BeginInit() View.EndInit() View.SetWidth(Int32, Int32) View.SetHeight(Int32, Int32) View.GetCurrentWidth(Int32) View.GetCurrentHeight(Int32) View.GetNormalColor() View.GetTopSuperView() Responder.Dispose() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Terminal.Gui Assembly : Terminal.Gui.dll Syntax public class Wizard : Dialog, IDisposable, ISupportInitializeNotification, ISupportInitialize Constructors | Improve this Doc View Source Wizard() Initializes a new instance of the Wizard class using Computed positioning. Declaration public Wizard() | Improve this Doc View Source Wizard(ustring) Initializes a new instance of the Wizard class using Computed positioning. Declaration public Wizard(ustring title) Parameters Type Name Description NStack.ustring title Sets the Title for the Wizard. Properties | Improve this Doc View Source BackButton If the CurrentStep is not the first step in the wizard, this button causes the MovingBack event to be fired and the wizard moves to the previous step. Declaration public Button BackButton { get; } Property Value Type Description Button | Improve this Doc View Source CurrentStep Gets or sets the currently active Wizard.WizardStep . Declaration public Wizard.WizardStep CurrentStep { get; set; } Property Value Type Description Wizard.WizardStep | Improve this Doc View Source Modal Determines whether the Wizard is displayed as modal pop-up or not. The default is true . The Wizard will be shown with a frame with Title and will behave like any Toplevel window. If set to false the Wizard will have no frame and will behave like any embedded View . To use Wizard as an embedded View Set Modal to false . Add the Wizard to a containing view with Add(View) . If a non-Modal Wizard is added to the application after Run(Func<Exception, Boolean>) has been called the first step must be explicitly set by setting CurrentStep to GetNextStep() : wizard.CurrentStep = wizard.GetNextStep(); Declaration public bool Modal { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source NextFinishButton If the CurrentStep is the last step in the wizard, this button causes the Finished event to be fired and the wizard to close. If the step is not the last step, the MovingNext event will be fired and the wizard will move next step. Declaration public Button NextFinishButton { get; } Property Value Type Description Button | Improve this Doc View Source Title The title of the Wizard, shown at the top of the Wizard with \" - currentStep.Title\" appended. Declaration public ustring Title { get; set; } Property Value Type Description NStack.ustring Methods | Improve this Doc View Source AddStep(Wizard.WizardStep) Adds a step to the wizard. The Next and Back buttons navigate through the added steps in the order they were added. Declaration public void AddStep(Wizard.WizardStep newStep) Parameters Type Name Description Wizard.WizardStep newStep | Improve this Doc View Source GetFirstStep() Returns the first enabled step in the Wizard Declaration public Wizard.WizardStep GetFirstStep() Returns Type Description Wizard.WizardStep The last enabled step | Improve this Doc View Source GetLastStep() Returns the last enabled step in the Wizard Declaration public Wizard.WizardStep GetLastStep() Returns Type Description Wizard.WizardStep The last enabled step | Improve this Doc View Source GetNextStep() Returns the next enabled Wizard.WizardStep after the current step. Takes into account steps which are disabled. If CurrentStep is null returns the first enabled step. Declaration public Wizard.WizardStep GetNextStep() Returns Type Description Wizard.WizardStep The next step after the current step, if there is one; otherwise returns null , which indicates either there are no enabled steps or the current step is the last enabled step. | Improve this Doc View Source GetPreviousStep() Returns the first enabled Wizard.WizardStep before the current step. Takes into account steps which are disabled. If CurrentStep is null returns the last enabled step. Declaration public Wizard.WizardStep GetPreviousStep() Returns Type Description Wizard.WizardStep The first step ahead of the current step, if there is one; otherwise returns null , which indicates either there are no enabled steps or the current step is the first enabled step. | Improve this Doc View Source GoBack() Causes the wizad to move to the previous enabled step (or first step if CurrentStep is not set). If there is no previous step, does nothing. Declaration public void GoBack() | Improve this Doc View Source GoNext() Causes the wizad to move to the next enabled step (or last step if CurrentStep is not set). If there is no previous step, does nothing. Declaration public void GoNext() | Improve this Doc View Source GoToStep(Wizard.WizardStep) Changes to the specified Wizard.WizardStep . Declaration public bool GoToStep(Wizard.WizardStep newStep) Parameters Type Name Description Wizard.WizardStep newStep The step to go to. Returns Type Description System.Boolean True if the transition to the step succeeded. False if the step was not found or the operation was cancelled. | Improve this Doc View Source OnStepChanged(Wizard.WizardStep, Wizard.WizardStep) Called when the Wizard has completed transition to a new Wizard.WizardStep . Fires the StepChanged event. Declaration public virtual bool OnStepChanged(Wizard.WizardStep oldStep, Wizard.WizardStep newStep) Parameters Type Name Description Wizard.WizardStep oldStep The step the Wizard changed from Wizard.WizardStep newStep The step the Wizard has changed to Returns Type Description System.Boolean True if the change is to be cancelled. | Improve this Doc View Source OnStepChanging(Wizard.WizardStep, Wizard.WizardStep) Called when the Wizard is about to transition to another Wizard.WizardStep . Fires the StepChanging event. Declaration public virtual bool OnStepChanging(Wizard.WizardStep oldStep, Wizard.WizardStep newStep) Parameters Type Name Description Wizard.WizardStep oldStep The step the Wizard is about to change from Wizard.WizardStep newStep The step the Wizard is about to change to Returns Type Description System.Boolean True if the change is to be cancelled. | Improve this Doc View Source ProcessKey(KeyEvent) Wizard is derived from Dialog and Dialog causes Esc to call RequestStop(Toplevel) , closing the Dialog. Wizard overrides ProcessKey(KeyEvent) to instead fire the Cancelled event when Wizard is being used as a non-modal (see Modal . See ProcessKey(KeyEvent) for more. Declaration public override bool ProcessKey(KeyEvent kb) Parameters Type Name Description KeyEvent kb Returns Type Description System.Boolean Overrides Dialog.ProcessKey(KeyEvent) Events | Improve this Doc View Source Cancelled Raised when the user has cancelled the Wizard by pressin the Esc key. To prevent a modal ( Modal is true ) Wizard from closing, cancel the event by setting Cancel to true before returning from the event handler. Declaration public event Action<Wizard.WizardButtonEventArgs> Cancelled Event Type Type Description System.Action < Wizard.WizardButtonEventArgs > | Improve this Doc View Source Finished Raised when the Next/Finish button in the Wizard is clicked. The Next/Finish button is always the last button in the array of Buttons passed to the Wizard constructor, if any. This event is only raised if the CurrentStep is the last Step in the Wizard flow (otherwise the Finished event is raised). Declaration public event Action<Wizard.WizardButtonEventArgs> Finished Event Type Type Description System.Action < Wizard.WizardButtonEventArgs > | Improve this Doc View Source MovingBack Raised when the Back button in the Wizard is clicked. The Back button is always the first button in the array of Buttons passed to the Wizard constructor, if any. Declaration public event Action<Wizard.WizardButtonEventArgs> MovingBack Event Type Type Description System.Action < Wizard.WizardButtonEventArgs > | Improve this Doc View Source MovingNext Raised when the Next/Finish button in the Wizard is clicked (or the user presses Enter). The Next/Finish button is always the last button in the array of Buttons passed to the Wizard constructor, if any. This event is only raised if the CurrentStep is the last Step in the Wizard flow (otherwise the Finished event is raised). Declaration public event Action<Wizard.WizardButtonEventArgs> MovingNext Event Type Type Description System.Action < Wizard.WizardButtonEventArgs > | Improve this Doc View Source StepChanged This event is raised after the Wizard has changed the CurrentStep . Declaration public event Action<Wizard.StepChangeEventArgs> StepChanged Event Type Type Description System.Action < Wizard.StepChangeEventArgs > | Improve this Doc View Source StepChanging This event is raised when the current CurrentStep ) is about to change. Use Cancel to abort the transition. Declaration public event Action<Wizard.StepChangeEventArgs> StepChanging Event Type Type Description System.Action < Wizard.StepChangeEventArgs > Implements System.IDisposable System.ComponentModel.ISupportInitializeNotification System.ComponentModel.ISupportInitialize"
  },
  "api/Terminal.Gui/Terminal.Gui.Wizard.StepChangeEventArgs.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.Wizard.StepChangeEventArgs.html",
    "title": "Class Wizard.StepChangeEventArgs",
    "keywords": "Class Wizard.StepChangeEventArgs System.EventArgs for Wizard.WizardStep events. Inheritance System.Object System.EventArgs Wizard.StepChangeEventArgs Inherited Members System.EventArgs.Empty System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Terminal.Gui Assembly : Terminal.Gui.dll Syntax public class StepChangeEventArgs : EventArgs Constructors | Improve this Doc View Source StepChangeEventArgs(Wizard.WizardStep, Wizard.WizardStep) Initializes a new instance of Wizard.StepChangeEventArgs Declaration public StepChangeEventArgs(Wizard.WizardStep oldStep, Wizard.WizardStep newStep) Parameters Type Name Description Wizard.WizardStep oldStep The current Wizard.WizardStep . Wizard.WizardStep newStep The new Wizard.WizardStep . Properties | Improve this Doc View Source Cancel Event handlers can set to true before returning to cancel the step transition. Declaration public bool Cancel { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source NewStep The Wizard.WizardStep the Wizard is changing to or has changed to. Declaration public Wizard.WizardStep NewStep { get; } Property Value Type Description Wizard.WizardStep | Improve this Doc View Source OldStep The current (or previous) Wizard.WizardStep . Declaration public Wizard.WizardStep OldStep { get; } Property Value Type Description Wizard.WizardStep"
  },
  "api/Terminal.Gui/Terminal.Gui.Wizard.WizardButtonEventArgs.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.Wizard.WizardButtonEventArgs.html",
    "title": "Class Wizard.WizardButtonEventArgs",
    "keywords": "Class Wizard.WizardButtonEventArgs System.EventArgs for Wizard.WizardStep transition events. Inheritance System.Object System.EventArgs Wizard.WizardButtonEventArgs Inherited Members System.EventArgs.Empty System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Terminal.Gui Assembly : Terminal.Gui.dll Syntax public class WizardButtonEventArgs : EventArgs Constructors | Improve this Doc View Source WizardButtonEventArgs() Initializes a new instance of Wizard.WizardButtonEventArgs Declaration public WizardButtonEventArgs() Properties | Improve this Doc View Source Cancel Set to true to cancel the transition to the next step. Declaration public bool Cancel { get; set; } Property Value Type Description System.Boolean"
  },
  "api/Terminal.Gui/Terminal.Gui.Wizard.WizardStep.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.Wizard.WizardStep.html",
    "title": "Class Wizard.WizardStep",
    "keywords": "Class Wizard.WizardStep Represents a basic step that is displayed in a Wizard . The Wizard.WizardStep view is divided horizontally in two. On the left is the content view where View s can be added, On the right is the help for the step. Set HelpText to set the help text. If the help text is empty the help pane will not be shown. If there are no Views added to the WizardStep the HelpText (if not empty) will fill the wizard step. Inheritance System.Object Responder View FrameView Wizard.WizardStep Implements System.IDisposable System.ComponentModel.ISupportInitializeNotification System.ComponentModel.ISupportInitialize Remarks If Button s are added, do not set IsDefault to true as this will conflict with the Next button of the Wizard. Subscribe to the VisibleChanged event to be notified when the step is active; see also: StepChanged . To enable or disable a step from being shown to the user, set Enabled . Inherited Members FrameView.Border FrameView.Redraw(Rect) FrameView.Text FrameView.TextAlignment FrameView.OnEnter(View) FrameView.OnCanFocusChanged() View.Added View.Removed View.Enter View.Leave View.MouseEnter View.MouseLeave View.MouseClick View.CanFocusChanged View.EnabledChanged View.VisibleChanged View.HotKeyChanged View.HotKey View.HotKeySpecifier View.Shortcut View.ShortcutTag View.ShortcutAction View.Data View.Driver View.Subviews View.TabIndexes View.TabIndex View.TabStop View.CanFocus View.Id View.IsCurrentTop View.WantMousePositionReports View.WantContinuousButtonPressed View.Frame View.LayoutStyle View.Bounds View.X View.Y View.Width View.Height View.ForceValidatePosDim View.GetMinWidthHeight(Size) View.SetMinWidthHeight() View.TextFormatter View.SuperView View.UpdateTextFormatterText() View.ProcessResizeView() View.SetNeedsDisplay() View.ClearLayoutNeeded() View.SetNeedsDisplay(Rect) View.SetChildNeedsDisplay() View.Add(View[]) View.BringSubviewToFront(View) View.SendSubviewToBack(View) View.SendSubviewBackwards(View) View.BringSubviewForward(View) View.Clear() View.Clear(Rect) View.ScreenToView(Int32, Int32) View.ClipToBounds() View.SetClip(Rect) View.DrawFrame(Rect, Int32, Boolean) View.DrawHotString(ustring, Attribute, Attribute) View.DrawHotString(ustring, Boolean, ColorScheme) View.Move(Int32, Int32, Boolean) View.PositionCursor() View.HasFocus View.OnAdded(View) View.OnRemoved(View) View.OnLeave(View) View.Focused View.MostFocused View.ColorScheme View.AddRune(Int32, Int32, Rune) View.ClearNeedsDisplay() View.DrawContent View.OnDrawContent(Rect) View.DrawContentComplete View.OnDrawContentComplete(Rect) View.SetFocus() View.KeyPress View.ProcessKey(KeyEvent) View.InvokeKeybindings(KeyEvent) View.AddKeyBinding(Key, Command[]) View.ReplaceKeyBinding(Key, Key) View.ContainsKeyBinding(Key) View.ClearKeybindings() View.ClearKeybinding(Key) View.ClearKeybinding(Command[]) View.AddCommand(Command, Func<Nullable<Boolean>>) View.GetSupportedCommands() View.GetKeyFromCommand(Command[]) View.ProcessHotKey(KeyEvent) View.ProcessColdKey(KeyEvent) View.KeyDown View.OnKeyDown(KeyEvent) View.KeyUp View.OnKeyUp(KeyEvent) View.EnsureFocus() View.FocusFirst() View.FocusLast() View.FocusPrev() View.FocusNext() View.LayoutStarted View.LayoutComplete View.Initialized View.LayoutSubviews() View.AutoSize View.PreserveTrailingSpaces View.VerticalTextAlignment View.TextDirection View.IsInitialized View.IsAdded View.Enabled View.Visible View.ToString() View.GetAutoSize() View.GetHotKeySpecifierLength(Boolean) View.GetTextFormatterBoundsSize() View.GetBoundsTextFormatterSize() View.OnMouseEnter(MouseEvent) View.OnMouseLeave(MouseEvent) View.OnMouseEvent(MouseEvent) View.OnMouseClick(View.MouseEventArgs) View.OnEnabledChanged() View.OnVisibleChanged() View.Dispose(Boolean) View.BeginInit() View.EndInit() View.SetWidth(Int32, Int32) View.SetHeight(Int32, Int32) View.GetCurrentWidth(Int32) View.GetCurrentHeight(Int32) View.GetNormalColor() View.GetTopSuperView() Responder.MouseEvent(MouseEvent) Responder.Dispose() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Terminal.Gui Assembly : Terminal.Gui.dll Syntax public class WizardStep : FrameView, IDisposable, ISupportInitializeNotification, ISupportInitialize Constructors | Improve this Doc View Source WizardStep(ustring) Initializes a new instance of the Wizard class using Computed positioning. Declaration public WizardStep(ustring title) Parameters Type Name Description NStack.ustring title Title for the Step. Will be appended to the containing Wizard's title as \"Wizard Title - Wizard Step Title\" when this step is active. Properties | Improve this Doc View Source BackButtonText Sets or gets the text for the back button. The back button will only be visible on steps after the first step. Declaration public ustring BackButtonText { get; set; } Property Value Type Description NStack.ustring | Improve this Doc View Source HelpText Sets or gets help text for the Wizard.WizardStep .If HelpText is empty the help pane will not be visible and the content will fill the entire WizardStep. Declaration public ustring HelpText { get; set; } Property Value Type Description NStack.ustring | Improve this Doc View Source NextButtonText Sets or gets the text for the next/finish button. Declaration public ustring NextButtonText { get; set; } Property Value Type Description NStack.ustring | Improve this Doc View Source Title The title of the Wizard.WizardStep . Declaration public ustring Title { get; set; } Property Value Type Description NStack.ustring Methods | Improve this Doc View Source Add(View) Add the specified View to the Wizard.WizardStep . Declaration public override void Add(View view) Parameters Type Name Description View view View to add to this container Overrides FrameView.Add(View) | Improve this Doc View Source OnTitleChanged(ustring, ustring) Called when the Title has been changed. Invokes the TitleChanged event. Declaration public virtual void OnTitleChanged(ustring oldTitle, ustring newTitle) Parameters Type Name Description NStack.ustring oldTitle The Title that is/has been replaced. NStack.ustring newTitle The new Title to be replaced. | Improve this Doc View Source OnTitleChanging(ustring, ustring) Called before the Title changes. Invokes the TitleChanging event, which can be cancelled. Declaration public virtual bool OnTitleChanging(ustring oldTitle, ustring newTitle) Parameters Type Name Description NStack.ustring oldTitle The Title that is/has been replaced. NStack.ustring newTitle The new Title to be replaced. Returns Type Description System.Boolean true if an event handler cancelled the Title change. | Improve this Doc View Source Remove(View) Removes a View from Wizard.WizardStep . Declaration public override void Remove(View view) Parameters Type Name Description View view Overrides FrameView.Remove(View) | Improve this Doc View Source RemoveAll() Removes all View s from the Wizard.WizardStep . Declaration public override void RemoveAll() Overrides FrameView.RemoveAll() Events | Improve this Doc View Source TitleChanged Event fired after the Title has been changed. Declaration public event Action<Wizard.WizardStep.TitleEventArgs> TitleChanged Event Type Type Description System.Action < Wizard.WizardStep.TitleEventArgs > | Improve this Doc View Source TitleChanging Event fired when the Title is changing. Set Cancel to true to cancel the Title change. Declaration public event Action<Wizard.WizardStep.TitleEventArgs> TitleChanging Event Type Type Description System.Action < Wizard.WizardStep.TitleEventArgs > Implements System.IDisposable System.ComponentModel.ISupportInitializeNotification System.ComponentModel.ISupportInitialize"
  },
  "api/Terminal.Gui/Terminal.Gui.Wizard.WizardStep.TitleEventArgs.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.Wizard.WizardStep.TitleEventArgs.html",
    "title": "Class Wizard.WizardStep.TitleEventArgs",
    "keywords": "Class Wizard.WizardStep.TitleEventArgs An System.EventArgs which allows passing a cancelable new Title value event. Inheritance System.Object System.EventArgs Wizard.WizardStep.TitleEventArgs Inherited Members System.EventArgs.Empty System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Terminal.Gui Assembly : Terminal.Gui.dll Syntax public class TitleEventArgs : EventArgs Constructors | Improve this Doc View Source TitleEventArgs(ustring, ustring) Initializes a new instance of Wizard.WizardStep.TitleEventArgs Declaration public TitleEventArgs(ustring oldTitle, ustring newTitle) Parameters Type Name Description NStack.ustring oldTitle The Title that is/has been replaced. NStack.ustring newTitle The new Title to be replaced. Properties | Improve this Doc View Source Cancel Flag which allows cancelling the Title change. Declaration public bool Cancel { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source NewTitle The new Window Title. Declaration public ustring NewTitle { get; set; } Property Value Type Description NStack.ustring | Improve this Doc View Source OldTitle The old Window Title. Declaration public ustring OldTitle { get; set; } Property Value Type Description NStack.ustring"
  },
  "api/Terminal.Gui/Unix.Terminal.Curses.Event.html": {
    "href": "api/Terminal.Gui/Unix.Terminal.Curses.Event.html",
    "title": "Enum Curses.Event",
    "keywords": "Enum Curses.Event Namespace : Unix.Terminal Assembly : Terminal.Gui.dll Syntax [Flags] public enum Event : long Fields Name Description AllEvents Button1Clicked Button1DoubleClicked Button1Pressed Button1Released Button1TripleClicked Button2Clicked Button2DoubleClicked Button2Pressed Button2Released Button2TrippleClicked Button3Clicked Button3DoubleClicked Button3Pressed Button3Released Button3TripleClicked Button4Clicked Button4DoubleClicked Button4Pressed Button4Released Button4TripleClicked ButtonAlt ButtonCtrl ButtonShift ButtonWheeledDown ButtonWheeledUp ReportMousePosition"
  },
  "api/Terminal.Gui/Unix.Terminal.Curses.html": {
    "href": "api/Terminal.Gui/Unix.Terminal.Curses.html",
    "title": "Class Curses",
    "keywords": "Class Curses Inheritance System.Object Curses Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Unix.Terminal Assembly : Terminal.Gui.dll Syntax public class Curses Fields | Improve this Doc View Source A_BLINK Declaration public const int A_BLINK = 524288 Field Value Type Description System.Int32 | Improve this Doc View Source A_BOLD Declaration public const int A_BOLD = 2097152 Field Value Type Description System.Int32 | Improve this Doc View Source A_DIM Declaration public const int A_DIM = 1048576 Field Value Type Description System.Int32 | Improve this Doc View Source A_INVIS Declaration public const int A_INVIS = 8388608 Field Value Type Description System.Int32 | Improve this Doc View Source A_NORMAL Declaration public const int A_NORMAL = 0 Field Value Type Description System.Int32 | Improve this Doc View Source A_PROTECT Declaration public const int A_PROTECT = 16777216 Field Value Type Description System.Int32 | Improve this Doc View Source A_REVERSE Declaration public const int A_REVERSE = 262144 Field Value Type Description System.Int32 | Improve this Doc View Source A_STANDOUT Declaration public const int A_STANDOUT = 65536 Field Value Type Description System.Int32 | Improve this Doc View Source A_UNDERLINE Declaration public const int A_UNDERLINE = 131072 Field Value Type Description System.Int32 | Improve this Doc View Source ACS_BLOCK Declaration public const int ACS_BLOCK = 4194352 Field Value Type Description System.Int32 | Improve this Doc View Source ACS_BOARD Declaration public const int ACS_BOARD = 4194408 Field Value Type Description System.Int32 | Improve this Doc View Source ACS_BTEE Declaration public const int ACS_BTEE = 4194422 Field Value Type Description System.Int32 | Improve this Doc View Source ACS_BULLET Declaration public const int ACS_BULLET = 4194430 Field Value Type Description System.Int32 | Improve this Doc View Source ACS_CKBOARD Declaration public const int ACS_CKBOARD = 4194401 Field Value Type Description System.Int32 | Improve this Doc View Source ACS_DARROW Declaration public const int ACS_DARROW = 4194350 Field Value Type Description System.Int32 | Improve this Doc View Source ACS_DEGREE Declaration public const int ACS_DEGREE = 4194406 Field Value Type Description System.Int32 | Improve this Doc View Source ACS_DIAMOND Declaration public const int ACS_DIAMOND = 4194400 Field Value Type Description System.Int32 | Improve this Doc View Source ACS_HLINE Declaration public const int ACS_HLINE = 4194417 Field Value Type Description System.Int32 | Improve this Doc View Source ACS_LANTERN Declaration public const int ACS_LANTERN = 4194409 Field Value Type Description System.Int32 | Improve this Doc View Source ACS_LARROW Declaration public const int ACS_LARROW = 4194348 Field Value Type Description System.Int32 | Improve this Doc View Source ACS_LLCORNER Declaration public const int ACS_LLCORNER = 4194413 Field Value Type Description System.Int32 | Improve this Doc View Source ACS_LRCORNER Declaration public const int ACS_LRCORNER = 4194410 Field Value Type Description System.Int32 | Improve this Doc View Source ACS_LTEE Declaration public const int ACS_LTEE = 4194420 Field Value Type Description System.Int32 | Improve this Doc View Source ACS_PLMINUS Declaration public const int ACS_PLMINUS = 4194407 Field Value Type Description System.Int32 | Improve this Doc View Source ACS_PLUS Declaration public const int ACS_PLUS = 4194414 Field Value Type Description System.Int32 | Improve this Doc View Source ACS_RARROW Declaration public const int ACS_RARROW = 4194347 Field Value Type Description System.Int32 | Improve this Doc View Source ACS_RTEE Declaration public const int ACS_RTEE = 4194421 Field Value Type Description System.Int32 | Improve this Doc View Source ACS_S1 Declaration public const int ACS_S1 = 4194415 Field Value Type Description System.Int32 | Improve this Doc View Source ACS_S9 Declaration public const int ACS_S9 = 4194419 Field Value Type Description System.Int32 | Improve this Doc View Source ACS_TTEE Declaration public const int ACS_TTEE = 4194423 Field Value Type Description System.Int32 | Improve this Doc View Source ACS_UARROW Declaration public const int ACS_UARROW = 4194349 Field Value Type Description System.Int32 | Improve this Doc View Source ACS_ULCORNER Declaration public const int ACS_ULCORNER = 4194412 Field Value Type Description System.Int32 | Improve this Doc View Source ACS_URCORNER Declaration public const int ACS_URCORNER = 4194411 Field Value Type Description System.Int32 | Improve this Doc View Source ACS_VLINE Declaration public const int ACS_VLINE = 4194424 Field Value Type Description System.Int32 | Improve this Doc View Source AltCtrlKeyEnd Declaration public const int AltCtrlKeyEnd = 532 Field Value Type Description System.Int32 | Improve this Doc View Source AltCtrlKeyHome Declaration public const int AltCtrlKeyHome = 537 Field Value Type Description System.Int32 | Improve this Doc View Source AltCtrlKeyNPage Declaration public const int AltCtrlKeyNPage = 552 Field Value Type Description System.Int32 | Improve this Doc View Source AltCtrlKeyPPage Declaration public const int AltCtrlKeyPPage = 557 Field Value Type Description System.Int32 | Improve this Doc View Source AltKeyDown Declaration public const int AltKeyDown = 523 Field Value Type Description System.Int32 | Improve this Doc View Source AltKeyEnd Declaration public const int AltKeyEnd = 528 Field Value Type Description System.Int32 | Improve this Doc View Source AltKeyHome Declaration public const int AltKeyHome = 533 Field Value Type Description System.Int32 | Improve this Doc View Source AltKeyLeft Declaration public const int AltKeyLeft = 543 Field Value Type Description System.Int32 | Improve this Doc View Source AltKeyNPage Declaration public const int AltKeyNPage = 548 Field Value Type Description System.Int32 | Improve this Doc View Source AltKeyPPage Declaration public const int AltKeyPPage = 553 Field Value Type Description System.Int32 | Improve this Doc View Source AltKeyRight Declaration public const int AltKeyRight = 558 Field Value Type Description System.Int32 | Improve this Doc View Source AltKeyUp Declaration public const int AltKeyUp = 564 Field Value Type Description System.Int32 | Improve this Doc View Source COLOR_BLACK Declaration public const int COLOR_BLACK = 0 Field Value Type Description System.Int32 | Improve this Doc View Source COLOR_BLUE Declaration public const int COLOR_BLUE = 4 Field Value Type Description System.Int32 | Improve this Doc View Source COLOR_CYAN Declaration public const int COLOR_CYAN = 6 Field Value Type Description System.Int32 | Improve this Doc View Source COLOR_GRAY Declaration public const int COLOR_GRAY = 8 Field Value Type Description System.Int32 | Improve this Doc View Source COLOR_GREEN Declaration public const int COLOR_GREEN = 2 Field Value Type Description System.Int32 | Improve this Doc View Source COLOR_MAGENTA Declaration public const int COLOR_MAGENTA = 5 Field Value Type Description System.Int32 | Improve this Doc View Source COLOR_RED Declaration public const int COLOR_RED = 1 Field Value Type Description System.Int32 | Improve this Doc View Source COLOR_WHITE Declaration public const int COLOR_WHITE = 7 Field Value Type Description System.Int32 | Improve this Doc View Source COLOR_YELLOW Declaration public const int COLOR_YELLOW = 3 Field Value Type Description System.Int32 | Improve this Doc View Source CtrlKeyDown Declaration public const int CtrlKeyDown = 525 Field Value Type Description System.Int32 | Improve this Doc View Source CtrlKeyEnd Declaration public const int CtrlKeyEnd = 530 Field Value Type Description System.Int32 | Improve this Doc View Source CtrlKeyHome Declaration public const int CtrlKeyHome = 535 Field Value Type Description System.Int32 | Improve this Doc View Source CtrlKeyLeft Declaration public const int CtrlKeyLeft = 545 Field Value Type Description System.Int32 | Improve this Doc View Source CtrlKeyNPage Declaration public const int CtrlKeyNPage = 550 Field Value Type Description System.Int32 | Improve this Doc View Source CtrlKeyPPage Declaration public const int CtrlKeyPPage = 555 Field Value Type Description System.Int32 | Improve this Doc View Source CtrlKeyRight Declaration public const int CtrlKeyRight = 560 Field Value Type Description System.Int32 | Improve this Doc View Source CtrlKeyUp Declaration public const int CtrlKeyUp = 566 Field Value Type Description System.Int32 | Improve this Doc View Source DownEnd Declaration public const int DownEnd = 0 Field Value Type Description System.Int32 | Improve this Doc View Source ERR Declaration public const int ERR = -1 Field Value Type Description System.Int32 | Improve this Doc View Source Home Declaration public const int Home = 0 Field Value Type Description System.Int32 | Improve this Doc View Source KEY_CODE_SEQ Declaration public const int KEY_CODE_SEQ = 91 Field Value Type Description System.Int32 | Improve this Doc View Source KEY_CODE_YES Declaration public const int KEY_CODE_YES = 256 Field Value Type Description System.Int32 | Improve this Doc View Source KeyAlt Declaration public const int KeyAlt = 8192 Field Value Type Description System.Int32 | Improve this Doc View Source KeyBackspace Declaration public const int KeyBackspace = 263 Field Value Type Description System.Int32 | Improve this Doc View Source KeyBackTab Declaration public const int KeyBackTab = 353 Field Value Type Description System.Int32 | Improve this Doc View Source KeyDeleteChar Declaration public const int KeyDeleteChar = 330 Field Value Type Description System.Int32 | Improve this Doc View Source KeyDown Declaration public const int KeyDown = 258 Field Value Type Description System.Int32 | Improve this Doc View Source KeyEnd Declaration public const int KeyEnd = 360 Field Value Type Description System.Int32 | Improve this Doc View Source KeyF1 Declaration public const int KeyF1 = 265 Field Value Type Description System.Int32 | Improve this Doc View Source KeyF10 Declaration public const int KeyF10 = 274 Field Value Type Description System.Int32 | Improve this Doc View Source KeyF11 Declaration public const int KeyF11 = 275 Field Value Type Description System.Int32 | Improve this Doc View Source KeyF12 Declaration public const int KeyF12 = 276 Field Value Type Description System.Int32 | Improve this Doc View Source KeyF2 Declaration public const int KeyF2 = 266 Field Value Type Description System.Int32 | Improve this Doc View Source KeyF3 Declaration public const int KeyF3 = 267 Field Value Type Description System.Int32 | Improve this Doc View Source KeyF4 Declaration public const int KeyF4 = 268 Field Value Type Description System.Int32 | Improve this Doc View Source KeyF5 Declaration public const int KeyF5 = 269 Field Value Type Description System.Int32 | Improve this Doc View Source KeyF6 Declaration public const int KeyF6 = 270 Field Value Type Description System.Int32 | Improve this Doc View Source KeyF7 Declaration public const int KeyF7 = 271 Field Value Type Description System.Int32 | Improve this Doc View Source KeyF8 Declaration public const int KeyF8 = 272 Field Value Type Description System.Int32 | Improve this Doc View Source KeyF9 Declaration public const int KeyF9 = 273 Field Value Type Description System.Int32 | Improve this Doc View Source KeyHome Declaration public const int KeyHome = 262 Field Value Type Description System.Int32 | Improve this Doc View Source KeyInsertChar Declaration public const int KeyInsertChar = 331 Field Value Type Description System.Int32 | Improve this Doc View Source KeyLeft Declaration public const int KeyLeft = 260 Field Value Type Description System.Int32 | Improve this Doc View Source KeyMouse Declaration public const int KeyMouse = 409 Field Value Type Description System.Int32 | Improve this Doc View Source KeyNPage Declaration public const int KeyNPage = 338 Field Value Type Description System.Int32 | Improve this Doc View Source KeyPPage Declaration public const int KeyPPage = 339 Field Value Type Description System.Int32 | Improve this Doc View Source KeyResize Declaration public const int KeyResize = 410 Field Value Type Description System.Int32 | Improve this Doc View Source KeyRight Declaration public const int KeyRight = 261 Field Value Type Description System.Int32 | Improve this Doc View Source KeyTab Declaration public const int KeyTab = 9 Field Value Type Description System.Int32 | Improve this Doc View Source KeyUp Declaration public const int KeyUp = 259 Field Value Type Description System.Int32 | Improve this Doc View Source LeftRightUpNPagePPage Declaration public const int LeftRightUpNPagePPage = 0 Field Value Type Description System.Int32 | Improve this Doc View Source ShiftAltKeyDown Declaration public const int ShiftAltKeyDown = 524 Field Value Type Description System.Int32 | Improve this Doc View Source ShiftAltKeyEnd Declaration public const int ShiftAltKeyEnd = 529 Field Value Type Description System.Int32 | Improve this Doc View Source ShiftAltKeyHome Declaration public const int ShiftAltKeyHome = 534 Field Value Type Description System.Int32 | Improve this Doc View Source ShiftAltKeyLeft Declaration public const int ShiftAltKeyLeft = 544 Field Value Type Description System.Int32 | Improve this Doc View Source ShiftAltKeyNPage Declaration public const int ShiftAltKeyNPage = 549 Field Value Type Description System.Int32 | Improve this Doc View Source ShiftAltKeyPPage Declaration public const int ShiftAltKeyPPage = 554 Field Value Type Description System.Int32 | Improve this Doc View Source ShiftAltKeyRight Declaration public const int ShiftAltKeyRight = 559 Field Value Type Description System.Int32 | Improve this Doc View Source ShiftAltKeyUp Declaration public const int ShiftAltKeyUp = 565 Field Value Type Description System.Int32 | Improve this Doc View Source ShiftCtrlKeyDown Declaration public const int ShiftCtrlKeyDown = 526 Field Value Type Description System.Int32 | Improve this Doc View Source ShiftCtrlKeyEnd Declaration public const int ShiftCtrlKeyEnd = 531 Field Value Type Description System.Int32 | Improve this Doc View Source ShiftCtrlKeyHome Declaration public const int ShiftCtrlKeyHome = 536 Field Value Type Description System.Int32 | Improve this Doc View Source ShiftCtrlKeyLeft Declaration public const int ShiftCtrlKeyLeft = 546 Field Value Type Description System.Int32 | Improve this Doc View Source ShiftCtrlKeyNPage Declaration public const int ShiftCtrlKeyNPage = 551 Field Value Type Description System.Int32 | Improve this Doc View Source ShiftCtrlKeyPPage Declaration public const int ShiftCtrlKeyPPage = 556 Field Value Type Description System.Int32 | Improve this Doc View Source ShiftCtrlKeyRight Declaration public const int ShiftCtrlKeyRight = 561 Field Value Type Description System.Int32 | Improve this Doc View Source ShiftCtrlKeyUp Declaration public const int ShiftCtrlKeyUp = 567 Field Value Type Description System.Int32 | Improve this Doc View Source ShiftKeyDown Declaration public const int ShiftKeyDown = 336 Field Value Type Description System.Int32 | Improve this Doc View Source ShiftKeyEnd Declaration public const int ShiftKeyEnd = 386 Field Value Type Description System.Int32 | Improve this Doc View Source ShiftKeyHome Declaration public const int ShiftKeyHome = 391 Field Value Type Description System.Int32 | Improve this Doc View Source ShiftKeyLeft Declaration public const int ShiftKeyLeft = 393 Field Value Type Description System.Int32 | Improve this Doc View Source ShiftKeyNPage Declaration public const int ShiftKeyNPage = 396 Field Value Type Description System.Int32 | Improve this Doc View Source ShiftKeyPPage Declaration public const int ShiftKeyPPage = 398 Field Value Type Description System.Int32 | Improve this Doc View Source ShiftKeyRight Declaration public const int ShiftKeyRight = 402 Field Value Type Description System.Int32 | Improve this Doc View Source ShiftKeyUp Declaration public const int ShiftKeyUp = 337 Field Value Type Description System.Int32 | Improve this Doc View Source TIOCGWINSZ Declaration public const int TIOCGWINSZ = 21523 Field Value Type Description System.Int32 | Improve this Doc View Source TIOCGWINSZ_MAC Declaration public const int TIOCGWINSZ_MAC = 1074295912 Field Value Type Description System.Int32 Properties | Improve this Doc View Source ColorPairs Declaration public static int ColorPairs { get; } Property Value Type Description System.Int32 | Improve this Doc View Source Cols Declaration public static int Cols { get; } Property Value Type Description System.Int32 | Improve this Doc View Source HasColors Declaration public static bool HasColors { get; } Property Value Type Description System.Boolean | Improve this Doc View Source LC_ALL Declaration public static int LC_ALL { get; } Property Value Type Description System.Int32 | Improve this Doc View Source Lines Declaration public static int Lines { get; } Property Value Type Description System.Int32 Methods | Improve this Doc View Source addch(Int32) Declaration public static int addch(int ch) Parameters Type Name Description System.Int32 ch Returns Type Description System.Int32 | Improve this Doc View Source addstr(String, Object[]) Declaration public static int addstr(string format, params object[] args) Parameters Type Name Description System.String format System.Object [] args Returns Type Description System.Int32 | Improve this Doc View Source addwstr(String) Declaration public static int addwstr(string s) Parameters Type Name Description System.String s Returns Type Description System.Int32 | Improve this Doc View Source attroff(Int32) Declaration public static int attroff(int attrs) Parameters Type Name Description System.Int32 attrs Returns Type Description System.Int32 | Improve this Doc View Source attron(Int32) Declaration public static int attron(int attrs) Parameters Type Name Description System.Int32 attrs Returns Type Description System.Int32 | Improve this Doc View Source attrset(Int32) Declaration public static int attrset(int attrs) Parameters Type Name Description System.Int32 attrs Returns Type Description System.Int32 | Improve this Doc View Source cbreak() Declaration public static int cbreak() Returns Type Description System.Int32 | Improve this Doc View Source CheckWinChange() Declaration public static bool CheckWinChange() Returns Type Description System.Boolean | Improve this Doc View Source clearok(IntPtr, Boolean) Declaration public static int clearok(IntPtr win, bool bf) Parameters Type Name Description System.IntPtr win System.Boolean bf Returns Type Description System.Int32 | Improve this Doc View Source COLOR_PAIRS() Declaration public static int COLOR_PAIRS() Returns Type Description System.Int32 | Improve this Doc View Source ColorPair(Int32) Declaration public static int ColorPair(int n) Parameters Type Name Description System.Int32 n Returns Type Description System.Int32 | Improve this Doc View Source curs_set(Int32) Declaration public static int curs_set(int visibility) Parameters Type Name Description System.Int32 visibility Returns Type Description System.Int32 | Improve this Doc View Source def_prog_mode() Declaration public static int def_prog_mode() Returns Type Description System.Int32 | Improve this Doc View Source def_shell_mode() Declaration public static int def_shell_mode() Returns Type Description System.Int32 | Improve this Doc View Source doupdate() Declaration public static int doupdate() Returns Type Description System.Int32 | Improve this Doc View Source echo() Declaration public static int echo() Returns Type Description System.Int32 | Improve this Doc View Source endwin() Declaration public static int endwin() Returns Type Description System.Int32 | Improve this Doc View Source flushinp() Declaration public static int flushinp() Returns Type Description System.Int32 | Improve this Doc View Source get_wch(out Int32) Declaration public static int get_wch(out int sequence) Parameters Type Name Description System.Int32 sequence Returns Type Description System.Int32 | Improve this Doc View Source getch() Declaration public static int getch() Returns Type Description System.Int32 | Improve this Doc View Source getmouse(out Curses.MouseEvent) Declaration public static uint getmouse(out Curses.MouseEvent ev) Parameters Type Name Description Curses.MouseEvent ev Returns Type Description System.UInt32 | Improve this Doc View Source halfdelay(Int32) Declaration public static int halfdelay(int t) Parameters Type Name Description System.Int32 t Returns Type Description System.Int32 | Improve this Doc View Source has_colors() Declaration public static bool has_colors() Returns Type Description System.Boolean | Improve this Doc View Source idcok(IntPtr, Boolean) Declaration public static void idcok(IntPtr win, bool bf) Parameters Type Name Description System.IntPtr win System.Boolean bf | Improve this Doc View Source idlok(IntPtr, Boolean) Declaration public static int idlok(IntPtr win, bool bf) Parameters Type Name Description System.IntPtr win System.Boolean bf Returns Type Description System.Int32 | Improve this Doc View Source immedok(IntPtr, Boolean) Declaration public static void immedok(IntPtr win, bool bf) Parameters Type Name Description System.IntPtr win System.Boolean bf | Improve this Doc View Source init_pair(Int16, Int16, Int16) Declaration public static int init_pair(short pair, short f, short b) Parameters Type Name Description System.Int16 pair System.Int16 f System.Int16 b Returns Type Description System.Int32 | Improve this Doc View Source InitColorPair(Int16, Int16, Int16) Declaration public static int InitColorPair(short pair, short foreground, short background) Parameters Type Name Description System.Int16 pair System.Int16 foreground System.Int16 background Returns Type Description System.Int32 | Improve this Doc View Source initscr() Declaration public static Curses.Window initscr() Returns Type Description Curses.Window | Improve this Doc View Source intrflush(IntPtr, Boolean) Declaration public static int intrflush(IntPtr win, bool bf) Parameters Type Name Description System.IntPtr win System.Boolean bf Returns Type Description System.Int32 | Improve this Doc View Source is_term_resized(Int32, Int32) Declaration public static bool is_term_resized(int lines, int columns) Parameters Type Name Description System.Int32 lines System.Int32 columns Returns Type Description System.Boolean | Improve this Doc View Source IsAlt(Int32) Declaration public static int IsAlt(int key) Parameters Type Name Description System.Int32 key Returns Type Description System.Int32 | Improve this Doc View Source isendwin() Declaration public static bool isendwin() Returns Type Description System.Boolean | Improve this Doc View Source keypad(IntPtr, Boolean) Declaration public static int keypad(IntPtr win, bool bf) Parameters Type Name Description System.IntPtr win System.Boolean bf Returns Type Description System.Int32 | Improve this Doc View Source leaveok(IntPtr, Boolean) Declaration public static int leaveok(IntPtr win, bool bf) Parameters Type Name Description System.IntPtr win System.Boolean bf Returns Type Description System.Int32 | Improve this Doc View Source meta(IntPtr, Boolean) Declaration public static int meta(IntPtr win, bool bf) Parameters Type Name Description System.IntPtr win System.Boolean bf Returns Type Description System.Int32 | Improve this Doc View Source mouseinterval(Int32) Declaration public static int mouseinterval(int interval) Parameters Type Name Description System.Int32 interval Returns Type Description System.Int32 | Improve this Doc View Source mousemask(Curses.Event, out Curses.Event) Declaration public static Curses.Event mousemask(Curses.Event newmask, out Curses.Event oldmask) Parameters Type Name Description Curses.Event newmask Curses.Event oldmask Returns Type Description Curses.Event | Improve this Doc View Source move(Int32, Int32) Declaration public static int move(int line, int col) Parameters Type Name Description System.Int32 line System.Int32 col Returns Type Description System.Int32 | Improve this Doc View Source mvaddch(Int32, Int32, Int32) Declaration public static int mvaddch(int y, int x, int ch) Parameters Type Name Description System.Int32 y System.Int32 x System.Int32 ch Returns Type Description System.Int32 | Improve this Doc View Source mvaddwstr(Int32, Int32, String) Declaration public static int mvaddwstr(int y, int x, string s) Parameters Type Name Description System.Int32 y System.Int32 x System.String s Returns Type Description System.Int32 | Improve this Doc View Source mvgetch(Int32, Int32) Declaration public static int mvgetch(int y, int x) Parameters Type Name Description System.Int32 y System.Int32 x Returns Type Description System.Int32 | Improve this Doc View Source nl() Declaration public static int nl() Returns Type Description System.Int32 | Improve this Doc View Source nocbreak() Declaration public static int nocbreak() Returns Type Description System.Int32 | Improve this Doc View Source noecho() Declaration public static int noecho() Returns Type Description System.Int32 | Improve this Doc View Source nonl() Declaration public static int nonl() Returns Type Description System.Int32 | Improve this Doc View Source noqiflush() Declaration public static void noqiflush() | Improve this Doc View Source noraw() Declaration public static int noraw() Returns Type Description System.Int32 | Improve this Doc View Source notimeout(IntPtr, Boolean) Declaration public static int notimeout(IntPtr win, bool bf) Parameters Type Name Description System.IntPtr win System.Boolean bf Returns Type Description System.Int32 | Improve this Doc View Source qiflush() Declaration public static void qiflush() | Improve this Doc View Source raw() Declaration public static int raw() Returns Type Description System.Int32 | Improve this Doc View Source redrawwin(IntPtr) Declaration public static int redrawwin(IntPtr win) Parameters Type Name Description System.IntPtr win Returns Type Description System.Int32 | Improve this Doc View Source refresh() Declaration public static int refresh() Returns Type Description System.Int32 | Improve this Doc View Source reset_prog_mode() Declaration public static int reset_prog_mode() Returns Type Description System.Int32 | Improve this Doc View Source reset_shell_mode() Declaration public static int reset_shell_mode() Returns Type Description System.Int32 | Improve this Doc View Source resetty() Declaration public static int resetty() Returns Type Description System.Int32 | Improve this Doc View Source resize_term(Int32, Int32) Declaration public static int resize_term(int lines, int columns) Parameters Type Name Description System.Int32 lines System.Int32 columns Returns Type Description System.Int32 | Improve this Doc View Source resizeterm(Int32, Int32) Declaration public static int resizeterm(int lines, int columns) Parameters Type Name Description System.Int32 lines System.Int32 columns Returns Type Description System.Int32 | Improve this Doc View Source savetty() Declaration public static int savetty() Returns Type Description System.Int32 | Improve this Doc View Source scrollok(IntPtr, Boolean) Declaration public static int scrollok(IntPtr win, bool bf) Parameters Type Name Description System.IntPtr win System.Boolean bf Returns Type Description System.Int32 | Improve this Doc View Source set_escdelay(Int32) Declaration public static int set_escdelay(int size) Parameters Type Name Description System.Int32 size Returns Type Description System.Int32 setlocale(Int32, String) Declaration public static extern int setlocale(int cate, string locale) Parameters Type Name Description System.Int32 cate System.String locale Returns Type Description System.Int32 | Improve this Doc View Source setscrreg(Int32, Int32) Declaration public static int setscrreg(int top, int bot) Parameters Type Name Description System.Int32 top System.Int32 bot Returns Type Description System.Int32 | Improve this Doc View Source start_color() Declaration public static int start_color() Returns Type Description System.Int32 | Improve this Doc View Source StartColor() Declaration public static int StartColor() Returns Type Description System.Int32 | Improve this Doc View Source timeout(Int32) Declaration public static int timeout(int delay) Parameters Type Name Description System.Int32 delay Returns Type Description System.Int32 | Improve this Doc View Source typeahead(IntPtr) Declaration public static int typeahead(IntPtr fd) Parameters Type Name Description System.IntPtr fd Returns Type Description System.Int32 | Improve this Doc View Source ungetch(Int32) Declaration public static int ungetch(int ch) Parameters Type Name Description System.Int32 ch Returns Type Description System.Int32 | Improve this Doc View Source ungetmouse(ref Curses.MouseEvent) Declaration public static uint ungetmouse(ref Curses.MouseEvent ev) Parameters Type Name Description Curses.MouseEvent ev Returns Type Description System.UInt32 | Improve this Doc View Source use_default_colors() Declaration public static int use_default_colors() Returns Type Description System.Int32 | Improve this Doc View Source use_env(Boolean) Declaration public static void use_env(bool f) Parameters Type Name Description System.Boolean f | Improve this Doc View Source UseDefaultColors() Declaration public static int UseDefaultColors() Returns Type Description System.Int32 | Improve this Doc View Source waddch(IntPtr, Int32) Declaration public static int waddch(IntPtr win, int ch) Parameters Type Name Description System.IntPtr win System.Int32 ch Returns Type Description System.Int32 | Improve this Doc View Source wmove(IntPtr, Int32, Int32) Declaration public static int wmove(IntPtr win, int line, int col) Parameters Type Name Description System.IntPtr win System.Int32 line System.Int32 col Returns Type Description System.Int32 | Improve this Doc View Source wnoutrefresh(IntPtr) Declaration public static int wnoutrefresh(IntPtr win) Parameters Type Name Description System.IntPtr win Returns Type Description System.Int32 | Improve this Doc View Source wrefresh(IntPtr) Declaration public static int wrefresh(IntPtr win) Parameters Type Name Description System.IntPtr win Returns Type Description System.Int32 | Improve this Doc View Source wsetscrreg(IntPtr, Int32, Int32) Declaration public static int wsetscrreg(IntPtr win, int top, int bot) Parameters Type Name Description System.IntPtr win System.Int32 top System.Int32 bot Returns Type Description System.Int32 | Improve this Doc View Source wtimeout(IntPtr, Int32) Declaration public static int wtimeout(IntPtr win, int delay) Parameters Type Name Description System.IntPtr win System.Int32 delay Returns Type Description System.Int32"
  },
  "api/Terminal.Gui/Unix.Terminal.Curses.MouseEvent.html": {
    "href": "api/Terminal.Gui/Unix.Terminal.Curses.MouseEvent.html",
    "title": "Struct Curses.MouseEvent",
    "keywords": "Struct Curses.MouseEvent Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.ValueType.ToString() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Unix.Terminal Assembly : Terminal.Gui.dll Syntax public struct MouseEvent Fields | Improve this Doc View Source ButtonState Declaration public Curses.Event ButtonState Field Value Type Description Curses.Event | Improve this Doc View Source ID Declaration public short ID Field Value Type Description System.Int16 | Improve this Doc View Source X Declaration public int X Field Value Type Description System.Int32 | Improve this Doc View Source Y Declaration public int Y Field Value Type Description System.Int32 | Improve this Doc View Source Z Declaration public int Z Field Value Type Description System.Int32"
  },
  "api/Terminal.Gui/Unix.Terminal.Curses.Window.html": {
    "href": "api/Terminal.Gui/Unix.Terminal.Curses.Window.html",
    "title": "Class Curses.Window",
    "keywords": "Class Curses.Window Inheritance System.Object Curses.Window Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Unix.Terminal Assembly : Terminal.Gui.dll Syntax public class Window Fields | Improve this Doc View Source Handle Declaration public readonly IntPtr Handle Field Value Type Description System.IntPtr Properties | Improve this Doc View Source Current Declaration public static Curses.Window Current { get; } Property Value Type Description Curses.Window | Improve this Doc View Source Standard Declaration public static Curses.Window Standard { get; } Property Value Type Description Curses.Window Methods | Improve this Doc View Source addch(Char) Declaration public int addch(char ch) Parameters Type Name Description System.Char ch Returns Type Description System.Int32 | Improve this Doc View Source clearok(Boolean) Declaration public int clearok(bool bf) Parameters Type Name Description System.Boolean bf Returns Type Description System.Int32 | Improve this Doc View Source idcok(Boolean) Declaration public void idcok(bool bf) Parameters Type Name Description System.Boolean bf | Improve this Doc View Source idlok(Boolean) Declaration public int idlok(bool bf) Parameters Type Name Description System.Boolean bf Returns Type Description System.Int32 | Improve this Doc View Source immedok(Boolean) Declaration public void immedok(bool bf) Parameters Type Name Description System.Boolean bf | Improve this Doc View Source intrflush(Boolean) Declaration public int intrflush(bool bf) Parameters Type Name Description System.Boolean bf Returns Type Description System.Int32 | Improve this Doc View Source keypad(Boolean) Declaration public int keypad(bool bf) Parameters Type Name Description System.Boolean bf Returns Type Description System.Int32 | Improve this Doc View Source leaveok(Boolean) Declaration public int leaveok(bool bf) Parameters Type Name Description System.Boolean bf Returns Type Description System.Int32 | Improve this Doc View Source meta(Boolean) Declaration public int meta(bool bf) Parameters Type Name Description System.Boolean bf Returns Type Description System.Int32 | Improve this Doc View Source move(Int32, Int32) Declaration public int move(int line, int col) Parameters Type Name Description System.Int32 line System.Int32 col Returns Type Description System.Int32 | Improve this Doc View Source notimeout(Boolean) Declaration public int notimeout(bool bf) Parameters Type Name Description System.Boolean bf Returns Type Description System.Int32 | Improve this Doc View Source redrawwin() Declaration public int redrawwin() Returns Type Description System.Int32 | Improve this Doc View Source refresh() Declaration public int refresh() Returns Type Description System.Int32 | Improve this Doc View Source scrollok(Boolean) Declaration public int scrollok(bool bf) Parameters Type Name Description System.Boolean bf Returns Type Description System.Int32 | Improve this Doc View Source setscrreg(Int32, Int32) Declaration public int setscrreg(int top, int bot) Parameters Type Name Description System.Int32 top System.Int32 bot Returns Type Description System.Int32 | Improve this Doc View Source wnoutrefresh() Declaration public int wnoutrefresh() Returns Type Description System.Int32 | Improve this Doc View Source wrefresh() Declaration public int wrefresh() Returns Type Description System.Int32 | Improve this Doc View Source wtimeout(Int32) Declaration public int wtimeout(int delay) Parameters Type Name Description System.Int32 delay Returns Type Description System.Int32"
  },
  "api/Terminal.Gui/Unix.Terminal.html": {
    "href": "api/Terminal.Gui/Unix.Terminal.html",
    "title": "Namespace Unix.Terminal",
    "keywords": "Namespace Unix.Terminal Classes Curses Curses.Window Structs Curses.MouseEvent Enums Curses.Event"
  },
  "api/UICatalog/UICatalog.html": {
    "href": "api/UICatalog/UICatalog.html",
    "title": "Namespace UICatalog",
    "keywords": "Namespace UICatalog Classes NumberToWords Scenario Base class for each demo/scenario. To define a new scenario: Create a new .cs file in the Scenarios directory that derives from Scenario . Annotate the Scenario derived class with a Scenario.ScenarioMetadata attribute specifying the scenario's name and description. Add one or more Scenario.ScenarioCategory attributes to the class specifying which categories the scenario belongs to. If you don't specify a category the scenario will show up in \"_All\". Implement the Setup() override which will be called when a user selects the scenario to run. Optionally, implement the Init(Toplevel, ColorScheme) and/or Run() overrides to provide a custom implementation. The UI Catalog program uses reflection to find all scenarios and adds them to the ListViews. Press ENTER to run the selected scenario. Press CTRL-Q to exit it. / Scenario.ScenarioCategory Defines the category names used to catagorize a Scenario Scenario.ScenarioMetadata Defines the metadata (Name and Description) for a Scenario UICatalogApp UI Catalog is a comprehensive sample app and scenario library for Terminal.Gui"
  },
  "api/UICatalog/UICatalog.NumberToWords.html": {
    "href": "api/UICatalog/UICatalog.NumberToWords.html",
    "title": "Class NumberToWords",
    "keywords": "Class NumberToWords Inheritance System.Object NumberToWords Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : UICatalog Assembly : UICatalog.dll Syntax public static class NumberToWords Methods | Improve this Doc View Source Convert(Int64) Declaration public static string Convert(long i) Parameters Type Name Description System.Int64 i Returns Type Description System.String | Improve this Doc View Source ConvertAmount(Double) Declaration public static string ConvertAmount(double amount) Parameters Type Name Description System.Double amount Returns Type Description System.String"
  },
  "api/UICatalog/UICatalog.Scenario.html": {
    "href": "api/UICatalog/UICatalog.Scenario.html",
    "title": "Class Scenario",
    "keywords": "Class Scenario Base class for each demo/scenario. To define a new scenario: Create a new .cs file in the Scenarios directory that derives from Scenario . Annotate the Scenario derived class with a Scenario.ScenarioMetadata attribute specifying the scenario's name and description. Add one or more Scenario.ScenarioCategory attributes to the class specifying which categories the scenario belongs to. If you don't specify a category the scenario will show up in \"_All\". Implement the Setup() override which will be called when a user selects the scenario to run. Optionally, implement the Init(Toplevel, ColorScheme) and/or Run() overrides to provide a custom implementation. The UI Catalog program uses reflection to find all scenarios and adds them to the ListViews. Press ENTER to run the selected scenario. Press CTRL-Q to exit it. / Inheritance System.Object Scenario AllViewsTester AutoSizeAndDirectionText BackgroundWorkerCollection BasicColors Borders BordersComparisons BordersOnFrameView BordersOnToplevel BordersOnWindow Buttons CharacterMap ClassExplorer Clipping ColorPickers ComboBoxIteration ComputedLayout ContextMenus CsvEditor Dialogs DynamicMenuBar DynamicStatusBar Editor GraphViewExample HexEditor InteractiveTree InvertColors Keys LabelsAsLabels LineViewExample ListsAndCombos ListViewWithSelection MessageBoxes Mouse MultiColouredTable MyScenario Notepad Progress ProgressBarStyles RuneWidthGreaterThanOne Scrolling SendKeys SingleBackgroundWorker SyntaxHighlighting TableEditor TabViewExample Text TextAlignments TextAlignmentsAndDirections TextFormatterDemo TextViewAutocompletePopup Threading TimeAndDate TreeUseCases TreeViewFileSystem UnicodeInMenu WindowsAndFrameViews WizardAsView Wizards Implements System.IDisposable Examples The example below is provided in the Scenarios directory as a generic sample that can be copied and re-named: using Terminal.Gui; namespace UICatalog { [ScenarioMetadata (Name: \"Generic\", Description: \"Generic sample - A template for creating new Scenarios\")] [ScenarioCategory (\"Controls\")] class MyScenario : Scenario { public override void Setup () { // Put your scenario code here, e.g. Win.Add (new Button (\"Press me!\") { X = Pos.Center (), Y = Pos.Center (), Clicked = () => MessageBox.Query (20, 7, \"Hi\", \"Neat?\", \"Yes\", \"No\") }); } } } Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : UICatalog Assembly : UICatalog.dll Syntax public class Scenario : IDisposable Properties | Improve this Doc View Source Top The Top level for the Scenario . This should be set to Top in most cases. Declaration public Toplevel Top { get; set; } Property Value Type Description Toplevel | Improve this Doc View Source Win The Window for the Scenario . This should be set within the Top in most cases. Declaration public Window Win { get; set; } Property Value Type Description Window Methods | Improve this Doc View Source Dispose() Declaration public void Dispose() | Improve this Doc View Source Dispose(Boolean) Declaration protected virtual void Dispose(bool disposing) Parameters Type Name Description System.Boolean disposing | Improve this Doc View Source GetCategories() Helper function to get the list of categories a Scenario belongs to (defined in Scenario.ScenarioCategory ) Declaration public List<string> GetCategories() Returns Type Description System.Collections.Generic.List < System.String > list of category names | Improve this Doc View Source GetDerivedClasses<T>() Returns an instance of each Scenario defined in the project. https://stackoverflow.com/questions/5411694/get-all-inherited-classes-of-an-abstract-class Declaration public static List<Type> GetDerivedClasses<T>() Returns Type Description System.Collections.Generic.List < System.Type > Type Parameters Name Description T | Improve this Doc View Source GetDescription() Helper to get the Scenario Description (defined in Scenario.ScenarioMetadata ) Declaration public string GetDescription() Returns Type Description System.String | Improve this Doc View Source GetName() Helper to get the Scenario Name (defined in Scenario.ScenarioMetadata ) Declaration public string GetName() Returns Type Description System.String | Improve this Doc View Source Init(Toplevel, ColorScheme) Helper that provides the default Window implementation with a frame and label showing the name of the Scenario and logic to exit back to the Scenario picker UI. Override Init(Toplevel, ColorScheme) to provide any Toplevel behavior needed. Declaration public virtual void Init(Toplevel top, ColorScheme colorScheme) Parameters Type Name Description Toplevel top The Toplevel created by the UI Catalog host. ColorScheme colorScheme The colorscheme to use. | Improve this Doc View Source RequestStop() Stops the scenario. Override to change shutdown behavior for the Scenario . Declaration public virtual void RequestStop() | Improve this Doc View Source Run() Runs the Scenario . Override to start the Scenario using a Toplevel different than Top . Declaration public virtual void Run() | Improve this Doc View Source Setup() Override this to implement the Scenario setup logic (create controls, etc...). Declaration public virtual void Setup() | Improve this Doc View Source ToString() Declaration public override string ToString() Returns Type Description System.String Overrides System.Object.ToString() Implements System.IDisposable"
  },
  "api/UICatalog/UICatalog.Scenario.ScenarioCategory.html": {
    "href": "api/UICatalog/UICatalog.Scenario.ScenarioCategory.html",
    "title": "Class Scenario.ScenarioCategory",
    "keywords": "Class Scenario.ScenarioCategory Defines the category names used to catagorize a Scenario Inheritance System.Object System.Attribute Scenario.ScenarioCategory Inherited Members System.Attribute.Equals(System.Object) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetHashCode() System.Attribute.IsDefaultAttribute() System.Attribute.IsDefined(System.Reflection.Assembly, System.Type) System.Attribute.IsDefined(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.Module, System.Type) System.Attribute.IsDefined(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.Match(System.Object) System.Attribute.TypeId System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : UICatalog Assembly : UICatalog.dll Syntax [AttributeUsage(AttributeTargets.Class, AllowMultiple = true)] public class ScenarioCategory : Attribute Constructors | Improve this Doc View Source ScenarioCategory(String) Declaration public ScenarioCategory(string Name) Parameters Type Name Description System.String Name Properties | Improve this Doc View Source Name Category Name Declaration public string Name { get; set; } Property Value Type Description System.String Methods | Improve this Doc View Source GetCategories(Type) Static helper function to get the Scenario Categories given a Type Declaration public static List<string> GetCategories(Type t) Parameters Type Name Description System.Type t Returns Type Description System.Collections.Generic.List < System.String > list of category names | Improve this Doc View Source GetName(Type) Static helper function to get the Scenario Name given a Type Declaration public static string GetName(Type t) Parameters Type Name Description System.Type t Returns Type Description System.String Name of the category"
  },
  "api/UICatalog/UICatalog.Scenario.ScenarioMetadata.html": {
    "href": "api/UICatalog/UICatalog.Scenario.ScenarioMetadata.html",
    "title": "Class Scenario.ScenarioMetadata",
    "keywords": "Class Scenario.ScenarioMetadata Defines the metadata (Name and Description) for a Scenario Inheritance System.Object System.Attribute Scenario.ScenarioMetadata Inherited Members System.Attribute.Equals(System.Object) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetHashCode() System.Attribute.IsDefaultAttribute() System.Attribute.IsDefined(System.Reflection.Assembly, System.Type) System.Attribute.IsDefined(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.Module, System.Type) System.Attribute.IsDefined(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.Match(System.Object) System.Attribute.TypeId System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : UICatalog Assembly : UICatalog.dll Syntax [AttributeUsage(AttributeTargets.Class)] public class ScenarioMetadata : Attribute Constructors | Improve this Doc View Source ScenarioMetadata(String, String) Declaration public ScenarioMetadata(string Name, string Description) Parameters Type Name Description System.String Name System.String Description Properties | Improve this Doc View Source Description Scenario Description Declaration public string Description { get; set; } Property Value Type Description System.String | Improve this Doc View Source Name Scenario Name Declaration public string Name { get; set; } Property Value Type Description System.String Methods | Improve this Doc View Source GetDescription(Type) Static helper function to get the Scenario Description given a Type Declaration public static string GetDescription(Type t) Parameters Type Name Description System.Type t Returns Type Description System.String | Improve this Doc View Source GetName(Type) Static helper function to get the Scenario Name given a Type Declaration public static string GetName(Type t) Parameters Type Name Description System.Type t Returns Type Description System.String"
  },
  "api/UICatalog/UICatalog.Scenarios.AllViewsTester.html": {
    "href": "api/UICatalog/UICatalog.Scenarios.AllViewsTester.html",
    "title": "Class AllViewsTester",
    "keywords": "Class AllViewsTester Inheritance System.Object Scenario AllViewsTester Implements System.IDisposable Inherited Members Scenario.Top Scenario.Win Scenario.GetName() Scenario.GetDescription() Scenario.GetCategories() Scenario.ToString() Scenario.RequestStop() Scenario.GetDerivedClasses<T>() Scenario.Dispose(Boolean) Scenario.Dispose() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : UICatalog.Scenarios Assembly : UICatalog.dll Syntax [Scenario.ScenarioMetadata(\"All Views Tester\", \"Provides a test UI for all classes derived from View.\")] [Scenario.ScenarioCategory(\"Layout\")] [Scenario.ScenarioCategory(\"Tests\")] [Scenario.ScenarioCategory(\"Top Level Windows\")] public class AllViewsTester : Scenario, IDisposable Methods | Improve this Doc View Source Init(Toplevel, ColorScheme) Declaration public override void Init(Toplevel top, ColorScheme colorScheme) Parameters Type Name Description Toplevel top ColorScheme colorScheme Overrides Scenario.Init(Toplevel, ColorScheme) | Improve this Doc View Source Run() Declaration public override void Run() Overrides Scenario.Run() | Improve this Doc View Source Setup() Declaration public override void Setup() Overrides Scenario.Setup() Implements System.IDisposable"
  },
  "api/UICatalog/UICatalog.Scenarios.AutoSizeAndDirectionText.html": {
    "href": "api/UICatalog/UICatalog.Scenarios.AutoSizeAndDirectionText.html",
    "title": "Class AutoSizeAndDirectionText",
    "keywords": "Class AutoSizeAndDirectionText Inheritance System.Object Scenario AutoSizeAndDirectionText Implements System.IDisposable Inherited Members Scenario.Top Scenario.Win Scenario.Init(Toplevel, ColorScheme) Scenario.GetName() Scenario.GetDescription() Scenario.GetCategories() Scenario.ToString() Scenario.Run() Scenario.RequestStop() Scenario.GetDerivedClasses<T>() Scenario.Dispose(Boolean) Scenario.Dispose() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : UICatalog.Scenarios Assembly : UICatalog.dll Syntax [Scenario.ScenarioMetadata(\"Text Direction and AutoSize\", \"Demos TextFormatter Direction and View AutoSize.\")] [Scenario.ScenarioCategory(\"Text and Formatting\")] public class AutoSizeAndDirectionText : Scenario, IDisposable Methods | Improve this Doc View Source Setup() Declaration public override void Setup() Overrides Scenario.Setup() Implements System.IDisposable"
  },
  "api/UICatalog/UICatalog.Scenarios.BackgroundWorkerCollection.html": {
    "href": "api/UICatalog/UICatalog.Scenarios.BackgroundWorkerCollection.html",
    "title": "Class BackgroundWorkerCollection",
    "keywords": "Class BackgroundWorkerCollection Inheritance System.Object Scenario BackgroundWorkerCollection Implements System.IDisposable Inherited Members Scenario.Top Scenario.Win Scenario.GetName() Scenario.GetDescription() Scenario.GetCategories() Scenario.ToString() Scenario.Setup() Scenario.RequestStop() Scenario.GetDerivedClasses<T>() Scenario.Dispose(Boolean) Scenario.Dispose() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : UICatalog.Scenarios Assembly : UICatalog.dll Syntax [Scenario.ScenarioMetadata(\"BackgroundWorker Collection\", \"A persisting multi Toplevel BackgroundWorker threading\")] [Scenario.ScenarioCategory(\"Threading\")] [Scenario.ScenarioCategory(\"Top Level Windows\")] [Scenario.ScenarioCategory(\"Dialogs\")] [Scenario.ScenarioCategory(\"Controls\")] public class BackgroundWorkerCollection : Scenario, IDisposable Methods | Improve this Doc View Source Init(Toplevel, ColorScheme) Declaration public override void Init(Toplevel top, ColorScheme colorScheme) Parameters Type Name Description Toplevel top ColorScheme colorScheme Overrides Scenario.Init(Toplevel, ColorScheme) | Improve this Doc View Source Run() Declaration public override void Run() Overrides Scenario.Run() Implements System.IDisposable"
  },
  "api/UICatalog/UICatalog.Scenarios.BasicColors.html": {
    "href": "api/UICatalog/UICatalog.Scenarios.BasicColors.html",
    "title": "Class BasicColors",
    "keywords": "Class BasicColors Inheritance System.Object Scenario BasicColors Implements System.IDisposable Inherited Members Scenario.Top Scenario.Win Scenario.Init(Toplevel, ColorScheme) Scenario.GetName() Scenario.GetDescription() Scenario.GetCategories() Scenario.ToString() Scenario.Run() Scenario.RequestStop() Scenario.GetDerivedClasses<T>() Scenario.Dispose(Boolean) Scenario.Dispose() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : UICatalog.Scenarios Assembly : UICatalog.dll Syntax [Scenario.ScenarioMetadata(\"Basic Colors\", \"Show all basic colors.\")] [Scenario.ScenarioCategory(\"Colors\")] [Scenario.ScenarioCategory(\"Text and Formatting\")] public class BasicColors : Scenario, IDisposable Methods | Improve this Doc View Source Setup() Declaration public override void Setup() Overrides Scenario.Setup() Implements System.IDisposable"
  },
  "api/UICatalog/UICatalog.Scenarios.Borders.html": {
    "href": "api/UICatalog/UICatalog.Scenarios.Borders.html",
    "title": "Class Borders",
    "keywords": "Class Borders Inheritance System.Object Scenario Borders Implements System.IDisposable Inherited Members Scenario.Top Scenario.Win Scenario.Init(Toplevel, ColorScheme) Scenario.GetName() Scenario.GetDescription() Scenario.GetCategories() Scenario.ToString() Scenario.Run() Scenario.RequestStop() Scenario.GetDerivedClasses<T>() Scenario.Dispose(Boolean) Scenario.Dispose() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : UICatalog.Scenarios Assembly : UICatalog.dll Syntax [Scenario.ScenarioMetadata(\"Borders with/without PanelView\", \"Demonstrate with/without PanelView borders manipulation.\")] [Scenario.ScenarioCategory(\"Layout\")] [Scenario.ScenarioCategory(\"Borders\")] public class Borders : Scenario, IDisposable Methods | Improve this Doc View Source Setup() Declaration public override void Setup() Overrides Scenario.Setup() Implements System.IDisposable"
  },
  "api/UICatalog/UICatalog.Scenarios.BordersComparisons.html": {
    "href": "api/UICatalog/UICatalog.Scenarios.BordersComparisons.html",
    "title": "Class BordersComparisons",
    "keywords": "Class BordersComparisons Inheritance System.Object Scenario BordersComparisons Implements System.IDisposable Inherited Members Scenario.Top Scenario.Win Scenario.GetName() Scenario.GetDescription() Scenario.GetCategories() Scenario.ToString() Scenario.Setup() Scenario.RequestStop() Scenario.GetDerivedClasses<T>() Scenario.Dispose(Boolean) Scenario.Dispose() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : UICatalog.Scenarios Assembly : UICatalog.dll Syntax [Scenario.ScenarioMetadata(\"Borders Comparisons\", \"Compares Window, Toplevel and FrameView borders.\")] [Scenario.ScenarioCategory(\"Layout\")] [Scenario.ScenarioCategory(\"Borders\")] public class BordersComparisons : Scenario, IDisposable Methods | Improve this Doc View Source Init(Toplevel, ColorScheme) Declaration public override void Init(Toplevel top, ColorScheme colorScheme) Parameters Type Name Description Toplevel top ColorScheme colorScheme Overrides Scenario.Init(Toplevel, ColorScheme) | Improve this Doc View Source Run() Declaration public override void Run() Overrides Scenario.Run() Implements System.IDisposable"
  },
  "api/UICatalog/UICatalog.Scenarios.BordersOnFrameView.html": {
    "href": "api/UICatalog/UICatalog.Scenarios.BordersOnFrameView.html",
    "title": "Class BordersOnFrameView",
    "keywords": "Class BordersOnFrameView Inheritance System.Object Scenario BordersOnFrameView Implements System.IDisposable Inherited Members Scenario.Top Scenario.Win Scenario.Init(Toplevel, ColorScheme) Scenario.GetName() Scenario.GetDescription() Scenario.GetCategories() Scenario.ToString() Scenario.Run() Scenario.RequestStop() Scenario.GetDerivedClasses<T>() Scenario.Dispose(Boolean) Scenario.Dispose() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : UICatalog.Scenarios Assembly : UICatalog.dll Syntax [Scenario.ScenarioMetadata(\"Borders on FrameView\", \"Demonstrate FrameView borders manipulation.\")] [Scenario.ScenarioCategory(\"Layout\")] [Scenario.ScenarioCategory(\"Borders\")] public class BordersOnFrameView : Scenario, IDisposable Methods | Improve this Doc View Source Setup() Declaration public override void Setup() Overrides Scenario.Setup() Implements System.IDisposable"
  },
  "api/UICatalog/UICatalog.Scenarios.BordersOnToplevel.html": {
    "href": "api/UICatalog/UICatalog.Scenarios.BordersOnToplevel.html",
    "title": "Class BordersOnToplevel",
    "keywords": "Class BordersOnToplevel Inheritance System.Object Scenario BordersOnToplevel Implements System.IDisposable Inherited Members Scenario.Top Scenario.Win Scenario.Init(Toplevel, ColorScheme) Scenario.GetName() Scenario.GetDescription() Scenario.GetCategories() Scenario.ToString() Scenario.Run() Scenario.RequestStop() Scenario.GetDerivedClasses<T>() Scenario.Dispose(Boolean) Scenario.Dispose() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : UICatalog.Scenarios Assembly : UICatalog.dll Syntax [Scenario.ScenarioMetadata(\"Borders on Toplevel\", \"Demonstrates Toplevel borders manipulation.\")] [Scenario.ScenarioCategory(\"Layout\")] [Scenario.ScenarioCategory(\"Borders\")] public class BordersOnToplevel : Scenario, IDisposable Methods | Improve this Doc View Source Setup() Declaration public override void Setup() Overrides Scenario.Setup() Implements System.IDisposable"
  },
  "api/UICatalog/UICatalog.Scenarios.BordersOnWindow.html": {
    "href": "api/UICatalog/UICatalog.Scenarios.BordersOnWindow.html",
    "title": "Class BordersOnWindow",
    "keywords": "Class BordersOnWindow Inheritance System.Object Scenario BordersOnWindow Implements System.IDisposable Inherited Members Scenario.Top Scenario.Win Scenario.Init(Toplevel, ColorScheme) Scenario.GetName() Scenario.GetDescription() Scenario.GetCategories() Scenario.ToString() Scenario.Run() Scenario.RequestStop() Scenario.GetDerivedClasses<T>() Scenario.Dispose(Boolean) Scenario.Dispose() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : UICatalog.Scenarios Assembly : UICatalog.dll Syntax [Scenario.ScenarioMetadata(\"Borders on Window\", \"Demonstrates Window borders manipulation.\")] [Scenario.ScenarioCategory(\"Layout\")] [Scenario.ScenarioCategory(\"Borders\")] public class BordersOnWindow : Scenario, IDisposable Methods | Improve this Doc View Source Setup() Declaration public override void Setup() Overrides Scenario.Setup() Implements System.IDisposable"
  },
  "api/UICatalog/UICatalog.Scenarios.Buttons.html": {
    "href": "api/UICatalog/UICatalog.Scenarios.Buttons.html",
    "title": "Class Buttons",
    "keywords": "Class Buttons Inheritance System.Object Scenario Buttons Implements System.IDisposable Inherited Members Scenario.Top Scenario.Win Scenario.Init(Toplevel, ColorScheme) Scenario.GetName() Scenario.GetDescription() Scenario.GetCategories() Scenario.ToString() Scenario.Run() Scenario.RequestStop() Scenario.GetDerivedClasses<T>() Scenario.Dispose(Boolean) Scenario.Dispose() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : UICatalog.Scenarios Assembly : UICatalog.dll Syntax [Scenario.ScenarioMetadata(\"Buttons\", \"Demonstrates all sorts of Buttons.\")] [Scenario.ScenarioCategory(\"Controls\")] [Scenario.ScenarioCategory(\"Layout\")] public class Buttons : Scenario, IDisposable Methods | Improve this Doc View Source Setup() Declaration public override void Setup() Overrides Scenario.Setup() Implements System.IDisposable"
  },
  "api/UICatalog/UICatalog.Scenarios.CharacterMap.html": {
    "href": "api/UICatalog/UICatalog.Scenarios.CharacterMap.html",
    "title": "Class CharacterMap",
    "keywords": "Class CharacterMap This Scenario demonstrates building a custom control (a class deriving from View) that: Provides a simple \"Character Map\" application (like Windows' charmap.exe). Helps test unicode character rendering in Terminal.Gui Illustrates how to use ScrollView to do infinite scrolling Inheritance System.Object Scenario CharacterMap Implements System.IDisposable Inherited Members Scenario.Top Scenario.Win Scenario.Init(Toplevel, ColorScheme) Scenario.GetName() Scenario.GetDescription() Scenario.GetCategories() Scenario.ToString() Scenario.RequestStop() Scenario.GetDerivedClasses<T>() Scenario.Dispose(Boolean) Scenario.Dispose() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : UICatalog.Scenarios Assembly : UICatalog.dll Syntax [Scenario.ScenarioMetadata(\"Character Map\", \"A Unicode character set viewier built as a custom control using the ScrollView control.\")] [Scenario.ScenarioCategory(\"Text and Formatting\")] [Scenario.ScenarioCategory(\"Controls\")] [Scenario.ScenarioCategory(\"ScrollView\")] public class CharacterMap : Scenario, IDisposable Methods | Improve this Doc View Source Run() Declaration public override void Run() Overrides Scenario.Run() | Improve this Doc View Source Setup() Declaration public override void Setup() Overrides Scenario.Setup() Implements System.IDisposable"
  },
  "api/UICatalog/UICatalog.Scenarios.ClassExplorer.html": {
    "href": "api/UICatalog/UICatalog.Scenarios.ClassExplorer.html",
    "title": "Class ClassExplorer",
    "keywords": "Class ClassExplorer Inheritance System.Object Scenario ClassExplorer Implements System.IDisposable Inherited Members Scenario.Top Scenario.Win Scenario.Init(Toplevel, ColorScheme) Scenario.GetName() Scenario.GetDescription() Scenario.GetCategories() Scenario.ToString() Scenario.Run() Scenario.RequestStop() Scenario.GetDerivedClasses<T>() Scenario.Dispose(Boolean) Scenario.Dispose() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : UICatalog.Scenarios Assembly : UICatalog.dll Syntax [Scenario.ScenarioMetadata(\"Class Explorer\", \"Tree view explorer for classes by namespace based on TreeView.\")] [Scenario.ScenarioCategory(\"Controls\")] [Scenario.ScenarioCategory(\"TreeView\")] public class ClassExplorer : Scenario, IDisposable Methods | Improve this Doc View Source Setup() Declaration public override void Setup() Overrides Scenario.Setup() Implements System.IDisposable"
  },
  "api/UICatalog/UICatalog.Scenarios.Clipping.html": {
    "href": "api/UICatalog/UICatalog.Scenarios.Clipping.html",
    "title": "Class Clipping",
    "keywords": "Class Clipping Inheritance System.Object Scenario Clipping Implements System.IDisposable Inherited Members Scenario.Top Scenario.Win Scenario.GetName() Scenario.GetDescription() Scenario.GetCategories() Scenario.ToString() Scenario.Run() Scenario.RequestStop() Scenario.GetDerivedClasses<T>() Scenario.Dispose(Boolean) Scenario.Dispose() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : UICatalog.Scenarios Assembly : UICatalog.dll Syntax [Scenario.ScenarioMetadata(\"Clipping\", \"Used to test that things clip correctly\")] [Scenario.ScenarioCategory(\"Tests\")] public class Clipping : Scenario, IDisposable Methods | Improve this Doc View Source Init(Toplevel, ColorScheme) Declaration public override void Init(Toplevel top, ColorScheme colorScheme) Parameters Type Name Description Toplevel top ColorScheme colorScheme Overrides Scenario.Init(Toplevel, ColorScheme) | Improve this Doc View Source Setup() Declaration public override void Setup() Overrides Scenario.Setup() Implements System.IDisposable"
  },
  "api/UICatalog/UICatalog.Scenarios.ColorPickers.html": {
    "href": "api/UICatalog/UICatalog.Scenarios.ColorPickers.html",
    "title": "Class ColorPickers",
    "keywords": "Class ColorPickers Inheritance System.Object Scenario ColorPickers Implements System.IDisposable Inherited Members Scenario.Top Scenario.Win Scenario.Init(Toplevel, ColorScheme) Scenario.GetName() Scenario.GetDescription() Scenario.GetCategories() Scenario.ToString() Scenario.Run() Scenario.RequestStop() Scenario.GetDerivedClasses<T>() Scenario.Dispose(Boolean) Scenario.Dispose() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : UICatalog.Scenarios Assembly : UICatalog.dll Syntax [Scenario.ScenarioMetadata(\"Color Picker\", \"Color Picker.\")] [Scenario.ScenarioCategory(\"Colors\")] [Scenario.ScenarioCategory(\"Controls\")] public class ColorPickers : Scenario, IDisposable Methods | Improve this Doc View Source Setup() Setup the scenario. Declaration public override void Setup() Overrides Scenario.Setup() Implements System.IDisposable"
  },
  "api/UICatalog/UICatalog.Scenarios.ComboBoxIteration.html": {
    "href": "api/UICatalog/UICatalog.Scenarios.ComboBoxIteration.html",
    "title": "Class ComboBoxIteration",
    "keywords": "Class ComboBoxIteration Inheritance System.Object Scenario ComboBoxIteration Implements System.IDisposable Inherited Members Scenario.Top Scenario.Win Scenario.Init(Toplevel, ColorScheme) Scenario.GetName() Scenario.GetDescription() Scenario.GetCategories() Scenario.ToString() Scenario.Run() Scenario.RequestStop() Scenario.GetDerivedClasses<T>() Scenario.Dispose(Boolean) Scenario.Dispose() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : UICatalog.Scenarios Assembly : UICatalog.dll Syntax [Scenario.ScenarioMetadata(\"ComboBoxIteration\", \"ComboBox iteration.\")] [Scenario.ScenarioCategory(\"Controls\")] [Scenario.ScenarioCategory(\"ComboBox\")] public class ComboBoxIteration : Scenario, IDisposable Methods | Improve this Doc View Source Setup() Declaration public override void Setup() Overrides Scenario.Setup() Implements System.IDisposable"
  },
  "api/UICatalog/UICatalog.Scenarios.ComputedLayout.html": {
    "href": "api/UICatalog/UICatalog.Scenarios.ComputedLayout.html",
    "title": "Class ComputedLayout",
    "keywords": "Class ComputedLayout This Scenario demonstrates how to use Termina.gui's Dim and Pos Layout System. [x] - Using Dim.Fill to fill a window [x] - Using Dim.Fill and Dim.Pos to automatically align controls based on an initial control [ ] - ... Inheritance System.Object Scenario ComputedLayout Implements System.IDisposable Inherited Members Scenario.Top Scenario.Win Scenario.Init(Toplevel, ColorScheme) Scenario.GetName() Scenario.GetDescription() Scenario.GetCategories() Scenario.ToString() Scenario.RequestStop() Scenario.GetDerivedClasses<T>() Scenario.Dispose(Boolean) Scenario.Dispose() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : UICatalog.Scenarios Assembly : UICatalog.dll Syntax [Scenario.ScenarioMetadata(\"Computed Layout\", \"Demonstrates the Computed (Dim and Pos) Layout System.\")] [Scenario.ScenarioCategory(\"Layout\")] public class ComputedLayout : Scenario, IDisposable Methods | Improve this Doc View Source Run() Declaration public override void Run() Overrides Scenario.Run() | Improve this Doc View Source Setup() Declaration public override void Setup() Overrides Scenario.Setup() Implements System.IDisposable"
  },
  "api/UICatalog/UICatalog.Scenarios.ContextMenus.html": {
    "href": "api/UICatalog/UICatalog.Scenarios.ContextMenus.html",
    "title": "Class ContextMenus",
    "keywords": "Class ContextMenus Inheritance System.Object Scenario ContextMenus Implements System.IDisposable Inherited Members Scenario.Top Scenario.Win Scenario.Init(Toplevel, ColorScheme) Scenario.GetName() Scenario.GetDescription() Scenario.GetCategories() Scenario.ToString() Scenario.Run() Scenario.RequestStop() Scenario.GetDerivedClasses<T>() Scenario.Dispose(Boolean) Scenario.Dispose() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : UICatalog.Scenarios Assembly : UICatalog.dll Syntax [Scenario.ScenarioMetadata(\"ContextMenus\", \"Context Menu Sample.\")] [Scenario.ScenarioCategory(\"Menus\")] public class ContextMenus : Scenario, IDisposable Methods | Improve this Doc View Source Setup() Declaration public override void Setup() Overrides Scenario.Setup() Implements System.IDisposable"
  },
  "api/UICatalog/UICatalog.Scenarios.CsvEditor.html": {
    "href": "api/UICatalog/UICatalog.Scenarios.CsvEditor.html",
    "title": "Class CsvEditor",
    "keywords": "Class CsvEditor Inheritance System.Object Scenario CsvEditor Implements System.IDisposable Inherited Members Scenario.Top Scenario.Win Scenario.Init(Toplevel, ColorScheme) Scenario.GetName() Scenario.GetDescription() Scenario.GetCategories() Scenario.ToString() Scenario.Run() Scenario.RequestStop() Scenario.GetDerivedClasses<T>() Scenario.Dispose(Boolean) Scenario.Dispose() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : UICatalog.Scenarios Assembly : UICatalog.dll Syntax [Scenario.ScenarioMetadata(\"Csv Editor\", \"Open and edit simple CSV files using the TableView class.\")] [Scenario.ScenarioCategory(\"TableView\")] [Scenario.ScenarioCategory(\"Controls\")] [Scenario.ScenarioCategory(\"Dialogs\")] [Scenario.ScenarioCategory(\"Text and Formatting\")] [Scenario.ScenarioCategory(\"Dialogs\")] [Scenario.ScenarioCategory(\"Top Level Windows\")] [Scenario.ScenarioCategory(\"Files and IO\")] public class CsvEditor : Scenario, IDisposable Methods | Improve this Doc View Source Setup() Declaration public override void Setup() Overrides Scenario.Setup() Implements System.IDisposable"
  },
  "api/UICatalog/UICatalog.Scenarios.Dialogs.html": {
    "href": "api/UICatalog/UICatalog.Scenarios.Dialogs.html",
    "title": "Class Dialogs",
    "keywords": "Class Dialogs Inheritance System.Object Scenario Dialogs Implements System.IDisposable Inherited Members Scenario.Top Scenario.Win Scenario.Init(Toplevel, ColorScheme) Scenario.GetName() Scenario.GetDescription() Scenario.GetCategories() Scenario.ToString() Scenario.Run() Scenario.RequestStop() Scenario.GetDerivedClasses<T>() Scenario.Dispose(Boolean) Scenario.Dispose() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : UICatalog.Scenarios Assembly : UICatalog.dll Syntax [Scenario.ScenarioMetadata(\"Dialogs\", \"Demonstrates how to the Dialog class\")] [Scenario.ScenarioCategory(\"Dialogs\")] public class Dialogs : Scenario, IDisposable Methods | Improve this Doc View Source Setup() Declaration public override void Setup() Overrides Scenario.Setup() Implements System.IDisposable"
  },
  "api/UICatalog/UICatalog.Scenarios.DynamicMenuBar.Binding.html": {
    "href": "api/UICatalog/UICatalog.Scenarios.DynamicMenuBar.Binding.html",
    "title": "Class DynamicMenuBar.Binding",
    "keywords": "Class DynamicMenuBar.Binding Inheritance System.Object DynamicMenuBar.Binding Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : UICatalog.Scenarios Assembly : UICatalog.dll Syntax public class Binding Constructors | Improve this Doc View Source Binding(View, String, View, String, DynamicMenuBar.IValueConverter) Declaration public Binding(View source, string sourcePropertyName, View target, string targetPropertyName, DynamicMenuBar.IValueConverter valueConverter = null) Parameters Type Name Description View source System.String sourcePropertyName View target System.String targetPropertyName DynamicMenuBar.IValueConverter valueConverter Properties | Improve this Doc View Source Source Declaration public View Source { get; } Property Value Type Description View | Improve this Doc View Source SourcePropertyName Declaration public string SourcePropertyName { get; } Property Value Type Description System.String | Improve this Doc View Source Target Declaration public View Target { get; } Property Value Type Description View | Improve this Doc View Source TargetPropertyName Declaration public string TargetPropertyName { get; } Property Value Type Description System.String"
  },
  "api/UICatalog/UICatalog.Scenarios.DynamicMenuBar.DynamicMenuBarDetails.html": {
    "href": "api/UICatalog/UICatalog.Scenarios.DynamicMenuBar.DynamicMenuBarDetails.html",
    "title": "Class DynamicMenuBar.DynamicMenuBarDetails",
    "keywords": "Class DynamicMenuBar.DynamicMenuBarDetails Inheritance System.Object Responder View FrameView DynamicMenuBar.DynamicMenuBarDetails Implements System.IDisposable System.ComponentModel.ISupportInitializeNotification System.ComponentModel.ISupportInitialize Inherited Members FrameView.Title FrameView.Border FrameView.Add(View) FrameView.Remove(View) FrameView.RemoveAll() FrameView.Redraw(Rect) FrameView.Text FrameView.TextAlignment FrameView.OnEnter(View) FrameView.OnCanFocusChanged() View.Added View.Removed View.Enter View.Leave View.MouseEnter View.MouseLeave View.MouseClick View.CanFocusChanged View.EnabledChanged View.VisibleChanged View.HotKeyChanged View.HotKey View.HotKeySpecifier View.Shortcut View.ShortcutTag View.ShortcutAction View.Data View.Driver View.Subviews View.TabIndexes View.TabIndex View.TabStop View.CanFocus View.Id View.IsCurrentTop View.WantMousePositionReports View.WantContinuousButtonPressed View.Frame View.LayoutStyle View.Bounds View.X View.Y View.Width View.Height View.ForceValidatePosDim View.GetMinWidthHeight(Size) View.SetMinWidthHeight() View.TextFormatter View.SuperView View.UpdateTextFormatterText() View.ProcessResizeView() View.SetNeedsDisplay() View.ClearLayoutNeeded() View.SetNeedsDisplay(Rect) View.SetChildNeedsDisplay() View.Add(View[]) View.BringSubviewToFront(View) View.SendSubviewToBack(View) View.SendSubviewBackwards(View) View.BringSubviewForward(View) View.Clear() View.Clear(Rect) View.ScreenToView(Int32, Int32) View.ClipToBounds() View.SetClip(Rect) View.DrawFrame(Rect, Int32, Boolean) View.DrawHotString(ustring, Attribute, Attribute) View.DrawHotString(ustring, Boolean, ColorScheme) View.Move(Int32, Int32, Boolean) View.PositionCursor() View.HasFocus View.OnAdded(View) View.OnRemoved(View) View.OnLeave(View) View.Focused View.MostFocused View.ColorScheme View.AddRune(Int32, Int32, Rune) View.ClearNeedsDisplay() View.DrawContent View.OnDrawContent(Rect) View.DrawContentComplete View.OnDrawContentComplete(Rect) View.SetFocus() View.KeyPress View.ProcessKey(KeyEvent) View.InvokeKeybindings(KeyEvent) View.AddKeyBinding(Key, Command[]) View.ReplaceKeyBinding(Key, Key) View.ContainsKeyBinding(Key) View.ClearKeybindings() View.ClearKeybinding(Key) View.ClearKeybinding(Command[]) View.AddCommand(Command, Func<Nullable<Boolean>>) View.GetSupportedCommands() View.GetKeyFromCommand(Command[]) View.ProcessHotKey(KeyEvent) View.ProcessColdKey(KeyEvent) View.KeyDown View.OnKeyDown(KeyEvent) View.KeyUp View.OnKeyUp(KeyEvent) View.EnsureFocus() View.FocusFirst() View.FocusLast() View.FocusPrev() View.FocusNext() View.LayoutStarted View.LayoutComplete View.Initialized View.LayoutSubviews() View.AutoSize View.PreserveTrailingSpaces View.VerticalTextAlignment View.TextDirection View.IsInitialized View.IsAdded View.Enabled View.Visible View.ToString() View.GetAutoSize() View.GetHotKeySpecifierLength(Boolean) View.GetTextFormatterBoundsSize() View.GetBoundsTextFormatterSize() View.OnMouseEnter(MouseEvent) View.OnMouseLeave(MouseEvent) View.OnMouseEvent(MouseEvent) View.OnMouseClick(View.MouseEventArgs) View.OnEnabledChanged() View.OnVisibleChanged() View.Dispose(Boolean) View.BeginInit() View.EndInit() View.SetWidth(Int32, Int32) View.SetHeight(Int32, Int32) View.GetCurrentWidth(Int32) View.GetCurrentHeight(Int32) View.GetNormalColor() View.GetTopSuperView() Responder.MouseEvent(MouseEvent) Responder.Dispose() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : UICatalog.Scenarios Assembly : UICatalog.dll Syntax public class DynamicMenuBarDetails : FrameView, IDisposable, ISupportInitializeNotification, ISupportInitialize Constructors | Improve this Doc View Source DynamicMenuBarDetails(ustring) Declaration public DynamicMenuBarDetails(ustring title) Parameters Type Name Description NStack.ustring title | Improve this Doc View Source DynamicMenuBarDetails(MenuItem, Boolean) Declaration public DynamicMenuBarDetails(MenuItem menuItem = null, bool hasParent = false) Parameters Type Name Description MenuItem menuItem System.Boolean hasParent Fields | Improve this Doc View Source _ckbIsTopLevel Declaration public CheckBox _ckbIsTopLevel Field Value Type Description CheckBox | Improve this Doc View Source _ckbSubMenu Declaration public CheckBox _ckbSubMenu Field Value Type Description CheckBox | Improve this Doc View Source _menuItem Declaration public MenuItem _menuItem Field Value Type Description MenuItem | Improve this Doc View Source _rbChkStyle Declaration public RadioGroup _rbChkStyle Field Value Type Description RadioGroup | Improve this Doc View Source _txtAction Declaration public TextView _txtAction Field Value Type Description TextView | Improve this Doc View Source _txtHelp Declaration public TextField _txtHelp Field Value Type Description TextField | Improve this Doc View Source _txtShortcut Declaration public TextField _txtShortcut Field Value Type Description TextField | Improve this Doc View Source _txtTitle Declaration public TextField _txtTitle Field Value Type Description TextField Methods | Improve this Doc View Source CreateAction(MenuItem, DynamicMenuBar.DynamicMenuItem) Declaration public Action CreateAction(MenuItem menuItem, DynamicMenuBar.DynamicMenuItem item) Parameters Type Name Description MenuItem menuItem DynamicMenuBar.DynamicMenuItem item Returns Type Description System.Action | Improve this Doc View Source EditMenuBarItem(MenuItem) Declaration public void EditMenuBarItem(MenuItem menuItem) Parameters Type Name Description MenuItem menuItem | Improve this Doc View Source EnterMenuItem() Declaration public DynamicMenuBar.DynamicMenuItem EnterMenuItem() Returns Type Description DynamicMenuBar.DynamicMenuItem | Improve this Doc View Source UpdateParent(ref MenuItem) Declaration public void UpdateParent(ref MenuItem menuItem) Parameters Type Name Description MenuItem menuItem Implements System.IDisposable System.ComponentModel.ISupportInitializeNotification System.ComponentModel.ISupportInitialize"
  },
  "api/UICatalog/UICatalog.Scenarios.DynamicMenuBar.DynamicMenuBarSample.html": {
    "href": "api/UICatalog/UICatalog.Scenarios.DynamicMenuBar.DynamicMenuBarSample.html",
    "title": "Class DynamicMenuBar.DynamicMenuBarSample",
    "keywords": "Class DynamicMenuBar.DynamicMenuBarSample Inheritance System.Object Responder View Toplevel Window DynamicMenuBar.DynamicMenuBarSample Implements System.IDisposable System.ComponentModel.ISupportInitializeNotification System.ComponentModel.ISupportInitialize Inherited Members Window.Title Window.Border Window.Add(View) Window.Remove(View) Window.RemoveAll() Window.Redraw(Rect) Window.OnCanFocusChanged() Window.Text Window.TextAlignment Window.OnTitleChanging(ustring, ustring) Window.TitleChanging Window.OnTitleChanged(ustring, ustring) Window.TitleChanged Toplevel.Running Toplevel.Loaded Toplevel.Ready Toplevel.Unloaded Toplevel.Activate Toplevel.Deactivate Toplevel.ChildClosed Toplevel.AllChildClosed Toplevel.Closing Toplevel.Closed Toplevel.ChildLoaded Toplevel.ChildUnloaded Toplevel.Resized Toplevel.OnLoaded() Toplevel.AlternateForwardKeyChanged Toplevel.OnAlternateForwardKeyChanged(Key) Toplevel.AlternateBackwardKeyChanged Toplevel.OnAlternateBackwardKeyChanged(Key) Toplevel.QuitKeyChanged Toplevel.OnQuitKeyChanged(Key) Toplevel.Create() Toplevel.CanFocus Toplevel.Modal Toplevel.MenuBar Toplevel.StatusBar Toplevel.IsMdiContainer Toplevel.IsMdiChild Toplevel.OnKeyDown(KeyEvent) Toplevel.OnKeyUp(KeyEvent) Toplevel.ProcessKey(KeyEvent) Toplevel.ProcessColdKey(KeyEvent) Toplevel.PositionToplevel(Toplevel) Toplevel.MouseEvent(MouseEvent) Toplevel.WillPresent() Toplevel.MoveNext() Toplevel.MovePrevious() Toplevel.RequestStop() Toplevel.RequestStop(Toplevel) Toplevel.PositionCursor() Toplevel.GetTopMdiChild(Type, String[]) Toplevel.ShowChild(Toplevel) View.Added View.Removed View.Enter View.Leave View.MouseEnter View.MouseLeave View.MouseClick View.CanFocusChanged View.EnabledChanged View.VisibleChanged View.HotKeyChanged View.HotKey View.HotKeySpecifier View.Shortcut View.ShortcutTag View.ShortcutAction View.Data View.Driver View.Subviews View.TabIndexes View.TabIndex View.TabStop View.Id View.IsCurrentTop View.WantMousePositionReports View.WantContinuousButtonPressed View.Frame View.LayoutStyle View.Bounds View.X View.Y View.Width View.Height View.ForceValidatePosDim View.GetMinWidthHeight(Size) View.SetMinWidthHeight() View.TextFormatter View.SuperView View.UpdateTextFormatterText() View.ProcessResizeView() View.SetNeedsDisplay() View.ClearLayoutNeeded() View.SetNeedsDisplay(Rect) View.SetChildNeedsDisplay() View.Add(View[]) View.BringSubviewToFront(View) View.SendSubviewToBack(View) View.SendSubviewBackwards(View) View.BringSubviewForward(View) View.Clear() View.Clear(Rect) View.ScreenToView(Int32, Int32) View.ClipToBounds() View.SetClip(Rect) View.DrawFrame(Rect, Int32, Boolean) View.DrawHotString(ustring, Attribute, Attribute) View.DrawHotString(ustring, Boolean, ColorScheme) View.Move(Int32, Int32, Boolean) View.HasFocus View.OnAdded(View) View.OnRemoved(View) View.OnEnter(View) View.OnLeave(View) View.Focused View.MostFocused View.ColorScheme View.AddRune(Int32, Int32, Rune) View.ClearNeedsDisplay() View.DrawContent View.OnDrawContent(Rect) View.DrawContentComplete View.OnDrawContentComplete(Rect) View.SetFocus() View.KeyPress View.InvokeKeybindings(KeyEvent) View.AddKeyBinding(Key, Command[]) View.ReplaceKeyBinding(Key, Key) View.ContainsKeyBinding(Key) View.ClearKeybindings() View.ClearKeybinding(Key) View.ClearKeybinding(Command[]) View.AddCommand(Command, Func<Nullable<Boolean>>) View.GetSupportedCommands() View.GetKeyFromCommand(Command[]) View.ProcessHotKey(KeyEvent) View.KeyDown View.KeyUp View.EnsureFocus() View.FocusFirst() View.FocusLast() View.FocusPrev() View.FocusNext() View.LayoutStarted View.LayoutComplete View.Initialized View.LayoutSubviews() View.AutoSize View.PreserveTrailingSpaces View.VerticalTextAlignment View.TextDirection View.IsInitialized View.IsAdded View.Enabled View.Visible View.ToString() View.GetAutoSize() View.GetHotKeySpecifierLength(Boolean) View.GetTextFormatterBoundsSize() View.GetBoundsTextFormatterSize() View.OnMouseEnter(MouseEvent) View.OnMouseLeave(MouseEvent) View.OnMouseEvent(MouseEvent) View.OnMouseClick(View.MouseEventArgs) View.OnEnabledChanged() View.OnVisibleChanged() View.Dispose(Boolean) View.BeginInit() View.EndInit() View.SetWidth(Int32, Int32) View.SetHeight(Int32, Int32) View.GetCurrentWidth(Int32) View.GetCurrentHeight(Int32) View.GetNormalColor() View.GetTopSuperView() Responder.Dispose() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : UICatalog.Scenarios Assembly : UICatalog.dll Syntax public class DynamicMenuBarSample : Window, IDisposable, ISupportInitializeNotification, ISupportInitialize Constructors | Improve this Doc View Source DynamicMenuBarSample(ustring) Declaration public DynamicMenuBarSample(ustring title) Parameters Type Name Description NStack.ustring title Properties | Improve this Doc View Source DataContext Declaration public DynamicMenuBar.DynamicMenuItemModel DataContext { get; set; } Property Value Type Description DynamicMenuBar.DynamicMenuItemModel Implements System.IDisposable System.ComponentModel.ISupportInitializeNotification System.ComponentModel.ISupportInitialize"
  },
  "api/UICatalog/UICatalog.Scenarios.DynamicMenuBar.DynamicMenuItem.html": {
    "href": "api/UICatalog/UICatalog.Scenarios.DynamicMenuBar.DynamicMenuItem.html",
    "title": "Class DynamicMenuBar.DynamicMenuItem",
    "keywords": "Class DynamicMenuBar.DynamicMenuItem Inheritance System.Object DynamicMenuBar.DynamicMenuItem Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : UICatalog.Scenarios Assembly : UICatalog.dll Syntax public class DynamicMenuItem Constructors | Improve this Doc View Source DynamicMenuItem() Declaration public DynamicMenuItem() | Improve this Doc View Source DynamicMenuItem(ustring, ustring, ustring, Boolean, Boolean, MenuItemCheckStyle, ustring) Declaration public DynamicMenuItem(ustring title, ustring help, ustring action, bool isTopLevel, bool hasSubMenu, MenuItemCheckStyle checkStyle = MenuItemCheckStyle.NoCheck, ustring shortcut = null) Parameters Type Name Description NStack.ustring title NStack.ustring help NStack.ustring action System.Boolean isTopLevel System.Boolean hasSubMenu MenuItemCheckStyle checkStyle NStack.ustring shortcut | Improve this Doc View Source DynamicMenuItem(ustring, Boolean) Declaration public DynamicMenuItem(ustring title, bool hasSubMenu = false) Parameters Type Name Description NStack.ustring title System.Boolean hasSubMenu Fields | Improve this Doc View Source action Declaration public ustring action Field Value Type Description NStack.ustring | Improve this Doc View Source checkStyle Declaration public MenuItemCheckStyle checkStyle Field Value Type Description MenuItemCheckStyle | Improve this Doc View Source hasSubMenu Declaration public bool hasSubMenu Field Value Type Description System.Boolean | Improve this Doc View Source help Declaration public ustring help Field Value Type Description NStack.ustring | Improve this Doc View Source isTopLevel Declaration public bool isTopLevel Field Value Type Description System.Boolean | Improve this Doc View Source shortcut Declaration public ustring shortcut Field Value Type Description NStack.ustring | Improve this Doc View Source title Declaration public ustring title Field Value Type Description NStack.ustring"
  },
  "api/UICatalog/UICatalog.Scenarios.DynamicMenuBar.DynamicMenuItemList.html": {
    "href": "api/UICatalog/UICatalog.Scenarios.DynamicMenuBar.DynamicMenuItemList.html",
    "title": "Class DynamicMenuBar.DynamicMenuItemList",
    "keywords": "Class DynamicMenuBar.DynamicMenuItemList Inheritance System.Object DynamicMenuBar.DynamicMenuItemList Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : UICatalog.Scenarios Assembly : UICatalog.dll Syntax public class DynamicMenuItemList Constructors | Improve this Doc View Source DynamicMenuItemList() Declaration public DynamicMenuItemList() | Improve this Doc View Source DynamicMenuItemList(ustring, MenuItem) Declaration public DynamicMenuItemList(ustring title, MenuItem menuItem) Parameters Type Name Description NStack.ustring title MenuItem menuItem Properties | Improve this Doc View Source MenuItem Declaration public MenuItem MenuItem { get; set; } Property Value Type Description MenuItem | Improve this Doc View Source Title Declaration public ustring Title { get; set; } Property Value Type Description NStack.ustring Methods | Improve this Doc View Source ToString() Declaration public override string ToString() Returns Type Description System.String Overrides System.Object.ToString()"
  },
  "api/UICatalog/UICatalog.Scenarios.DynamicMenuBar.DynamicMenuItemModel.html": {
    "href": "api/UICatalog/UICatalog.Scenarios.DynamicMenuBar.DynamicMenuItemModel.html",
    "title": "Class DynamicMenuBar.DynamicMenuItemModel",
    "keywords": "Class DynamicMenuBar.DynamicMenuItemModel Inheritance System.Object DynamicMenuBar.DynamicMenuItemModel Implements System.ComponentModel.INotifyPropertyChanged Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : UICatalog.Scenarios Assembly : UICatalog.dll Syntax public class DynamicMenuItemModel : INotifyPropertyChanged Constructors | Improve this Doc View Source DynamicMenuItemModel() Declaration public DynamicMenuItemModel() Properties | Improve this Doc View Source MenuBar Declaration public ustring MenuBar { get; set; } Property Value Type Description NStack.ustring | Improve this Doc View Source Menus Declaration public List<DynamicMenuBar.DynamicMenuItemList> Menus { get; set; } Property Value Type Description System.Collections.Generic.List < DynamicMenuBar.DynamicMenuItemList > | Improve this Doc View Source Parent Declaration public ustring Parent { get; set; } Property Value Type Description NStack.ustring Methods | Improve this Doc View Source GetPropertyName(String) Declaration public string GetPropertyName(string propertyName = null) Parameters Type Name Description System.String propertyName Returns Type Description System.String Events | Improve this Doc View Source PropertyChanged Declaration public event PropertyChangedEventHandler PropertyChanged Event Type Type Description System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged"
  },
  "api/UICatalog/UICatalog.Scenarios.DynamicMenuBar.html": {
    "href": "api/UICatalog/UICatalog.Scenarios.DynamicMenuBar.html",
    "title": "Class DynamicMenuBar",
    "keywords": "Class DynamicMenuBar Inheritance System.Object Scenario DynamicMenuBar Implements System.IDisposable Inherited Members Scenario.Top Scenario.Win Scenario.GetName() Scenario.GetDescription() Scenario.GetCategories() Scenario.ToString() Scenario.Setup() Scenario.Run() Scenario.RequestStop() Scenario.GetDerivedClasses<T>() Scenario.Dispose(Boolean) Scenario.Dispose() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : UICatalog.Scenarios Assembly : UICatalog.dll Syntax [Scenario.ScenarioMetadata(\"Dynamic MenuBar\", \"Demonstrates how to change a MenuBar dynamically.\")] [Scenario.ScenarioCategory(\"Top Level Windows\")] [Scenario.ScenarioCategory(\"Menus\")] public class DynamicMenuBar : Scenario, IDisposable Methods | Improve this Doc View Source Init(Toplevel, ColorScheme) Declaration public override void Init(Toplevel top, ColorScheme colorScheme) Parameters Type Name Description Toplevel top ColorScheme colorScheme Overrides Scenario.Init(Toplevel, ColorScheme) Implements System.IDisposable"
  },
  "api/UICatalog/UICatalog.Scenarios.DynamicMenuBar.IValueConverter.html": {
    "href": "api/UICatalog/UICatalog.Scenarios.DynamicMenuBar.IValueConverter.html",
    "title": "Interface DynamicMenuBar.IValueConverter",
    "keywords": "Interface DynamicMenuBar.IValueConverter Namespace : UICatalog.Scenarios Assembly : UICatalog.dll Syntax public interface IValueConverter Methods | Improve this Doc View Source Convert(Object, Object) Declaration object Convert(object value, object parameter = null) Parameters Type Name Description System.Object value System.Object parameter Returns Type Description System.Object"
  },
  "api/UICatalog/UICatalog.Scenarios.DynamicMenuBar.ListWrapperConverter.html": {
    "href": "api/UICatalog/UICatalog.Scenarios.DynamicMenuBar.ListWrapperConverter.html",
    "title": "Class DynamicMenuBar.ListWrapperConverter",
    "keywords": "Class DynamicMenuBar.ListWrapperConverter Inheritance System.Object DynamicMenuBar.ListWrapperConverter Implements DynamicMenuBar.IValueConverter Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : UICatalog.Scenarios Assembly : UICatalog.dll Syntax public class ListWrapperConverter : DynamicMenuBar.IValueConverter Methods | Improve this Doc View Source Convert(Object, Object) Declaration public object Convert(object value, object parameter = null) Parameters Type Name Description System.Object value System.Object parameter Returns Type Description System.Object Implements DynamicMenuBar.IValueConverter"
  },
  "api/UICatalog/UICatalog.Scenarios.DynamicMenuBar.UStringValueConverter.html": {
    "href": "api/UICatalog/UICatalog.Scenarios.DynamicMenuBar.UStringValueConverter.html",
    "title": "Class DynamicMenuBar.UStringValueConverter",
    "keywords": "Class DynamicMenuBar.UStringValueConverter Inheritance System.Object DynamicMenuBar.UStringValueConverter Implements DynamicMenuBar.IValueConverter Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : UICatalog.Scenarios Assembly : UICatalog.dll Syntax public class UStringValueConverter : DynamicMenuBar.IValueConverter Methods | Improve this Doc View Source Convert(Object, Object) Declaration public object Convert(object value, object parameter = null) Parameters Type Name Description System.Object value System.Object parameter Returns Type Description System.Object Implements DynamicMenuBar.IValueConverter"
  },
  "api/UICatalog/UICatalog.Scenarios.DynamicStatusBar.Binding.html": {
    "href": "api/UICatalog/UICatalog.Scenarios.DynamicStatusBar.Binding.html",
    "title": "Class DynamicStatusBar.Binding",
    "keywords": "Class DynamicStatusBar.Binding Inheritance System.Object DynamicStatusBar.Binding Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : UICatalog.Scenarios Assembly : UICatalog.dll Syntax public class Binding Constructors | Improve this Doc View Source Binding(View, String, View, String, DynamicStatusBar.IValueConverter) Declaration public Binding(View source, string sourcePropertyName, View target, string targetPropertyName, DynamicStatusBar.IValueConverter valueConverter = null) Parameters Type Name Description View source System.String sourcePropertyName View target System.String targetPropertyName DynamicStatusBar.IValueConverter valueConverter Properties | Improve this Doc View Source Source Declaration public View Source { get; } Property Value Type Description View | Improve this Doc View Source SourcePropertyName Declaration public string SourcePropertyName { get; } Property Value Type Description System.String | Improve this Doc View Source Target Declaration public View Target { get; } Property Value Type Description View | Improve this Doc View Source TargetPropertyName Declaration public string TargetPropertyName { get; } Property Value Type Description System.String"
  },
  "api/UICatalog/UICatalog.Scenarios.DynamicStatusBar.DynamicStatusBarDetails.html": {
    "href": "api/UICatalog/UICatalog.Scenarios.DynamicStatusBar.DynamicStatusBarDetails.html",
    "title": "Class DynamicStatusBar.DynamicStatusBarDetails",
    "keywords": "Class DynamicStatusBar.DynamicStatusBarDetails Inheritance System.Object Responder View FrameView DynamicStatusBar.DynamicStatusBarDetails Implements System.IDisposable System.ComponentModel.ISupportInitializeNotification System.ComponentModel.ISupportInitialize Inherited Members FrameView.Title FrameView.Border FrameView.Add(View) FrameView.Remove(View) FrameView.RemoveAll() FrameView.Redraw(Rect) FrameView.Text FrameView.TextAlignment FrameView.OnEnter(View) FrameView.OnCanFocusChanged() View.Added View.Removed View.Enter View.Leave View.MouseEnter View.MouseLeave View.MouseClick View.CanFocusChanged View.EnabledChanged View.VisibleChanged View.HotKeyChanged View.HotKey View.HotKeySpecifier View.Shortcut View.ShortcutTag View.ShortcutAction View.Data View.Driver View.Subviews View.TabIndexes View.TabIndex View.TabStop View.CanFocus View.Id View.IsCurrentTop View.WantMousePositionReports View.WantContinuousButtonPressed View.Frame View.LayoutStyle View.Bounds View.X View.Y View.Width View.Height View.ForceValidatePosDim View.GetMinWidthHeight(Size) View.SetMinWidthHeight() View.TextFormatter View.SuperView View.UpdateTextFormatterText() View.ProcessResizeView() View.SetNeedsDisplay() View.ClearLayoutNeeded() View.SetNeedsDisplay(Rect) View.SetChildNeedsDisplay() View.Add(View[]) View.BringSubviewToFront(View) View.SendSubviewToBack(View) View.SendSubviewBackwards(View) View.BringSubviewForward(View) View.Clear() View.Clear(Rect) View.ScreenToView(Int32, Int32) View.ClipToBounds() View.SetClip(Rect) View.DrawFrame(Rect, Int32, Boolean) View.DrawHotString(ustring, Attribute, Attribute) View.DrawHotString(ustring, Boolean, ColorScheme) View.Move(Int32, Int32, Boolean) View.PositionCursor() View.HasFocus View.OnAdded(View) View.OnRemoved(View) View.OnLeave(View) View.Focused View.MostFocused View.ColorScheme View.AddRune(Int32, Int32, Rune) View.ClearNeedsDisplay() View.DrawContent View.OnDrawContent(Rect) View.DrawContentComplete View.OnDrawContentComplete(Rect) View.SetFocus() View.KeyPress View.ProcessKey(KeyEvent) View.InvokeKeybindings(KeyEvent) View.AddKeyBinding(Key, Command[]) View.ReplaceKeyBinding(Key, Key) View.ContainsKeyBinding(Key) View.ClearKeybindings() View.ClearKeybinding(Key) View.ClearKeybinding(Command[]) View.AddCommand(Command, Func<Nullable<Boolean>>) View.GetSupportedCommands() View.GetKeyFromCommand(Command[]) View.ProcessHotKey(KeyEvent) View.ProcessColdKey(KeyEvent) View.KeyDown View.OnKeyDown(KeyEvent) View.KeyUp View.OnKeyUp(KeyEvent) View.EnsureFocus() View.FocusFirst() View.FocusLast() View.FocusPrev() View.FocusNext() View.LayoutStarted View.LayoutComplete View.Initialized View.LayoutSubviews() View.AutoSize View.PreserveTrailingSpaces View.VerticalTextAlignment View.TextDirection View.IsInitialized View.IsAdded View.Enabled View.Visible View.ToString() View.GetAutoSize() View.GetHotKeySpecifierLength(Boolean) View.GetTextFormatterBoundsSize() View.GetBoundsTextFormatterSize() View.OnMouseEnter(MouseEvent) View.OnMouseLeave(MouseEvent) View.OnMouseEvent(MouseEvent) View.OnMouseClick(View.MouseEventArgs) View.OnEnabledChanged() View.OnVisibleChanged() View.Dispose(Boolean) View.BeginInit() View.EndInit() View.SetWidth(Int32, Int32) View.SetHeight(Int32, Int32) View.GetCurrentWidth(Int32) View.GetCurrentHeight(Int32) View.GetNormalColor() View.GetTopSuperView() Responder.MouseEvent(MouseEvent) Responder.Dispose() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : UICatalog.Scenarios Assembly : UICatalog.dll Syntax public class DynamicStatusBarDetails : FrameView, IDisposable, ISupportInitializeNotification, ISupportInitialize Constructors | Improve this Doc View Source DynamicStatusBarDetails(ustring) Declaration public DynamicStatusBarDetails(ustring title) Parameters Type Name Description NStack.ustring title | Improve this Doc View Source DynamicStatusBarDetails(StatusItem) Declaration public DynamicStatusBarDetails(StatusItem statusItem = null) Parameters Type Name Description StatusItem statusItem Fields | Improve this Doc View Source _statusItem Declaration public StatusItem _statusItem Field Value Type Description StatusItem | Improve this Doc View Source _txtAction Declaration public TextView _txtAction Field Value Type Description TextView | Improve this Doc View Source _txtShortcut Declaration public TextField _txtShortcut Field Value Type Description TextField | Improve this Doc View Source _txtTitle Declaration public TextField _txtTitle Field Value Type Description TextField Methods | Improve this Doc View Source CreateAction(DynamicStatusBar.DynamicStatusItem) Declaration public Action CreateAction(DynamicStatusBar.DynamicStatusItem item) Parameters Type Name Description DynamicStatusBar.DynamicStatusItem item Returns Type Description System.Action | Improve this Doc View Source EditStatusItem(StatusItem) Declaration public void EditStatusItem(StatusItem statusItem) Parameters Type Name Description StatusItem statusItem | Improve this Doc View Source EnterStatusItem() Declaration public DynamicStatusBar.DynamicStatusItem EnterStatusItem() Returns Type Description DynamicStatusBar.DynamicStatusItem Implements System.IDisposable System.ComponentModel.ISupportInitializeNotification System.ComponentModel.ISupportInitialize"
  },
  "api/UICatalog/UICatalog.Scenarios.DynamicStatusBar.DynamicStatusBarSample.html": {
    "href": "api/UICatalog/UICatalog.Scenarios.DynamicStatusBar.DynamicStatusBarSample.html",
    "title": "Class DynamicStatusBar.DynamicStatusBarSample",
    "keywords": "Class DynamicStatusBar.DynamicStatusBarSample Inheritance System.Object Responder View Toplevel Window DynamicStatusBar.DynamicStatusBarSample Implements System.IDisposable System.ComponentModel.ISupportInitializeNotification System.ComponentModel.ISupportInitialize Inherited Members Window.Title Window.Border Window.Add(View) Window.Remove(View) Window.RemoveAll() Window.Redraw(Rect) Window.OnCanFocusChanged() Window.Text Window.TextAlignment Window.OnTitleChanging(ustring, ustring) Window.TitleChanging Window.OnTitleChanged(ustring, ustring) Window.TitleChanged Toplevel.Running Toplevel.Loaded Toplevel.Ready Toplevel.Unloaded Toplevel.Activate Toplevel.Deactivate Toplevel.ChildClosed Toplevel.AllChildClosed Toplevel.Closing Toplevel.Closed Toplevel.ChildLoaded Toplevel.ChildUnloaded Toplevel.Resized Toplevel.OnLoaded() Toplevel.AlternateForwardKeyChanged Toplevel.OnAlternateForwardKeyChanged(Key) Toplevel.AlternateBackwardKeyChanged Toplevel.OnAlternateBackwardKeyChanged(Key) Toplevel.QuitKeyChanged Toplevel.OnQuitKeyChanged(Key) Toplevel.Create() Toplevel.CanFocus Toplevel.Modal Toplevel.MenuBar Toplevel.StatusBar Toplevel.IsMdiContainer Toplevel.IsMdiChild Toplevel.OnKeyDown(KeyEvent) Toplevel.OnKeyUp(KeyEvent) Toplevel.ProcessKey(KeyEvent) Toplevel.ProcessColdKey(KeyEvent) Toplevel.PositionToplevel(Toplevel) Toplevel.MouseEvent(MouseEvent) Toplevel.WillPresent() Toplevel.MoveNext() Toplevel.MovePrevious() Toplevel.RequestStop() Toplevel.RequestStop(Toplevel) Toplevel.PositionCursor() Toplevel.GetTopMdiChild(Type, String[]) Toplevel.ShowChild(Toplevel) View.Added View.Removed View.Enter View.Leave View.MouseEnter View.MouseLeave View.MouseClick View.CanFocusChanged View.EnabledChanged View.VisibleChanged View.HotKeyChanged View.HotKey View.HotKeySpecifier View.Shortcut View.ShortcutTag View.ShortcutAction View.Data View.Driver View.Subviews View.TabIndexes View.TabIndex View.TabStop View.Id View.IsCurrentTop View.WantMousePositionReports View.WantContinuousButtonPressed View.Frame View.LayoutStyle View.Bounds View.X View.Y View.Width View.Height View.ForceValidatePosDim View.GetMinWidthHeight(Size) View.SetMinWidthHeight() View.TextFormatter View.SuperView View.UpdateTextFormatterText() View.ProcessResizeView() View.SetNeedsDisplay() View.ClearLayoutNeeded() View.SetNeedsDisplay(Rect) View.SetChildNeedsDisplay() View.Add(View[]) View.BringSubviewToFront(View) View.SendSubviewToBack(View) View.SendSubviewBackwards(View) View.BringSubviewForward(View) View.Clear() View.Clear(Rect) View.ScreenToView(Int32, Int32) View.ClipToBounds() View.SetClip(Rect) View.DrawFrame(Rect, Int32, Boolean) View.DrawHotString(ustring, Attribute, Attribute) View.DrawHotString(ustring, Boolean, ColorScheme) View.Move(Int32, Int32, Boolean) View.HasFocus View.OnAdded(View) View.OnRemoved(View) View.OnEnter(View) View.OnLeave(View) View.Focused View.MostFocused View.ColorScheme View.AddRune(Int32, Int32, Rune) View.ClearNeedsDisplay() View.DrawContent View.OnDrawContent(Rect) View.DrawContentComplete View.OnDrawContentComplete(Rect) View.SetFocus() View.KeyPress View.InvokeKeybindings(KeyEvent) View.AddKeyBinding(Key, Command[]) View.ReplaceKeyBinding(Key, Key) View.ContainsKeyBinding(Key) View.ClearKeybindings() View.ClearKeybinding(Key) View.ClearKeybinding(Command[]) View.AddCommand(Command, Func<Nullable<Boolean>>) View.GetSupportedCommands() View.GetKeyFromCommand(Command[]) View.ProcessHotKey(KeyEvent) View.KeyDown View.KeyUp View.EnsureFocus() View.FocusFirst() View.FocusLast() View.FocusPrev() View.FocusNext() View.LayoutStarted View.LayoutComplete View.Initialized View.LayoutSubviews() View.AutoSize View.PreserveTrailingSpaces View.VerticalTextAlignment View.TextDirection View.IsInitialized View.IsAdded View.Enabled View.Visible View.ToString() View.GetAutoSize() View.GetHotKeySpecifierLength(Boolean) View.GetTextFormatterBoundsSize() View.GetBoundsTextFormatterSize() View.OnMouseEnter(MouseEvent) View.OnMouseLeave(MouseEvent) View.OnMouseEvent(MouseEvent) View.OnMouseClick(View.MouseEventArgs) View.OnEnabledChanged() View.OnVisibleChanged() View.Dispose(Boolean) View.BeginInit() View.EndInit() View.SetWidth(Int32, Int32) View.SetHeight(Int32, Int32) View.GetCurrentWidth(Int32) View.GetCurrentHeight(Int32) View.GetNormalColor() View.GetTopSuperView() Responder.Dispose() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : UICatalog.Scenarios Assembly : UICatalog.dll Syntax public class DynamicStatusBarSample : Window, IDisposable, ISupportInitializeNotification, ISupportInitialize Constructors | Improve this Doc View Source DynamicStatusBarSample(ustring) Declaration public DynamicStatusBarSample(ustring title) Parameters Type Name Description NStack.ustring title Properties | Improve this Doc View Source DataContext Declaration public DynamicStatusBar.DynamicStatusItemModel DataContext { get; set; } Property Value Type Description DynamicStatusBar.DynamicStatusItemModel Methods | Improve this Doc View Source SetTitleText(ustring, ustring) Declaration public static ustring SetTitleText(ustring title, ustring shortcut) Parameters Type Name Description NStack.ustring title NStack.ustring shortcut Returns Type Description NStack.ustring Implements System.IDisposable System.ComponentModel.ISupportInitializeNotification System.ComponentModel.ISupportInitialize"
  },
  "api/UICatalog/UICatalog.Scenarios.DynamicStatusBar.DynamicStatusItem.html": {
    "href": "api/UICatalog/UICatalog.Scenarios.DynamicStatusBar.DynamicStatusItem.html",
    "title": "Class DynamicStatusBar.DynamicStatusItem",
    "keywords": "Class DynamicStatusBar.DynamicStatusItem Inheritance System.Object DynamicStatusBar.DynamicStatusItem Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : UICatalog.Scenarios Assembly : UICatalog.dll Syntax public class DynamicStatusItem Constructors | Improve this Doc View Source DynamicStatusItem() Declaration public DynamicStatusItem() | Improve this Doc View Source DynamicStatusItem(ustring) Declaration public DynamicStatusItem(ustring title) Parameters Type Name Description NStack.ustring title | Improve this Doc View Source DynamicStatusItem(ustring, ustring, ustring) Declaration public DynamicStatusItem(ustring title, ustring action, ustring shortcut = null) Parameters Type Name Description NStack.ustring title NStack.ustring action NStack.ustring shortcut Fields | Improve this Doc View Source action Declaration public ustring action Field Value Type Description NStack.ustring | Improve this Doc View Source shortcut Declaration public ustring shortcut Field Value Type Description NStack.ustring | Improve this Doc View Source title Declaration public ustring title Field Value Type Description NStack.ustring"
  },
  "api/UICatalog/UICatalog.Scenarios.DynamicStatusBar.DynamicStatusItemList.html": {
    "href": "api/UICatalog/UICatalog.Scenarios.DynamicStatusBar.DynamicStatusItemList.html",
    "title": "Class DynamicStatusBar.DynamicStatusItemList",
    "keywords": "Class DynamicStatusBar.DynamicStatusItemList Inheritance System.Object DynamicStatusBar.DynamicStatusItemList Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : UICatalog.Scenarios Assembly : UICatalog.dll Syntax public class DynamicStatusItemList Constructors | Improve this Doc View Source DynamicStatusItemList() Declaration public DynamicStatusItemList() | Improve this Doc View Source DynamicStatusItemList(ustring, StatusItem) Declaration public DynamicStatusItemList(ustring title, StatusItem statusItem) Parameters Type Name Description NStack.ustring title StatusItem statusItem Properties | Improve this Doc View Source StatusItem Declaration public StatusItem StatusItem { get; set; } Property Value Type Description StatusItem | Improve this Doc View Source Title Declaration public ustring Title { get; set; } Property Value Type Description NStack.ustring Methods | Improve this Doc View Source ToString() Declaration public override string ToString() Returns Type Description System.String Overrides System.Object.ToString()"
  },
  "api/UICatalog/UICatalog.Scenarios.DynamicStatusBar.DynamicStatusItemModel.html": {
    "href": "api/UICatalog/UICatalog.Scenarios.DynamicStatusBar.DynamicStatusItemModel.html",
    "title": "Class DynamicStatusBar.DynamicStatusItemModel",
    "keywords": "Class DynamicStatusBar.DynamicStatusItemModel Inheritance System.Object DynamicStatusBar.DynamicStatusItemModel Implements System.ComponentModel.INotifyPropertyChanged Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : UICatalog.Scenarios Assembly : UICatalog.dll Syntax public class DynamicStatusItemModel : INotifyPropertyChanged Constructors | Improve this Doc View Source DynamicStatusItemModel() Declaration public DynamicStatusItemModel() Properties | Improve this Doc View Source Items Declaration public List<DynamicStatusBar.DynamicStatusItemList> Items { get; set; } Property Value Type Description System.Collections.Generic.List < DynamicStatusBar.DynamicStatusItemList > | Improve this Doc View Source StatusBar Declaration public ustring StatusBar { get; set; } Property Value Type Description NStack.ustring Methods | Improve this Doc View Source GetPropertyName(String) Declaration public string GetPropertyName(string propertyName = null) Parameters Type Name Description System.String propertyName Returns Type Description System.String Events | Improve this Doc View Source PropertyChanged Declaration public event PropertyChangedEventHandler PropertyChanged Event Type Type Description System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged"
  },
  "api/UICatalog/UICatalog.Scenarios.DynamicStatusBar.html": {
    "href": "api/UICatalog/UICatalog.Scenarios.DynamicStatusBar.html",
    "title": "Class DynamicStatusBar",
    "keywords": "Class DynamicStatusBar Inheritance System.Object Scenario DynamicStatusBar Implements System.IDisposable Inherited Members Scenario.Top Scenario.Win Scenario.GetName() Scenario.GetDescription() Scenario.GetCategories() Scenario.ToString() Scenario.Setup() Scenario.Run() Scenario.RequestStop() Scenario.GetDerivedClasses<T>() Scenario.Dispose(Boolean) Scenario.Dispose() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : UICatalog.Scenarios Assembly : UICatalog.dll Syntax [Scenario.ScenarioMetadata(\"Dynamic StatusBar\", \"Demonstrates how to add and remove a StatusBar and change items dynamically.\")] [Scenario.ScenarioCategory(\"Top Level Windows\")] public class DynamicStatusBar : Scenario, IDisposable Methods | Improve this Doc View Source Init(Toplevel, ColorScheme) Declaration public override void Init(Toplevel top, ColorScheme colorScheme) Parameters Type Name Description Toplevel top ColorScheme colorScheme Overrides Scenario.Init(Toplevel, ColorScheme) Implements System.IDisposable"
  },
  "api/UICatalog/UICatalog.Scenarios.DynamicStatusBar.IValueConverter.html": {
    "href": "api/UICatalog/UICatalog.Scenarios.DynamicStatusBar.IValueConverter.html",
    "title": "Interface DynamicStatusBar.IValueConverter",
    "keywords": "Interface DynamicStatusBar.IValueConverter Namespace : UICatalog.Scenarios Assembly : UICatalog.dll Syntax public interface IValueConverter Methods | Improve this Doc View Source Convert(Object, Object) Declaration object Convert(object value, object parameter = null) Parameters Type Name Description System.Object value System.Object parameter Returns Type Description System.Object"
  },
  "api/UICatalog/UICatalog.Scenarios.DynamicStatusBar.ListWrapperConverter.html": {
    "href": "api/UICatalog/UICatalog.Scenarios.DynamicStatusBar.ListWrapperConverter.html",
    "title": "Class DynamicStatusBar.ListWrapperConverter",
    "keywords": "Class DynamicStatusBar.ListWrapperConverter Inheritance System.Object DynamicStatusBar.ListWrapperConverter Implements DynamicStatusBar.IValueConverter Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : UICatalog.Scenarios Assembly : UICatalog.dll Syntax public class ListWrapperConverter : DynamicStatusBar.IValueConverter Methods | Improve this Doc View Source Convert(Object, Object) Declaration public object Convert(object value, object parameter = null) Parameters Type Name Description System.Object value System.Object parameter Returns Type Description System.Object Implements DynamicStatusBar.IValueConverter"
  },
  "api/UICatalog/UICatalog.Scenarios.DynamicStatusBar.UStringValueConverter.html": {
    "href": "api/UICatalog/UICatalog.Scenarios.DynamicStatusBar.UStringValueConverter.html",
    "title": "Class DynamicStatusBar.UStringValueConverter",
    "keywords": "Class DynamicStatusBar.UStringValueConverter Inheritance System.Object DynamicStatusBar.UStringValueConverter Implements DynamicStatusBar.IValueConverter Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : UICatalog.Scenarios Assembly : UICatalog.dll Syntax public class UStringValueConverter : DynamicStatusBar.IValueConverter Methods | Improve this Doc View Source Convert(Object, Object) Declaration public object Convert(object value, object parameter = null) Parameters Type Name Description System.Object value System.Object parameter Returns Type Description System.Object Implements DynamicStatusBar.IValueConverter"
  },
  "api/UICatalog/UICatalog.Scenarios.Editor.html": {
    "href": "api/UICatalog/UICatalog.Scenarios.Editor.html",
    "title": "Class Editor",
    "keywords": "Class Editor Inheritance System.Object Scenario Editor Implements System.IDisposable Inherited Members Scenario.Top Scenario.Win Scenario.GetName() Scenario.GetDescription() Scenario.GetCategories() Scenario.ToString() Scenario.Run() Scenario.RequestStop() Scenario.GetDerivedClasses<T>() Scenario.Dispose(Boolean) Scenario.Dispose() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : UICatalog.Scenarios Assembly : UICatalog.dll Syntax [Scenario.ScenarioMetadata(\"Editor\", \"A Text Editor using the TextView control.\")] [Scenario.ScenarioCategory(\"Controls\")] [Scenario.ScenarioCategory(\"Dialogs\")] [Scenario.ScenarioCategory(\"Text and Formatting\")] [Scenario.ScenarioCategory(\"Top Level Windows\")] [Scenario.ScenarioCategory(\"Files and IO\")] [Scenario.ScenarioCategory(\"TextView\")] public class Editor : Scenario, IDisposable Methods | Improve this Doc View Source Init(Toplevel, ColorScheme) Declaration public override void Init(Toplevel top, ColorScheme colorScheme) Parameters Type Name Description Toplevel top ColorScheme colorScheme Overrides Scenario.Init(Toplevel, ColorScheme) | Improve this Doc View Source Setup() Declaration public override void Setup() Overrides Scenario.Setup() Implements System.IDisposable"
  },
  "api/UICatalog/UICatalog.Scenarios.GraphViewExample.html": {
    "href": "api/UICatalog/UICatalog.Scenarios.GraphViewExample.html",
    "title": "Class GraphViewExample",
    "keywords": "Class GraphViewExample Inheritance System.Object Scenario GraphViewExample Implements System.IDisposable Inherited Members Scenario.Top Scenario.Win Scenario.Init(Toplevel, ColorScheme) Scenario.GetName() Scenario.GetDescription() Scenario.GetCategories() Scenario.ToString() Scenario.Run() Scenario.RequestStop() Scenario.GetDerivedClasses<T>() Scenario.Dispose(Boolean) Scenario.Dispose() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : UICatalog.Scenarios Assembly : UICatalog.dll Syntax [Scenario.ScenarioMetadata(\"Graph View\", \"Demos the GraphView control.\")] [Scenario.ScenarioCategory(\"Controls\")] public class GraphViewExample : Scenario, IDisposable Methods | Improve this Doc View Source Setup() Declaration public override void Setup() Overrides Scenario.Setup() Implements System.IDisposable"
  },
  "api/UICatalog/UICatalog.Scenarios.HexEditor.html": {
    "href": "api/UICatalog/UICatalog.Scenarios.HexEditor.html",
    "title": "Class HexEditor",
    "keywords": "Class HexEditor Inheritance System.Object Scenario HexEditor Implements System.IDisposable Inherited Members Scenario.Top Scenario.Win Scenario.Init(Toplevel, ColorScheme) Scenario.GetName() Scenario.GetDescription() Scenario.GetCategories() Scenario.ToString() Scenario.Run() Scenario.RequestStop() Scenario.GetDerivedClasses<T>() Scenario.Dispose(Boolean) Scenario.Dispose() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : UICatalog.Scenarios Assembly : UICatalog.dll Syntax [Scenario.ScenarioMetadata(\"HexEditor\", \"A binary (hex) editor using the HexView control.\")] [Scenario.ScenarioCategory(\"Controls\")] [Scenario.ScenarioCategory(\"Dialogs\")] [Scenario.ScenarioCategory(\"Text and Formatting\")] [Scenario.ScenarioCategory(\"Top Level Windows\")] [Scenario.ScenarioCategory(\"Files and IO\")] public class HexEditor : Scenario, IDisposable Methods | Improve this Doc View Source Setup() Declaration public override void Setup() Overrides Scenario.Setup() Implements System.IDisposable"
  },
  "api/UICatalog/UICatalog.Scenarios.html": {
    "href": "api/UICatalog/UICatalog.Scenarios.html",
    "title": "Namespace UICatalog.Scenarios",
    "keywords": "Namespace UICatalog.Scenarios Classes AllViewsTester AutoSizeAndDirectionText BackgroundWorkerCollection BasicColors Borders BordersComparisons BordersOnFrameView BordersOnToplevel BordersOnWindow Buttons CharacterMap This Scenario demonstrates building a custom control (a class deriving from View) that: Provides a simple \"Character Map\" application (like Windows' charmap.exe). Helps test unicode character rendering in Terminal.Gui Illustrates how to use ScrollView to do infinite scrolling ClassExplorer Clipping ColorPickers ComboBoxIteration ComputedLayout This Scenario demonstrates how to use Termina.gui's Dim and Pos Layout System. [x] - Using Dim.Fill to fill a window [x] - Using Dim.Fill and Dim.Pos to automatically align controls based on an initial control [ ] - ... ContextMenus CsvEditor Dialogs DynamicMenuBar DynamicMenuBar.Binding DynamicMenuBar.DynamicMenuBarDetails DynamicMenuBar.DynamicMenuBarSample DynamicMenuBar.DynamicMenuItem DynamicMenuBar.DynamicMenuItemList DynamicMenuBar.DynamicMenuItemModel DynamicMenuBar.ListWrapperConverter DynamicMenuBar.UStringValueConverter DynamicStatusBar DynamicStatusBar.Binding DynamicStatusBar.DynamicStatusBarDetails DynamicStatusBar.DynamicStatusBarSample DynamicStatusBar.DynamicStatusItem DynamicStatusBar.DynamicStatusItemList DynamicStatusBar.DynamicStatusItemModel DynamicStatusBar.ListWrapperConverter DynamicStatusBar.UStringValueConverter Editor GraphViewExample HexEditor InteractiveTree InvertColors Keys LabelsAsLabels LineViewExample ListsAndCombos ListViewWithSelection MessageBoxes Mouse MultiColouredTable MyScenario Notepad Progress ProgressBarStyles RuneWidthGreaterThanOne Scrolling SendKeys SingleBackgroundWorker SingleBackgroundWorker.MainApp SingleBackgroundWorker.StagingUIController SyntaxHighlighting TableEditor TabViewExample Text TextAlignments TextAlignmentsAndDirections TextFormatterDemo TextViewAutocompletePopup Threading TimeAndDate TreeUseCases TreeViewFileSystem UnicodeInMenu WindowsAndFrameViews WizardAsView Wizards Interfaces DynamicMenuBar.IValueConverter DynamicStatusBar.IValueConverter"
  },
  "api/UICatalog/UICatalog.Scenarios.InteractiveTree.html": {
    "href": "api/UICatalog/UICatalog.Scenarios.InteractiveTree.html",
    "title": "Class InteractiveTree",
    "keywords": "Class InteractiveTree Inheritance System.Object Scenario InteractiveTree Implements System.IDisposable Inherited Members Scenario.Top Scenario.Win Scenario.Init(Toplevel, ColorScheme) Scenario.GetName() Scenario.GetDescription() Scenario.GetCategories() Scenario.ToString() Scenario.Run() Scenario.RequestStop() Scenario.GetDerivedClasses<T>() Scenario.Dispose(Boolean) Scenario.Dispose() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : UICatalog.Scenarios Assembly : UICatalog.dll Syntax [Scenario.ScenarioMetadata(\"Interactive Tree\", \"Create nodes and child nodes in TreeView.\")] [Scenario.ScenarioCategory(\"Controls\")] [Scenario.ScenarioCategory(\"TreeView\")] public class InteractiveTree : Scenario, IDisposable Methods | Improve this Doc View Source Setup() Declaration public override void Setup() Overrides Scenario.Setup() Implements System.IDisposable"
  },
  "api/UICatalog/UICatalog.Scenarios.InvertColors.html": {
    "href": "api/UICatalog/UICatalog.Scenarios.InvertColors.html",
    "title": "Class InvertColors",
    "keywords": "Class InvertColors Inheritance System.Object Scenario InvertColors Implements System.IDisposable Inherited Members Scenario.Top Scenario.Win Scenario.Init(Toplevel, ColorScheme) Scenario.GetName() Scenario.GetDescription() Scenario.GetCategories() Scenario.ToString() Scenario.Run() Scenario.RequestStop() Scenario.GetDerivedClasses<T>() Scenario.Dispose(Boolean) Scenario.Dispose() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : UICatalog.Scenarios Assembly : UICatalog.dll Syntax [Scenario.ScenarioMetadata(\"Invert Colors\", \"Invert the foreground and the background colors.\")] [Scenario.ScenarioCategory(\"Colors\")] [Scenario.ScenarioCategory(\"Text and Formatting\")] public class InvertColors : Scenario, IDisposable Methods | Improve this Doc View Source Setup() Declaration public override void Setup() Overrides Scenario.Setup() Implements System.IDisposable"
  },
  "api/UICatalog/UICatalog.Scenarios.Keys.html": {
    "href": "api/UICatalog/UICatalog.Scenarios.Keys.html",
    "title": "Class Keys",
    "keywords": "Class Keys Inheritance System.Object Scenario Keys Implements System.IDisposable Inherited Members Scenario.Top Scenario.Win Scenario.GetName() Scenario.GetDescription() Scenario.GetCategories() Scenario.ToString() Scenario.Run() Scenario.RequestStop() Scenario.GetDerivedClasses<T>() Scenario.Dispose(Boolean) Scenario.Dispose() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : UICatalog.Scenarios Assembly : UICatalog.dll Syntax [Scenario.ScenarioMetadata(\"Keys\", \"Shows how to handle keyboard input\")] [Scenario.ScenarioCategory(\"Mouse and Keyboard\")] public class Keys : Scenario, IDisposable Methods | Improve this Doc View Source Init(Toplevel, ColorScheme) Declaration public override void Init(Toplevel top, ColorScheme colorScheme) Parameters Type Name Description Toplevel top ColorScheme colorScheme Overrides Scenario.Init(Toplevel, ColorScheme) | Improve this Doc View Source Setup() Declaration public override void Setup() Overrides Scenario.Setup() Implements System.IDisposable"
  },
  "api/UICatalog/UICatalog.Scenarios.LabelsAsLabels.html": {
    "href": "api/UICatalog/UICatalog.Scenarios.LabelsAsLabels.html",
    "title": "Class LabelsAsLabels",
    "keywords": "Class LabelsAsLabels Inheritance System.Object Scenario LabelsAsLabels Implements System.IDisposable Inherited Members Scenario.Top Scenario.Win Scenario.Init(Toplevel, ColorScheme) Scenario.GetName() Scenario.GetDescription() Scenario.GetCategories() Scenario.ToString() Scenario.Run() Scenario.RequestStop() Scenario.GetDerivedClasses<T>() Scenario.Dispose(Boolean) Scenario.Dispose() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : UICatalog.Scenarios Assembly : UICatalog.dll Syntax [Scenario.ScenarioMetadata(\"Labels As Buttons\", \"Illustrates that Button is really just a Label++\")] [Scenario.ScenarioCategory(\"Controls\")] [Scenario.ScenarioCategory(\"Proof of Concept\")] public class LabelsAsLabels : Scenario, IDisposable Methods | Improve this Doc View Source Setup() Declaration public override void Setup() Overrides Scenario.Setup() Implements System.IDisposable"
  },
  "api/UICatalog/UICatalog.Scenarios.LineViewExample.html": {
    "href": "api/UICatalog/UICatalog.Scenarios.LineViewExample.html",
    "title": "Class LineViewExample",
    "keywords": "Class LineViewExample Inheritance System.Object Scenario LineViewExample Implements System.IDisposable Inherited Members Scenario.Top Scenario.Win Scenario.Init(Toplevel, ColorScheme) Scenario.GetName() Scenario.GetDescription() Scenario.GetCategories() Scenario.ToString() Scenario.Run() Scenario.RequestStop() Scenario.GetDerivedClasses<T>() Scenario.Dispose(Boolean) Scenario.Dispose() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : UICatalog.Scenarios Assembly : UICatalog.dll Syntax [Scenario.ScenarioMetadata(\"Line View\", \"Demonstrates drawing lines using the LineView control.\")] [Scenario.ScenarioCategory(\"Controls\")] [Scenario.ScenarioCategory(\"LineView\")] public class LineViewExample : Scenario, IDisposable Methods | Improve this Doc View Source Setup() Declaration public override void Setup() Overrides Scenario.Setup() Implements System.IDisposable"
  },
  "api/UICatalog/UICatalog.Scenarios.ListsAndCombos.html": {
    "href": "api/UICatalog/UICatalog.Scenarios.ListsAndCombos.html",
    "title": "Class ListsAndCombos",
    "keywords": "Class ListsAndCombos Inheritance System.Object Scenario ListsAndCombos Implements System.IDisposable Inherited Members Scenario.Top Scenario.Win Scenario.Init(Toplevel, ColorScheme) Scenario.GetName() Scenario.GetDescription() Scenario.GetCategories() Scenario.ToString() Scenario.Run() Scenario.RequestStop() Scenario.GetDerivedClasses<T>() Scenario.Dispose(Boolean) Scenario.Dispose() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : UICatalog.Scenarios Assembly : UICatalog.dll Syntax [Scenario.ScenarioMetadata(\"ListView & ComboBox\", \"Demonstrates a ListView populating a ComboBox that acts as a filter.\")] [Scenario.ScenarioCategory(\"Controls\")] [Scenario.ScenarioCategory(\"ListView\")] [Scenario.ScenarioCategory(\"ComboBox\")] public class ListsAndCombos : Scenario, IDisposable Methods | Improve this Doc View Source Setup() Declaration public override void Setup() Overrides Scenario.Setup() Implements System.IDisposable"
  },
  "api/UICatalog/UICatalog.Scenarios.ListViewWithSelection.html": {
    "href": "api/UICatalog/UICatalog.Scenarios.ListViewWithSelection.html",
    "title": "Class ListViewWithSelection",
    "keywords": "Class ListViewWithSelection Inheritance System.Object Scenario ListViewWithSelection Implements System.IDisposable Inherited Members Scenario.Top Scenario.Win Scenario.Init(Toplevel, ColorScheme) Scenario.GetName() Scenario.GetDescription() Scenario.GetCategories() Scenario.ToString() Scenario.Run() Scenario.RequestStop() Scenario.GetDerivedClasses<T>() Scenario.Dispose(Boolean) Scenario.Dispose() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : UICatalog.Scenarios Assembly : UICatalog.dll Syntax [Scenario.ScenarioMetadata(\"List View With Selection\", \"ListView with columns and selection\")] [Scenario.ScenarioCategory(\"Controls\")] [Scenario.ScenarioCategory(\"ListView\")] public class ListViewWithSelection : Scenario, IDisposable Fields | Improve this Doc View Source _allowMarkingCB Declaration public CheckBox _allowMarkingCB Field Value Type Description CheckBox | Improve this Doc View Source _allowMultipleCB Declaration public CheckBox _allowMultipleCB Field Value Type Description CheckBox | Improve this Doc View Source _customRenderCB Declaration public CheckBox _customRenderCB Field Value Type Description CheckBox | Improve this Doc View Source _listView Declaration public ListView _listView Field Value Type Description ListView | Improve this Doc View Source _scenarios Declaration public List<Type> _scenarios Field Value Type Description System.Collections.Generic.List < System.Type > Methods | Improve this Doc View Source Setup() Declaration public override void Setup() Overrides Scenario.Setup() Implements System.IDisposable"
  },
  "api/UICatalog/UICatalog.Scenarios.MessageBoxes.html": {
    "href": "api/UICatalog/UICatalog.Scenarios.MessageBoxes.html",
    "title": "Class MessageBoxes",
    "keywords": "Class MessageBoxes Inheritance System.Object Scenario MessageBoxes Implements System.IDisposable Inherited Members Scenario.Top Scenario.Win Scenario.Init(Toplevel, ColorScheme) Scenario.GetName() Scenario.GetDescription() Scenario.GetCategories() Scenario.ToString() Scenario.Run() Scenario.RequestStop() Scenario.GetDerivedClasses<T>() Scenario.Dispose(Boolean) Scenario.Dispose() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : UICatalog.Scenarios Assembly : UICatalog.dll Syntax [Scenario.ScenarioMetadata(\"MessageBoxes\", \"Demonstrates how to use the MessageBox class.\")] [Scenario.ScenarioCategory(\"Controls\")] [Scenario.ScenarioCategory(\"Dialogs\")] public class MessageBoxes : Scenario, IDisposable Methods | Improve this Doc View Source Setup() Declaration public override void Setup() Overrides Scenario.Setup() Implements System.IDisposable"
  },
  "api/UICatalog/UICatalog.Scenarios.Mouse.html": {
    "href": "api/UICatalog/UICatalog.Scenarios.Mouse.html",
    "title": "Class Mouse",
    "keywords": "Class Mouse Inheritance System.Object Scenario Mouse Implements System.IDisposable Inherited Members Scenario.Top Scenario.Win Scenario.Init(Toplevel, ColorScheme) Scenario.GetName() Scenario.GetDescription() Scenario.GetCategories() Scenario.ToString() Scenario.Run() Scenario.RequestStop() Scenario.GetDerivedClasses<T>() Scenario.Dispose(Boolean) Scenario.Dispose() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : UICatalog.Scenarios Assembly : UICatalog.dll Syntax [Scenario.ScenarioMetadata(\"Mouse\", \"Demonstrates how to capture mouse events\")] [Scenario.ScenarioCategory(\"Mouse and Keyboard\")] public class Mouse : Scenario, IDisposable Methods | Improve this Doc View Source Setup() Declaration public override void Setup() Overrides Scenario.Setup() Implements System.IDisposable"
  },
  "api/UICatalog/UICatalog.Scenarios.MultiColouredTable.html": {
    "href": "api/UICatalog/UICatalog.Scenarios.MultiColouredTable.html",
    "title": "Class MultiColouredTable",
    "keywords": "Class MultiColouredTable Inheritance System.Object Scenario MultiColouredTable Implements System.IDisposable Inherited Members Scenario.Top Scenario.Win Scenario.Init(Toplevel, ColorScheme) Scenario.GetName() Scenario.GetDescription() Scenario.GetCategories() Scenario.ToString() Scenario.Run() Scenario.RequestStop() Scenario.GetDerivedClasses<T>() Scenario.Dispose(Boolean) Scenario.Dispose() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : UICatalog.Scenarios Assembly : UICatalog.dll Syntax [Scenario.ScenarioMetadata(\"MultiColouredTable\", \"Demonstrates how to multi color cell contents.\")] [Scenario.ScenarioCategory(\"Controls\")] [Scenario.ScenarioCategory(\"Colors\")] [Scenario.ScenarioCategory(\"TableView\")] public class MultiColouredTable : Scenario, IDisposable Methods | Improve this Doc View Source Setup() Declaration public override void Setup() Overrides Scenario.Setup() Implements System.IDisposable"
  },
  "api/UICatalog/UICatalog.Scenarios.MyScenario.html": {
    "href": "api/UICatalog/UICatalog.Scenarios.MyScenario.html",
    "title": "Class MyScenario",
    "keywords": "Class MyScenario Inheritance System.Object Scenario MyScenario Implements System.IDisposable Inherited Members Scenario.Top Scenario.Win Scenario.Init(Toplevel, ColorScheme) Scenario.GetName() Scenario.GetDescription() Scenario.GetCategories() Scenario.ToString() Scenario.Run() Scenario.RequestStop() Scenario.GetDerivedClasses<T>() Scenario.Dispose(Boolean) Scenario.Dispose() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : UICatalog.Scenarios Assembly : UICatalog.dll Syntax [Scenario.ScenarioMetadata(\"Generic\", \"Generic sample - A template for creating new Scenarios\")] [Scenario.ScenarioCategory(\"Controls\")] public class MyScenario : Scenario, IDisposable Methods | Improve this Doc View Source Setup() Declaration public override void Setup() Overrides Scenario.Setup() Implements System.IDisposable"
  },
  "api/UICatalog/UICatalog.Scenarios.Notepad.html": {
    "href": "api/UICatalog/UICatalog.Scenarios.Notepad.html",
    "title": "Class Notepad",
    "keywords": "Class Notepad Inheritance System.Object Scenario Notepad Implements System.IDisposable Inherited Members Scenario.Top Scenario.Win Scenario.Init(Toplevel, ColorScheme) Scenario.GetName() Scenario.GetDescription() Scenario.GetCategories() Scenario.ToString() Scenario.Run() Scenario.RequestStop() Scenario.GetDerivedClasses<T>() Scenario.Dispose(Boolean) Scenario.Dispose() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : UICatalog.Scenarios Assembly : UICatalog.dll Syntax [Scenario.ScenarioMetadata(\"Notepad\", \"Multi tab text editor uising the TabView control.\")] [Scenario.ScenarioCategory(\"Controls\")] [Scenario.ScenarioCategory(\"TabView\")] public class Notepad : Scenario, IDisposable Methods | Improve this Doc View Source Save() Declaration public void Save() | Improve this Doc View Source SaveAs() Declaration public bool SaveAs() Returns Type Description System.Boolean | Improve this Doc View Source Setup() Declaration public override void Setup() Overrides Scenario.Setup() Implements System.IDisposable"
  },
  "api/UICatalog/UICatalog.Scenarios.Progress.html": {
    "href": "api/UICatalog/UICatalog.Scenarios.Progress.html",
    "title": "Class Progress",
    "keywords": "Class Progress Inheritance System.Object Scenario Progress Implements System.IDisposable Inherited Members Scenario.Top Scenario.Win Scenario.Init(Toplevel, ColorScheme) Scenario.GetName() Scenario.GetDescription() Scenario.GetCategories() Scenario.ToString() Scenario.Run() Scenario.RequestStop() Scenario.GetDerivedClasses<T>() Scenario.Dispose() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : UICatalog.Scenarios Assembly : UICatalog.dll Syntax [Scenario.ScenarioMetadata(\"Progress\", \"Shows off ProgressBar and Threading.\")] [Scenario.ScenarioCategory(\"Controls\")] [Scenario.ScenarioCategory(\"Threading\")] [Scenario.ScenarioCategory(\"ProgressBar\")] public class Progress : Scenario, IDisposable Methods | Improve this Doc View Source Dispose(Boolean) Declaration protected override void Dispose(bool disposing) Parameters Type Name Description System.Boolean disposing Overrides Scenario.Dispose(Boolean) | Improve this Doc View Source Setup() Declaration public override void Setup() Overrides Scenario.Setup() Implements System.IDisposable"
  },
  "api/UICatalog/UICatalog.Scenarios.ProgressBarStyles.html": {
    "href": "api/UICatalog/UICatalog.Scenarios.ProgressBarStyles.html",
    "title": "Class ProgressBarStyles",
    "keywords": "Class ProgressBarStyles Inheritance System.Object Scenario ProgressBarStyles Implements System.IDisposable Inherited Members Scenario.Top Scenario.Win Scenario.Init(Toplevel, ColorScheme) Scenario.GetName() Scenario.GetDescription() Scenario.GetCategories() Scenario.ToString() Scenario.Run() Scenario.RequestStop() Scenario.GetDerivedClasses<T>() Scenario.Dispose(Boolean) Scenario.Dispose() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : UICatalog.Scenarios Assembly : UICatalog.dll Syntax [Scenario.ScenarioMetadata(\"ProgressBar Styles\", \"Shows the ProgressBar Styles.\")] [Scenario.ScenarioCategory(\"Controls\")] [Scenario.ScenarioCategory(\"ProgressBar\")] [Scenario.ScenarioCategory(\"Threading\")] public class ProgressBarStyles : Scenario, IDisposable Methods | Improve this Doc View Source Setup() Declaration public override void Setup() Overrides Scenario.Setup() Implements System.IDisposable"
  },
  "api/UICatalog/UICatalog.Scenarios.RuneWidthGreaterThanOne.html": {
    "href": "api/UICatalog/UICatalog.Scenarios.RuneWidthGreaterThanOne.html",
    "title": "Class RuneWidthGreaterThanOne",
    "keywords": "Class RuneWidthGreaterThanOne Inheritance System.Object Scenario RuneWidthGreaterThanOne Implements System.IDisposable Inherited Members Scenario.Top Scenario.Win Scenario.GetName() Scenario.GetDescription() Scenario.GetCategories() Scenario.ToString() Scenario.Setup() Scenario.RequestStop() Scenario.GetDerivedClasses<T>() Scenario.Dispose(Boolean) Scenario.Dispose() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : UICatalog.Scenarios Assembly : UICatalog.dll Syntax [Scenario.ScenarioMetadata(\"RuneWidthGreaterThanOne\", \"Test rune width greater than one\")] [Scenario.ScenarioCategory(\"Controls\")] public class RuneWidthGreaterThanOne : Scenario, IDisposable Methods | Improve this Doc View Source Init(Toplevel, ColorScheme) Declaration public override void Init(Toplevel top, ColorScheme colorScheme) Parameters Type Name Description Toplevel top ColorScheme colorScheme Overrides Scenario.Init(Toplevel, ColorScheme) | Improve this Doc View Source Run() Declaration public override void Run() Overrides Scenario.Run() Implements System.IDisposable"
  },
  "api/UICatalog/UICatalog.Scenarios.Scrolling.html": {
    "href": "api/UICatalog/UICatalog.Scenarios.Scrolling.html",
    "title": "Class Scrolling",
    "keywords": "Class Scrolling Inheritance System.Object Scenario Scrolling Implements System.IDisposable Inherited Members Scenario.Top Scenario.Win Scenario.Init(Toplevel, ColorScheme) Scenario.GetName() Scenario.GetDescription() Scenario.GetCategories() Scenario.ToString() Scenario.Run() Scenario.RequestStop() Scenario.GetDerivedClasses<T>() Scenario.Dispose(Boolean) Scenario.Dispose() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : UICatalog.Scenarios Assembly : UICatalog.dll Syntax [Scenario.ScenarioMetadata(\"Scrolling\", \"Demonstrates ScrollView etc...\")] [Scenario.ScenarioCategory(\"Controls\")] [Scenario.ScenarioCategory(\"ScrollView\")] public class Scrolling : Scenario, IDisposable Methods | Improve this Doc View Source Setup() Declaration public override void Setup() Overrides Scenario.Setup() Implements System.IDisposable"
  },
  "api/UICatalog/UICatalog.Scenarios.SendKeys.html": {
    "href": "api/UICatalog/UICatalog.Scenarios.SendKeys.html",
    "title": "Class SendKeys",
    "keywords": "Class SendKeys Inheritance System.Object Scenario SendKeys Implements System.IDisposable Inherited Members Scenario.Top Scenario.Win Scenario.Init(Toplevel, ColorScheme) Scenario.GetName() Scenario.GetDescription() Scenario.GetCategories() Scenario.ToString() Scenario.Run() Scenario.RequestStop() Scenario.GetDerivedClasses<T>() Scenario.Dispose(Boolean) Scenario.Dispose() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : UICatalog.Scenarios Assembly : UICatalog.dll Syntax [Scenario.ScenarioMetadata(\"SendKeys\", \"SendKeys sample - Send key combinations.\")] [Scenario.ScenarioCategory(\"Mouse and Keyboard\")] public class SendKeys : Scenario, IDisposable Methods | Improve this Doc View Source Setup() Declaration public override void Setup() Overrides Scenario.Setup() Implements System.IDisposable"
  },
  "api/UICatalog/UICatalog.Scenarios.SingleBackgroundWorker.html": {
    "href": "api/UICatalog/UICatalog.Scenarios.SingleBackgroundWorker.html",
    "title": "Class SingleBackgroundWorker",
    "keywords": "Class SingleBackgroundWorker Inheritance System.Object Scenario SingleBackgroundWorker Implements System.IDisposable Inherited Members Scenario.Top Scenario.Win Scenario.Init(Toplevel, ColorScheme) Scenario.GetName() Scenario.GetDescription() Scenario.GetCategories() Scenario.ToString() Scenario.Setup() Scenario.RequestStop() Scenario.GetDerivedClasses<T>() Scenario.Dispose(Boolean) Scenario.Dispose() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : UICatalog.Scenarios Assembly : UICatalog.dll Syntax [Scenario.ScenarioMetadata(\"Single BackgroundWorker\", \"A single BackgroundWorker threading opening another Toplevel\")] [Scenario.ScenarioCategory(\"Threading\")] [Scenario.ScenarioCategory(\"Top Level Windows\")] public class SingleBackgroundWorker : Scenario, IDisposable Methods | Improve this Doc View Source Run() Declaration public override void Run() Overrides Scenario.Run() Implements System.IDisposable"
  },
  "api/UICatalog/UICatalog.Scenarios.SingleBackgroundWorker.MainApp.html": {
    "href": "api/UICatalog/UICatalog.Scenarios.SingleBackgroundWorker.MainApp.html",
    "title": "Class SingleBackgroundWorker.MainApp",
    "keywords": "Class SingleBackgroundWorker.MainApp Inheritance System.Object Responder View Toplevel SingleBackgroundWorker.MainApp Implements System.IDisposable System.ComponentModel.ISupportInitializeNotification System.ComponentModel.ISupportInitialize Inherited Members Toplevel.Running Toplevel.Loaded Toplevel.Ready Toplevel.Unloaded Toplevel.Activate Toplevel.Deactivate Toplevel.ChildClosed Toplevel.AllChildClosed Toplevel.Closing Toplevel.Closed Toplevel.ChildLoaded Toplevel.ChildUnloaded Toplevel.Resized Toplevel.OnLoaded() Toplevel.AlternateForwardKeyChanged Toplevel.OnAlternateForwardKeyChanged(Key) Toplevel.AlternateBackwardKeyChanged Toplevel.OnAlternateBackwardKeyChanged(Key) Toplevel.QuitKeyChanged Toplevel.OnQuitKeyChanged(Key) Toplevel.Create() Toplevel.CanFocus Toplevel.Modal Toplevel.MenuBar Toplevel.StatusBar Toplevel.IsMdiContainer Toplevel.IsMdiChild Toplevel.OnKeyDown(KeyEvent) Toplevel.OnKeyUp(KeyEvent) Toplevel.ProcessKey(KeyEvent) Toplevel.ProcessColdKey(KeyEvent) Toplevel.Add(View) Toplevel.Remove(View) Toplevel.RemoveAll() Toplevel.PositionToplevel(Toplevel) Toplevel.Redraw(Rect) Toplevel.MouseEvent(MouseEvent) Toplevel.WillPresent() Toplevel.MoveNext() Toplevel.MovePrevious() Toplevel.RequestStop() Toplevel.RequestStop(Toplevel) Toplevel.PositionCursor() Toplevel.GetTopMdiChild(Type, String[]) Toplevel.ShowChild(Toplevel) View.Added View.Removed View.Enter View.Leave View.MouseEnter View.MouseLeave View.MouseClick View.CanFocusChanged View.EnabledChanged View.VisibleChanged View.HotKeyChanged View.HotKey View.HotKeySpecifier View.Shortcut View.ShortcutTag View.ShortcutAction View.Data View.Driver View.Subviews View.TabIndexes View.TabIndex View.TabStop View.Id View.IsCurrentTop View.WantMousePositionReports View.WantContinuousButtonPressed View.Frame View.LayoutStyle View.Bounds View.X View.Y View.Width View.Height View.ForceValidatePosDim View.GetMinWidthHeight(Size) View.SetMinWidthHeight() View.TextFormatter View.SuperView View.UpdateTextFormatterText() View.ProcessResizeView() View.SetNeedsDisplay() View.ClearLayoutNeeded() View.SetNeedsDisplay(Rect) View.SetChildNeedsDisplay() View.Add(View[]) View.BringSubviewToFront(View) View.SendSubviewToBack(View) View.SendSubviewBackwards(View) View.BringSubviewForward(View) View.Clear() View.Clear(Rect) View.ScreenToView(Int32, Int32) View.ClipToBounds() View.SetClip(Rect) View.DrawFrame(Rect, Int32, Boolean) View.DrawHotString(ustring, Attribute, Attribute) View.DrawHotString(ustring, Boolean, ColorScheme) View.Move(Int32, Int32, Boolean) View.HasFocus View.OnAdded(View) View.OnRemoved(View) View.OnEnter(View) View.OnLeave(View) View.Focused View.MostFocused View.ColorScheme View.AddRune(Int32, Int32, Rune) View.ClearNeedsDisplay() View.DrawContent View.OnDrawContent(Rect) View.DrawContentComplete View.OnDrawContentComplete(Rect) View.SetFocus() View.KeyPress View.InvokeKeybindings(KeyEvent) View.AddKeyBinding(Key, Command[]) View.ReplaceKeyBinding(Key, Key) View.ContainsKeyBinding(Key) View.ClearKeybindings() View.ClearKeybinding(Key) View.ClearKeybinding(Command[]) View.AddCommand(Command, Func<Nullable<Boolean>>) View.GetSupportedCommands() View.GetKeyFromCommand(Command[]) View.ProcessHotKey(KeyEvent) View.KeyDown View.KeyUp View.EnsureFocus() View.FocusFirst() View.FocusLast() View.FocusPrev() View.FocusNext() View.LayoutStarted View.LayoutComplete View.Initialized View.LayoutSubviews() View.Text View.AutoSize View.PreserveTrailingSpaces View.TextAlignment View.VerticalTextAlignment View.TextDirection View.IsInitialized View.IsAdded View.Enabled View.Visible View.Border View.ToString() View.GetAutoSize() View.GetHotKeySpecifierLength(Boolean) View.GetTextFormatterBoundsSize() View.GetBoundsTextFormatterSize() View.OnMouseEnter(MouseEvent) View.OnMouseLeave(MouseEvent) View.OnMouseEvent(MouseEvent) View.OnMouseClick(View.MouseEventArgs) View.OnCanFocusChanged() View.OnEnabledChanged() View.OnVisibleChanged() View.Dispose(Boolean) View.BeginInit() View.EndInit() View.SetWidth(Int32, Int32) View.SetHeight(Int32, Int32) View.GetCurrentWidth(Int32) View.GetCurrentHeight(Int32) View.GetNormalColor() View.GetTopSuperView() Responder.Dispose() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : UICatalog.Scenarios Assembly : UICatalog.dll Syntax public class MainApp : Toplevel, IDisposable, ISupportInitializeNotification, ISupportInitialize Constructors | Improve this Doc View Source MainApp() Declaration public MainApp() Implements System.IDisposable System.ComponentModel.ISupportInitializeNotification System.ComponentModel.ISupportInitialize"
  },
  "api/UICatalog/UICatalog.Scenarios.SingleBackgroundWorker.StagingUIController.html": {
    "href": "api/UICatalog/UICatalog.Scenarios.SingleBackgroundWorker.StagingUIController.html",
    "title": "Class SingleBackgroundWorker.StagingUIController",
    "keywords": "Class SingleBackgroundWorker.StagingUIController Inheritance System.Object Responder View Toplevel Window SingleBackgroundWorker.StagingUIController Implements System.IDisposable System.ComponentModel.ISupportInitializeNotification System.ComponentModel.ISupportInitialize Inherited Members Window.Title Window.Border Window.Add(View) Window.Remove(View) Window.RemoveAll() Window.Redraw(Rect) Window.OnCanFocusChanged() Window.Text Window.TextAlignment Window.OnTitleChanging(ustring, ustring) Window.TitleChanging Window.OnTitleChanged(ustring, ustring) Window.TitleChanged Toplevel.Running Toplevel.Loaded Toplevel.Ready Toplevel.Unloaded Toplevel.Activate Toplevel.Deactivate Toplevel.ChildClosed Toplevel.AllChildClosed Toplevel.Closing Toplevel.Closed Toplevel.ChildLoaded Toplevel.ChildUnloaded Toplevel.Resized Toplevel.OnLoaded() Toplevel.AlternateForwardKeyChanged Toplevel.OnAlternateForwardKeyChanged(Key) Toplevel.AlternateBackwardKeyChanged Toplevel.OnAlternateBackwardKeyChanged(Key) Toplevel.QuitKeyChanged Toplevel.OnQuitKeyChanged(Key) Toplevel.Create() Toplevel.CanFocus Toplevel.Modal Toplevel.MenuBar Toplevel.StatusBar Toplevel.IsMdiContainer Toplevel.IsMdiChild Toplevel.OnKeyDown(KeyEvent) Toplevel.OnKeyUp(KeyEvent) Toplevel.ProcessKey(KeyEvent) Toplevel.ProcessColdKey(KeyEvent) Toplevel.PositionToplevel(Toplevel) Toplevel.MouseEvent(MouseEvent) Toplevel.WillPresent() Toplevel.MoveNext() Toplevel.MovePrevious() Toplevel.RequestStop() Toplevel.RequestStop(Toplevel) Toplevel.PositionCursor() Toplevel.GetTopMdiChild(Type, String[]) Toplevel.ShowChild(Toplevel) View.Added View.Removed View.Enter View.Leave View.MouseEnter View.MouseLeave View.MouseClick View.CanFocusChanged View.EnabledChanged View.VisibleChanged View.HotKeyChanged View.HotKey View.HotKeySpecifier View.Shortcut View.ShortcutTag View.ShortcutAction View.Data View.Driver View.Subviews View.TabIndexes View.TabIndex View.TabStop View.Id View.IsCurrentTop View.WantMousePositionReports View.WantContinuousButtonPressed View.Frame View.LayoutStyle View.Bounds View.X View.Y View.Width View.Height View.ForceValidatePosDim View.GetMinWidthHeight(Size) View.SetMinWidthHeight() View.TextFormatter View.SuperView View.UpdateTextFormatterText() View.ProcessResizeView() View.SetNeedsDisplay() View.ClearLayoutNeeded() View.SetNeedsDisplay(Rect) View.SetChildNeedsDisplay() View.Add(View[]) View.BringSubviewToFront(View) View.SendSubviewToBack(View) View.SendSubviewBackwards(View) View.BringSubviewForward(View) View.Clear() View.Clear(Rect) View.ScreenToView(Int32, Int32) View.ClipToBounds() View.SetClip(Rect) View.DrawFrame(Rect, Int32, Boolean) View.DrawHotString(ustring, Attribute, Attribute) View.DrawHotString(ustring, Boolean, ColorScheme) View.Move(Int32, Int32, Boolean) View.HasFocus View.OnAdded(View) View.OnRemoved(View) View.OnEnter(View) View.OnLeave(View) View.Focused View.MostFocused View.ColorScheme View.AddRune(Int32, Int32, Rune) View.ClearNeedsDisplay() View.DrawContent View.OnDrawContent(Rect) View.DrawContentComplete View.OnDrawContentComplete(Rect) View.SetFocus() View.KeyPress View.InvokeKeybindings(KeyEvent) View.AddKeyBinding(Key, Command[]) View.ReplaceKeyBinding(Key, Key) View.ContainsKeyBinding(Key) View.ClearKeybindings() View.ClearKeybinding(Key) View.ClearKeybinding(Command[]) View.AddCommand(Command, Func<Nullable<Boolean>>) View.GetSupportedCommands() View.GetKeyFromCommand(Command[]) View.ProcessHotKey(KeyEvent) View.KeyDown View.KeyUp View.EnsureFocus() View.FocusFirst() View.FocusLast() View.FocusPrev() View.FocusNext() View.LayoutStarted View.LayoutComplete View.Initialized View.LayoutSubviews() View.AutoSize View.PreserveTrailingSpaces View.VerticalTextAlignment View.TextDirection View.IsInitialized View.IsAdded View.Enabled View.Visible View.ToString() View.GetAutoSize() View.GetHotKeySpecifierLength(Boolean) View.GetTextFormatterBoundsSize() View.GetBoundsTextFormatterSize() View.OnMouseEnter(MouseEvent) View.OnMouseLeave(MouseEvent) View.OnMouseEvent(MouseEvent) View.OnMouseClick(View.MouseEventArgs) View.OnEnabledChanged() View.OnVisibleChanged() View.Dispose(Boolean) View.BeginInit() View.EndInit() View.SetWidth(Int32, Int32) View.SetHeight(Int32, Int32) View.GetCurrentWidth(Int32) View.GetCurrentHeight(Int32) View.GetNormalColor() View.GetTopSuperView() Responder.Dispose() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : UICatalog.Scenarios Assembly : UICatalog.dll Syntax public class StagingUIController : Window, IDisposable, ISupportInitializeNotification, ISupportInitialize Constructors | Improve this Doc View Source StagingUIController(Nullable<DateTime>, List<String>) Declaration public StagingUIController(DateTime? start, List<string> list) Parameters Type Name Description System.Nullable < System.DateTime > start System.Collections.Generic.List < System.String > list Methods | Improve this Doc View Source Load() Declaration public void Load() Implements System.IDisposable System.ComponentModel.ISupportInitializeNotification System.ComponentModel.ISupportInitialize"
  },
  "api/UICatalog/UICatalog.Scenarios.SyntaxHighlighting.html": {
    "href": "api/UICatalog/UICatalog.Scenarios.SyntaxHighlighting.html",
    "title": "Class SyntaxHighlighting",
    "keywords": "Class SyntaxHighlighting Inheritance System.Object Scenario SyntaxHighlighting Implements System.IDisposable Inherited Members Scenario.Top Scenario.Win Scenario.Init(Toplevel, ColorScheme) Scenario.GetName() Scenario.GetDescription() Scenario.GetCategories() Scenario.ToString() Scenario.Run() Scenario.RequestStop() Scenario.GetDerivedClasses<T>() Scenario.Dispose(Boolean) Scenario.Dispose() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : UICatalog.Scenarios Assembly : UICatalog.dll Syntax [Scenario.ScenarioMetadata(\"Syntax Highlighting\", \"Text editor with keyword highlighting using the TextView control.\")] [Scenario.ScenarioCategory(\"Text and Formatting\")] [Scenario.ScenarioCategory(\"Controls\")] [Scenario.ScenarioCategory(\"TextView\")] public class SyntaxHighlighting : Scenario, IDisposable Methods | Improve this Doc View Source Setup() Declaration public override void Setup() Overrides Scenario.Setup() Implements System.IDisposable"
  },
  "api/UICatalog/UICatalog.Scenarios.TableEditor.html": {
    "href": "api/UICatalog/UICatalog.Scenarios.TableEditor.html",
    "title": "Class TableEditor",
    "keywords": "Class TableEditor Inheritance System.Object Scenario TableEditor Implements System.IDisposable Inherited Members Scenario.Top Scenario.Win Scenario.Init(Toplevel, ColorScheme) Scenario.GetName() Scenario.GetDescription() Scenario.GetCategories() Scenario.ToString() Scenario.Run() Scenario.RequestStop() Scenario.GetDerivedClasses<T>() Scenario.Dispose(Boolean) Scenario.Dispose() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : UICatalog.Scenarios Assembly : UICatalog.dll Syntax [Scenario.ScenarioMetadata(\"TableEditor\", \"Implements data table editor using the TableView control.\")] [Scenario.ScenarioCategory(\"TableView\")] [Scenario.ScenarioCategory(\"Controls\")] [Scenario.ScenarioCategory(\"Dialogs\")] [Scenario.ScenarioCategory(\"Text and Formatting\")] [Scenario.ScenarioCategory(\"Top Level Windows\")] public class TableEditor : Scenario, IDisposable Methods | Improve this Doc View Source BuildDemoDataTable(Int32, Int32) Generates a new demo System.Data.DataTable with the given number of cols (min 5) and rows Declaration public static DataTable BuildDemoDataTable(int cols, int rows) Parameters Type Name Description System.Int32 cols System.Int32 rows Returns Type Description System.Data.DataTable | Improve this Doc View Source BuildSimpleDataTable(Int32, Int32) Builds a simple table in which cell values contents are the index of the cell. This helps testing that scrolling etc is working correctly and not skipping out any rows/columns when paging Declaration public static DataTable BuildSimpleDataTable(int cols, int rows) Parameters Type Name Description System.Int32 cols System.Int32 rows Returns Type Description System.Data.DataTable | Improve this Doc View Source Setup() Declaration public override void Setup() Overrides Scenario.Setup() Implements System.IDisposable"
  },
  "api/UICatalog/UICatalog.Scenarios.TabViewExample.html": {
    "href": "api/UICatalog/UICatalog.Scenarios.TabViewExample.html",
    "title": "Class TabViewExample",
    "keywords": "Class TabViewExample Inheritance System.Object Scenario TabViewExample Implements System.IDisposable Inherited Members Scenario.Top Scenario.Win Scenario.Init(Toplevel, ColorScheme) Scenario.GetName() Scenario.GetDescription() Scenario.GetCategories() Scenario.ToString() Scenario.Run() Scenario.RequestStop() Scenario.GetDerivedClasses<T>() Scenario.Dispose(Boolean) Scenario.Dispose() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : UICatalog.Scenarios Assembly : UICatalog.dll Syntax [Scenario.ScenarioMetadata(\"Tab View\", \"Demos TabView control with limited screen space in Absolute layout.\")] [Scenario.ScenarioCategory(\"Controls\")] [Scenario.ScenarioCategory(\"TabView\")] public class TabViewExample : Scenario, IDisposable Methods | Improve this Doc View Source Setup() Declaration public override void Setup() Overrides Scenario.Setup() Implements System.IDisposable"
  },
  "api/UICatalog/UICatalog.Scenarios.Text.html": {
    "href": "api/UICatalog/UICatalog.Scenarios.Text.html",
    "title": "Class Text",
    "keywords": "Class Text Inheritance System.Object Scenario Text Implements System.IDisposable Inherited Members Scenario.Top Scenario.Win Scenario.Init(Toplevel, ColorScheme) Scenario.GetName() Scenario.GetDescription() Scenario.GetCategories() Scenario.ToString() Scenario.Run() Scenario.RequestStop() Scenario.GetDerivedClasses<T>() Scenario.Dispose(Boolean) Scenario.Dispose() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : UICatalog.Scenarios Assembly : UICatalog.dll Syntax [Scenario.ScenarioMetadata(\"Text Input Controls\", \"Tests all text input controls\")] [Scenario.ScenarioCategory(\"Controls\")] [Scenario.ScenarioCategory(\"Mouse and Keyboard\")] [Scenario.ScenarioCategory(\"Text and Formatting\")] public class Text : Scenario, IDisposable Methods | Improve this Doc View Source Setup() Declaration public override void Setup() Overrides Scenario.Setup() Implements System.IDisposable"
  },
  "api/UICatalog/UICatalog.Scenarios.TextAlignments.html": {
    "href": "api/UICatalog/UICatalog.Scenarios.TextAlignments.html",
    "title": "Class TextAlignments",
    "keywords": "Class TextAlignments Inheritance System.Object Scenario TextAlignments Implements System.IDisposable Inherited Members Scenario.Top Scenario.Win Scenario.Init(Toplevel, ColorScheme) Scenario.GetName() Scenario.GetDescription() Scenario.GetCategories() Scenario.ToString() Scenario.Run() Scenario.RequestStop() Scenario.GetDerivedClasses<T>() Scenario.Dispose(Boolean) Scenario.Dispose() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : UICatalog.Scenarios Assembly : UICatalog.dll Syntax [Scenario.ScenarioMetadata(\"Simple Text Alignment\", \"Demonstrates horizontal text alignment\")] [Scenario.ScenarioCategory(\"Text and Formatting\")] public class TextAlignments : Scenario, IDisposable Methods | Improve this Doc View Source Setup() Declaration public override void Setup() Overrides Scenario.Setup() Implements System.IDisposable"
  },
  "api/UICatalog/UICatalog.Scenarios.TextAlignmentsAndDirections.html": {
    "href": "api/UICatalog/UICatalog.Scenarios.TextAlignmentsAndDirections.html",
    "title": "Class TextAlignmentsAndDirections",
    "keywords": "Class TextAlignmentsAndDirections Inheritance System.Object Scenario TextAlignmentsAndDirections Implements System.IDisposable Inherited Members Scenario.Top Scenario.Win Scenario.Init(Toplevel, ColorScheme) Scenario.GetName() Scenario.GetDescription() Scenario.GetCategories() Scenario.ToString() Scenario.Run() Scenario.RequestStop() Scenario.GetDerivedClasses<T>() Scenario.Dispose(Boolean) Scenario.Dispose() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : UICatalog.Scenarios Assembly : UICatalog.dll Syntax [Scenario.ScenarioMetadata(\"Text Alignment and Direction\", \"Demos horiztonal and vertical text alignment and text direction.\")] [Scenario.ScenarioCategory(\"Text and Formatting\")] public class TextAlignmentsAndDirections : Scenario, IDisposable Methods | Improve this Doc View Source Setup() Declaration public override void Setup() Overrides Scenario.Setup() Implements System.IDisposable"
  },
  "api/UICatalog/UICatalog.Scenarios.TextFormatterDemo.html": {
    "href": "api/UICatalog/UICatalog.Scenarios.TextFormatterDemo.html",
    "title": "Class TextFormatterDemo",
    "keywords": "Class TextFormatterDemo Inheritance System.Object Scenario TextFormatterDemo Implements System.IDisposable Inherited Members Scenario.Top Scenario.Win Scenario.Init(Toplevel, ColorScheme) Scenario.GetName() Scenario.GetDescription() Scenario.GetCategories() Scenario.ToString() Scenario.Run() Scenario.RequestStop() Scenario.GetDerivedClasses<T>() Scenario.Dispose(Boolean) Scenario.Dispose() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : UICatalog.Scenarios Assembly : UICatalog.dll Syntax [Scenario.ScenarioMetadata(\"TextFormatter Demo\", \"Demos and tests the TextFormatter class.\")] [Scenario.ScenarioCategory(\"Text and Formatting\")] public class TextFormatterDemo : Scenario, IDisposable Methods | Improve this Doc View Source Setup() Declaration public override void Setup() Overrides Scenario.Setup() Implements System.IDisposable"
  },
  "api/UICatalog/UICatalog.Scenarios.TextViewAutocompletePopup.html": {
    "href": "api/UICatalog/UICatalog.Scenarios.TextViewAutocompletePopup.html",
    "title": "Class TextViewAutocompletePopup",
    "keywords": "Class TextViewAutocompletePopup Inheritance System.Object Scenario TextViewAutocompletePopup Implements System.IDisposable Inherited Members Scenario.Top Scenario.Win Scenario.Init(Toplevel, ColorScheme) Scenario.GetName() Scenario.GetDescription() Scenario.GetCategories() Scenario.ToString() Scenario.Run() Scenario.RequestStop() Scenario.GetDerivedClasses<T>() Scenario.Dispose(Boolean) Scenario.Dispose() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : UICatalog.Scenarios Assembly : UICatalog.dll Syntax [Scenario.ScenarioMetadata(\"TextView Autocomplete Popup\", \"Shows five TextView Autocomplete Popup effects\")] [Scenario.ScenarioCategory(\"TextView\")] [Scenario.ScenarioCategory(\"Controls\")] [Scenario.ScenarioCategory(\"Mouse and Keyboard\")] public class TextViewAutocompletePopup : Scenario, IDisposable Methods | Improve this Doc View Source Setup() Declaration public override void Setup() Overrides Scenario.Setup() Implements System.IDisposable"
  },
  "api/UICatalog/UICatalog.Scenarios.Threading.html": {
    "href": "api/UICatalog/UICatalog.Scenarios.Threading.html",
    "title": "Class Threading",
    "keywords": "Class Threading Inheritance System.Object Scenario Threading Implements System.IDisposable Inherited Members Scenario.Top Scenario.Win Scenario.Init(Toplevel, ColorScheme) Scenario.GetName() Scenario.GetDescription() Scenario.GetCategories() Scenario.ToString() Scenario.Run() Scenario.RequestStop() Scenario.GetDerivedClasses<T>() Scenario.Dispose(Boolean) Scenario.Dispose() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : UICatalog.Scenarios Assembly : UICatalog.dll Syntax [Scenario.ScenarioMetadata(\"Threading\", \"Demonstration of how to use threading in different ways\")] [Scenario.ScenarioCategory(\"Threading\")] public class Threading : Scenario, IDisposable Methods | Improve this Doc View Source Setup() Declaration public override void Setup() Overrides Scenario.Setup() Implements System.IDisposable"
  },
  "api/UICatalog/UICatalog.Scenarios.TimeAndDate.html": {
    "href": "api/UICatalog/UICatalog.Scenarios.TimeAndDate.html",
    "title": "Class TimeAndDate",
    "keywords": "Class TimeAndDate Inheritance System.Object Scenario TimeAndDate Implements System.IDisposable Inherited Members Scenario.Top Scenario.Win Scenario.Init(Toplevel, ColorScheme) Scenario.GetName() Scenario.GetDescription() Scenario.GetCategories() Scenario.ToString() Scenario.Run() Scenario.RequestStop() Scenario.GetDerivedClasses<T>() Scenario.Dispose(Boolean) Scenario.Dispose() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : UICatalog.Scenarios Assembly : UICatalog.dll Syntax [Scenario.ScenarioMetadata(\"Time And Date\", \"Illustrates TimeField and time & date handling\")] [Scenario.ScenarioCategory(\"Controls\")] [Scenario.ScenarioCategory(\"DateTime\")] public class TimeAndDate : Scenario, IDisposable Methods | Improve this Doc View Source Setup() Declaration public override void Setup() Overrides Scenario.Setup() Implements System.IDisposable"
  },
  "api/UICatalog/UICatalog.Scenarios.TreeUseCases.html": {
    "href": "api/UICatalog/UICatalog.Scenarios.TreeUseCases.html",
    "title": "Class TreeUseCases",
    "keywords": "Class TreeUseCases Inheritance System.Object Scenario TreeUseCases Implements System.IDisposable Inherited Members Scenario.Top Scenario.Win Scenario.Init(Toplevel, ColorScheme) Scenario.GetName() Scenario.GetDescription() Scenario.GetCategories() Scenario.ToString() Scenario.Run() Scenario.RequestStop() Scenario.GetDerivedClasses<T>() Scenario.Dispose(Boolean) Scenario.Dispose() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : UICatalog.Scenarios Assembly : UICatalog.dll Syntax [Scenario.ScenarioMetadata(\"Tree View\", \"Simple tree view examples.\")] [Scenario.ScenarioCategory(\"Controls\")] [Scenario.ScenarioCategory(\"TreeView\")] public class TreeUseCases : Scenario, IDisposable Methods | Improve this Doc View Source Setup() Declaration public override void Setup() Overrides Scenario.Setup() Implements System.IDisposable"
  },
  "api/UICatalog/UICatalog.Scenarios.TreeViewFileSystem.html": {
    "href": "api/UICatalog/UICatalog.Scenarios.TreeViewFileSystem.html",
    "title": "Class TreeViewFileSystem",
    "keywords": "Class TreeViewFileSystem Inheritance System.Object Scenario TreeViewFileSystem Implements System.IDisposable Inherited Members Scenario.Top Scenario.Win Scenario.Init(Toplevel, ColorScheme) Scenario.GetName() Scenario.GetDescription() Scenario.GetCategories() Scenario.ToString() Scenario.Run() Scenario.RequestStop() Scenario.GetDerivedClasses<T>() Scenario.Dispose(Boolean) Scenario.Dispose() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : UICatalog.Scenarios Assembly : UICatalog.dll Syntax [Scenario.ScenarioMetadata(\"TreeViewFileSystem\", \"Hierarchical file system explorer based on TreeView.\")] [Scenario.ScenarioCategory(\"Controls\")] [Scenario.ScenarioCategory(\"TreeView\")] [Scenario.ScenarioCategory(\"Files and IO\")] public class TreeViewFileSystem : Scenario, IDisposable Methods | Improve this Doc View Source Setup() Declaration public override void Setup() Overrides Scenario.Setup() Implements System.IDisposable"
  },
  "api/UICatalog/UICatalog.Scenarios.UnicodeInMenu.html": {
    "href": "api/UICatalog/UICatalog.Scenarios.UnicodeInMenu.html",
    "title": "Class UnicodeInMenu",
    "keywords": "Class UnicodeInMenu Inheritance System.Object Scenario UnicodeInMenu Implements System.IDisposable Inherited Members Scenario.Top Scenario.Win Scenario.Init(Toplevel, ColorScheme) Scenario.GetName() Scenario.GetDescription() Scenario.GetCategories() Scenario.ToString() Scenario.Run() Scenario.RequestStop() Scenario.GetDerivedClasses<T>() Scenario.Dispose(Boolean) Scenario.Dispose() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : UICatalog.Scenarios Assembly : UICatalog.dll Syntax [Scenario.ScenarioMetadata(\"Unicode\", \"Tries to test Unicode in all controls (#204)\")] [Scenario.ScenarioCategory(\"Text and Formatting\")] [Scenario.ScenarioCategory(\"Controls\")] public class UnicodeInMenu : Scenario, IDisposable Methods | Improve this Doc View Source Setup() Declaration public override void Setup() Overrides Scenario.Setup() Implements System.IDisposable"
  },
  "api/UICatalog/UICatalog.Scenarios.WindowsAndFrameViews.html": {
    "href": "api/UICatalog/UICatalog.Scenarios.WindowsAndFrameViews.html",
    "title": "Class WindowsAndFrameViews",
    "keywords": "Class WindowsAndFrameViews Inheritance System.Object Scenario WindowsAndFrameViews Implements System.IDisposable Inherited Members Scenario.Top Scenario.Win Scenario.GetName() Scenario.GetDescription() Scenario.GetCategories() Scenario.ToString() Scenario.GetDerivedClasses<T>() Scenario.Dispose(Boolean) Scenario.Dispose() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : UICatalog.Scenarios Assembly : UICatalog.dll Syntax [Scenario.ScenarioMetadata(\"Windows & FrameViews\", \"Shows Windows, sub-Windows, and FrameViews.\")] [Scenario.ScenarioCategory(\"Layout\")] public class WindowsAndFrameViews : Scenario, IDisposable Methods | Improve this Doc View Source Init(Toplevel, ColorScheme) Declaration public override void Init(Toplevel top, ColorScheme colorScheme) Parameters Type Name Description Toplevel top ColorScheme colorScheme Overrides Scenario.Init(Toplevel, ColorScheme) | Improve this Doc View Source RequestStop() Declaration public override void RequestStop() Overrides Scenario.RequestStop() | Improve this Doc View Source Run() Declaration public override void Run() Overrides Scenario.Run() | Improve this Doc View Source Setup() Declaration public override void Setup() Overrides Scenario.Setup() Implements System.IDisposable"
  },
  "api/UICatalog/UICatalog.Scenarios.WizardAsView.html": {
    "href": "api/UICatalog/UICatalog.Scenarios.WizardAsView.html",
    "title": "Class WizardAsView",
    "keywords": "Class WizardAsView Inheritance System.Object Scenario WizardAsView Implements System.IDisposable Inherited Members Scenario.Top Scenario.Win Scenario.GetName() Scenario.GetDescription() Scenario.GetCategories() Scenario.ToString() Scenario.Setup() Scenario.RequestStop() Scenario.GetDerivedClasses<T>() Scenario.Dispose(Boolean) Scenario.Dispose() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : UICatalog.Scenarios Assembly : UICatalog.dll Syntax [Scenario.ScenarioMetadata(\"WizardAsView\", \"Shows using the Wizard class in an non-modal way\")] [Scenario.ScenarioCategory(\"Wizards\")] public class WizardAsView : Scenario, IDisposable Methods | Improve this Doc View Source Init(Toplevel, ColorScheme) Declaration public override void Init(Toplevel top, ColorScheme colorScheme) Parameters Type Name Description Toplevel top ColorScheme colorScheme Overrides Scenario.Init(Toplevel, ColorScheme) | Improve this Doc View Source Run() Declaration public override void Run() Overrides Scenario.Run() Implements System.IDisposable"
  },
  "api/UICatalog/UICatalog.Scenarios.Wizards.html": {
    "href": "api/UICatalog/UICatalog.Scenarios.Wizards.html",
    "title": "Class Wizards",
    "keywords": "Class Wizards Inheritance System.Object Scenario Wizards Implements System.IDisposable Inherited Members Scenario.Top Scenario.Win Scenario.Init(Toplevel, ColorScheme) Scenario.GetName() Scenario.GetDescription() Scenario.GetCategories() Scenario.ToString() Scenario.Run() Scenario.RequestStop() Scenario.GetDerivedClasses<T>() Scenario.Dispose(Boolean) Scenario.Dispose() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : UICatalog.Scenarios Assembly : UICatalog.dll Syntax [Scenario.ScenarioMetadata(\"Wizards\", \"Demonstrates the Wizard class\")] [Scenario.ScenarioCategory(\"Dialogs\")] [Scenario.ScenarioCategory(\"Top Level Windows\")] [Scenario.ScenarioCategory(\"Wizards\")] public class Wizards : Scenario, IDisposable Methods | Improve this Doc View Source Setup() Declaration public override void Setup() Overrides Scenario.Setup() Implements System.IDisposable"
  },
  "api/UICatalog/UICatalog.UICatalogApp.html": {
    "href": "api/UICatalog/UICatalog.UICatalogApp.html",
    "title": "Class UICatalogApp",
    "keywords": "Class UICatalogApp UI Catalog is a comprehensive sample app and scenario library for Terminal.Gui Inheritance System.Object UICatalogApp Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : UICatalog Assembly : UICatalog.dll Syntax public class UICatalogApp"
  },
  "articles/drivers.html": {
    "href": "articles/drivers.html",
    "title": "Cross-Platform Driver Model",
    "keywords": "Cross-Platform Driver Model Terminal.Gui has support for ncurses , System.Console , and a full Win32 Console front-end. ncurses is used on Mac/Linux/Unix with color support based on what your library is compiled with; the Windows driver supports full color and mouse, and an easy-to-debug System.Console can be used on Windows and Unix, but lacks mouse support. You can force the use of System.Console on Unix as well; see Core.cs ."
  },
  "articles/index.html": {
    "href": "articles/index.html",
    "title": "Conceptual Documentation",
    "keywords": "Conceptual Documentation Terminal.Gui Overview List of Views Keyboard Event Processing Event Processing and the Application Main Loop Cross-platform Driver Model TableView Deep Dive TreeView Deep Dive"
  },
  "articles/keyboard.html": {
    "href": "articles/keyboard.html",
    "title": "Keyboard Event Processing",
    "keywords": "Keyboard Event Processing Terminal.Gui respects common Linux, Mac, and Windows keyboard idioms. For example, clipboard operations use the familiar Control/Command-C, X, V model. CTRL-Q is used for exiting views (and apps). The input handling of Terminal.Gui is similar in some ways to Emacs and the Midnight Commander, so you can expect some of the special key combinations to be active. The key ESC can act as an Alt modifier (or Meta in Emacs parlance), to allow input on terminals that do not have an alt key. So to produce the sequence Alt-F , you can press either Alt-F , or ESC followed by the key F . To enter the key ESC , you can either press ESC and wait 100 milliseconds, or you can press ESC twice. ESC-0 , and ESC-1 through ESC-9 have a special meaning, they map to F10 , and F1 to F9 respectively. Apps can change key bindings using the AddKeyBinding API. Keyboard events are sent by the Main Loop to the Application class for processing. The keyboard events are sent exclusively to the current Toplevel , this being either the default that is created when you call Application.Init , or one that you created an passed to Application.Run(Toplevel) . Flow Keystrokes are first processes as hotkeys, then as regular keys, and there is a final cold post-processing event that is invoked if no view processed the key. HotKey Processing Events are first send to all views as a \"HotKey\", this means that the View.ProcessHotKey method is invoked on the current toplevel, which in turns propagates this to all the views in the hierarchy. If any view decides to process the event, no further processing takes place. This is how hotkeys for buttons are implemented. For example, the keystroke \"Alt-A\" is handled by Buttons that have a hot-letter \"A\" to activate the button. Regular Processing Unlike the hotkey processing, the regular processing is only sent to the currently focused view in the focus chain. The regular key processing is only invoked if no hotkey was caught. Cold-key Processing This stage only is executed if the focused view did not process the event, and is broadcast to all the views in the Toplevel. This method can be overwritten by views that want to provide accelerator functionality (Alt-key for example), but without interfering with normal ProcessKey behavior. Key Bindings Terminal.Gui supports rebinding keys. For example the default key for activating a button is Enter. You can change this using the ClearKeybinding and AddKeybinding methods: var btn = new Button (\"Press Me\"); btn.ClearKeybinding (Command.Accept); btn.AddKeyBinding (Key.b, Command.Accept); The Command enum lists generic operations that are implemented by views. For example Command.Accept in a Button results in the Clicked event firing while in TableView it is bound to CellActivated . Not all commands are implemented by all views (e.g. you cannot scroll in a Button). To see which commands are implemented by a View you can use the GetSupportedCommands() method. Not all controls have the same key bound for a given command, for example Command.Accept defaults to Key.Enter in a Button but defaults to Key.Space in RadioGroup . Global Key Handler Sometimes you may want to define global key handling logic for your entire application that is invoked regardless of what Window/View has focus. This can be achieved by using the Application.RootKeyEvent event."
  },
  "articles/mainloop.html": {
    "href": "articles/mainloop.html",
    "title": "Event Processing and the Application Main Loop",
    "keywords": "Event Processing and the Application Main Loop See also Cross-platform Driver Model The method Application.Run that we covered before will wait for events from either the keyboard or mouse and route those events to the proper view. The job of waiting for events and dispatching them in the Application is implemented by an instance of the MainLoop class. Mainloops are a common idiom in many user interface toolkits so many of the concepts will be familiar to you if you have used other toolkits before. This class provides the following capabilities: Keyboard and mouse processing .NET Async support Timers processing Invoking of UI code from a background thread Idle processing handlers Possibility of integration with other mainloops. On Unix systems, it can monitor file descriptors for readability or writability. The MainLoop property in the the Application provides access to these functions. When your code invokes Application.Run (Toplevel) , the application will prepare the current Toplevel instance by redrawing the screen appropriately and then calling the mainloop to run. You can configure the Mainloop before calling Application.Run, or you can configure the MainLoop in response to events during the execution. The keyboard inputs is dispatched by the application class to the current TopLevel window this is covered in more detail in the Keyboard Event Processing document. Async Execution On startup, the Application class configured the .NET Asynchronous machinery to allow you to use the await keyword to run tasks in the background and have the execution of those tasks resume on the context of the main thread running the main loop. Once you invoke Application.Main the async machinery will be ready to use, and you can merely call methods using await from your main thread, and the awaited code will resume execution on the main thread. Timers Processing You can register timers to be executed at specified intervals by calling the AddTimeout method, like this: void UpdateTimer () { time.Text = DateTime.Now.ToString (); } var token = Application.MainLoop.AddTimeout (TimeSpan.FromSeconds (20), UpdateTimer); The return value from AddTimeout is a token value that you can use if you desire to cancel the timer before it runs: Application.MainLoop.RemoveTimeout (token); Idle Handlers You can register code to be executed when the application is idling and there are no events to process by calling the AddIdle method. This method takes as a parameter a function that will be invoked when the application is idling. Idle functions should return true if they should be invoked again, and false if the idle invocations should stop. Like the timer APIs, the return value is a token that can be used to cancel the scheduled idle function from being executed. Threading Like other UI toolkits, Terminal.Gui is generally not thread safe. You should avoid calling methods in the UI classes from a background thread as there is no guarantee that they will not corrupt the state of the UI application. Generally, as there is not much state, you will get lucky, but the application will not behave properly. You will be served better off by using C# async machinery and the various APIs in the System.Threading.Tasks.Task APIs. But if you absolutely must work with threads on your own you should only invoke APIs in Terminal.Gui from the main thread. To make this simple, you can use the Application.MainLoop.Invoke method and pass an Action . This action will be queued for execution on the main thread at an appropriate time and will run your code there. For example, the following shows how to properly update a label from a background thread: void BackgroundThreadUpdateProgress () { Application.MainLoop.Invoke (() => { progress.Text = $\"Progress: {bytesDownloaded/totalBytes}\"; }); } Integration With Other Main Loop Drivers It is possible to run the main loop in a way that it does not take over control of your application, but rather in a cooperative way. To do this, you must use the lower-level APIs in Application : the Begin method to prepare a toplevel for execution, followed by calls to MainLoop.EventsPending to determine whether the events must be processed, and in that case, calling RunLoop method and finally completing the process by calling End . The method Run is implemented like this: void Run (Toplevel top) { var runToken = Begin (view); RunLoop (runToken); End (runToken); } Unix File Descriptor Monitoring On Unix, it is possible to monitor file descriptors for input being available, or for the file descriptor being available for data to be written without blocking the application. To do this, you on Unix, you can cast the MainLoop instance to a UnixMainLoop and use the AddWatch method to register an interest on a particular condition."
  },
  "articles/overview.html": {
    "href": "articles/overview.html",
    "title": "Terminal.Gui API Overview",
    "keywords": "Terminal.Gui API Overview Terminal.Gui is a library intended to create console-based applications using C#. The framework has been designed to make it easy to write applications that will work on monochrome terminals, as well as modern color terminals with mouse support. This library works across Windows, Linux and MacOS. This library provides a text-based toolkit as works in a way similar to graphic toolkits. There are many controls that can be used to create your applications and it is event based, meaning that you create the user interface, hook up various events and then let the a processing loop run your application, and your code is invoked via one or more callbacks. The simplest application looks like this: using Terminal.Gui; class Demo { static int Main () { Application.Init (); var n = MessageBox.Query (50, 7, \"Question\", \"Do you like console apps?\", \"Yes\", \"No\"); Application.Shutdown (); return n; } } This example shows a prompt and returns an integer value depending on which value was selected by the user (Yes, No, or if they use chose not to make a decision and instead pressed the ESC key). More interesting user interfaces can be created by composing some of the various views that are included. In the following sections, you will see how applications are put together. In the example above, you can see that we have initialized the runtime by calling the Init method in the Application class - this sets up the environment, initializes the color schemes available for your application and clears the screen to start your application. The Application class, additionally creates an instance of the Toplevel class that is ready to be consumed, this instance is available in the Application.Top property, and can be used like this: using Terminal.Gui; class Demo { static int Main () { Application.Init (); var label = new Label (\"Hello World\") { X = Pos.Center (), Y = Pos.Center (), Height = 1, }; Application.Top.Add (label); Application.Run (); Application.Shutdown (); } } Typically, you will want your application to have more than a label, you might want a menu, and a region for your application to live in, the following code does this: using Terminal.Gui; class Demo { static int Main () { Application.Init (); var menu = new MenuBar (new MenuBarItem [] { new MenuBarItem (\"_File\", new MenuItem [] { new MenuItem (\"_Quit\", \"\", () => { Application.RequestStop (); }) }), }); var win = new Window (\"Hello\") { X = 0, Y = 1, Width = Dim.Fill (), Height = Dim.Fill () - 1 }; // Add both menu and win in a single call Application.Top.Add (menu, win); Application.Run (); Application.Shutdown (); } } Views All visible elements on a Terminal.Gui application are implemented as Views . Views are self-contained objects that take care of displaying themselves, can receive keyboard and mouse input and participate in the focus mechanism. See the full list of Views provided by the Terminal.Gui library here . Every view can contain an arbitrary number of children views. These are called the Subviews. You can add a view to an existing view, by calling the Add method, for example, to add a couple of buttons to a UI, you can do this: void SetupMyView (View myView) { var label = new Label (\"Username: \") { X = 1, Y = 1, Width = 20, Height = 1 }; myView.Add (label); var username = new TextField (\"\") { X = 1, Y = 2, Width = 30, Height = 1 }; myView.Add (username); } The container of a given view is called the SuperView and it is a property of every View. Layout Terminal.Gui supports two different layout systems, absolute and computed \\ (controlled by the LayoutStyle property on the view. The absolute system is used when you want the view to be positioned exactly in one location and want to manually control where the view is. This is done by invoking your View constructor with an argument of type Rect . When you do this, to change the position of the View, you can change the Frame property on the View. The computed layout system offers a few additional capabilities, like automatic centering, expanding of dimensions and a handful of other features. To use this you construct your object without an initial Frame , but set the X , Y , Width and Height properties after the object has been created. Examples: // Dynamically computed var label = new Label (\"Hello\") { X = 1, Y = Pos.Center (), Width = Dim.Fill (), Height = 1 }; // Absolute position using the provided rectangle var label2 = new Label (new Rect (1, 2, 20, 1), \"World\") The computed layout system does not take integers, instead the X and Y properties are of type Pos and the Width and Height properties are of type Dim both which can be created implicitly from integer values. The Pos Type The Pos type on X and Y offers a few options: Absolute position, by passing an integer Percentage of the parent's view size - Pos.Percent(n) Anchored from the end of the dimension - AnchorEnd(int margin=0) Centered, using Center() Reference the Left (X), Top (Y), Bottom, Right positions of another view The Pos values can be added or subtracted, like this: // Set the X coordinate to 10 characters left from the center view.X = Pos.Center () - 10; view.Y = Pos.Percent (20); anotherView.X = AnchorEnd (10); anotherView.Width = 9; myView.X = Pos.X (view); myView.Y = Pos.Bottom (anotherView); The Dim Type The Dim type is used for the Width and Height properties on the View and offers the following options: Absolute size, by passing an integer Percentage of the parent's view size - Dim.Percent(n) Fill to the end - Dim.Fill () Reference the Width or Height of another view Like, Pos , objects of type Dim can be added an subtracted, like this: // Set the Width to be 10 characters less than filling // the remaining portion of the screen view.Width = Dim.Fill () - 10; view.Height = Dim.Percent(20) - 1; anotherView.Height = Dim.Height (view)+1 TopLevels, Windows and Dialogs. Among the many kinds of views, you typically will create a Toplevel view (or any of its subclasses, like Window or Dialog which is special kind of views that can be executed modally - that is, the view can take over all input and returns only when the user chooses to complete their work there. The following sections cover the differences. TopLevel Views Toplevel views have no visible user interface elements and occupy an arbitrary portion of the screen. You would use a toplevel Modal view for example to launch an entire new experience in your application, one where you would have a new top-level menu for example. You typically would add a Menu and a Window to your Toplevel, it would look like this: using Terminal.Gui; class Demo { static void Edit (string filename) { var top = new Toplevel () { X = 0, Y = 0, Width = Dim.Fill (), Height = Dim.Fill () }; var menu = new MenuBar (new MenuBarItem [] { new MenuBarItem (\"_File\", new MenuItem [] { new MenuItem (\"_Close\", \"\", () => { Application.RequestStop (); }) }), }); // nest a window for the editor var win = new Window (filename) { X = 0, Y = 1, Width = Dim.Fill (), Height = Dim.Fill () - 1 }; var editor = new TextView () { X = 0, Y = 0, Width = Dim.Fill (), Height = Dim.Fill () }; editor.Text = System.IO.File.ReadAllText (filename); win.Add (editor); // Add both menu and win in a single call top.Add (win, menu); Application.Run (top); Application.Shutdown (); } } Window Views Window views extend the Toplevel view by providing a frame and a title around the toplevel - and can be moved on the screen with the mouse (caveat: code is currently disabled) From a user interface perspective, you might have more than one Window on the screen at a given time. Dialogs Dialog are Window objects that happen to be centered in the middle of the screen. Dialogs are instances of a Window that are centered in the screen, and are intended to be used modally - that is, they run, and they are expected to return a result before resuming execution of your application. Dialogs are a subclass of Window and additionally expose the AddButton API which manages the layout of any button passed to it, ensuring that the buttons are at the bottom of the dialog. Example: bool okpressed = false; var ok = new Button(\"Ok\"); var cancel = new Button(\"Cancel\"); var dialog = new Dialog (\"Quit\", 60, 7, ok, cancel); Which will show something like this: +- Quit -----------------------------------------------+ | | | | | [ Ok ] [ Cancel ] | +------------------------------------------------------+ Running Modally To run your Dialog, Window or Toplevel modally, you will invoke the Application.Run method on the toplevel. It is up to your code and event handlers to invoke the Application.RequestStop() method to terminate the modal execution. bool okpressed = false; var ok = new Button(3, 14, \"Ok\") { Clicked = () => { Application.RequestStop (); okpressed = true; } }; var cancel = new Button(10, 14, \"Cancel\") { Clicked = () => Application.RequestStop () }; var dialog = new Dialog (\"Login\", 60, 18, ok, cancel); var entry = new TextField () { X = 1, Y = 1, Width = Dim.Fill (), Height = 1 }; dialog.Add (entry); Application.Run (dialog); if (okpressed) Console.WriteLine (\"The user entered: \" + entry.Text); There is no return value from running modally, so your code will need to have a mechanism of indicating the reason that the execution of the modal dialog was completed, in the case above, the okpressed value is set to true if the user pressed or selected the Ok button. Input Handling Every view has a focused view, and if that view has nested views, one of those is the focused view. This is called the focus chain, and at any given time, only one View has the focus. The library binds the key Tab to focus the next logical view, and the Shift-Tab combination to focus the previous logical view. Keyboard processing is divided in three stages: HotKey processing, regular processing and cold key processing. Hot key processing happens first, and it gives all the views in the current toplevel a chance to monitor whether the key needs to be treated specially. This for example handles the scenarios where the user pressed Alt-o, and a view with a highlighted \"o\" is being displayed. If no view processed the hotkey, then the key is sent to the currently focused view. If the key was not processed by the normal processing, all views are given a chance to process the keystroke in their cold processing stage. Examples include the processing of the \"return\" key in a dialog when a button in the dialog has been flagged as the \"default\" action. The most common case is the normal processing, which sends the keystrokes to the currently focused view. Mouse events are processed in visual order, and the event will be sent to the view on the screen. The only exception is that no mouse events are delivered to background views when a modal view is running. More details are available on the Keyboard Event Processing document. Colors and Color Schemes All views have been configured with a color scheme that will work both in color terminals as well as the more limited black and white terminals. The various styles are captured in the Colors class which defined color schemes for the toplevel, the normal views, the menu bar, popup dialog boxes and error dialog boxes, that you can use like this: Colors.Toplevel Colors.Base Colors.Menu Colors.Dialog Colors.Error You can use them for example like this to set the colors for a new Window: var w = new Window (\"Hello\"); w.ColorScheme = Colors.Error The ColorScheme represents four values, the color used for Normal text, the color used for normal text when a view is focused an the colors for the hot-keys both in focused and unfocused modes. By using ColorSchemes you ensure that your application will work correctbly both in color and black and white terminals. Some views support setting individual color attributes, you create an attribute for a particular pair of Foreground/Background like this: var myColor = Application.Driver.MakeAttribute (Color.Blue, Color.Red); var label = new Label (...); label.TextColor = myColor MainLoop, Threads and Input Handling Detailed description of the mainloop is described on the Event Processing and the Application Main Loop document. Cross-Platform Drivers See Cross-platform Driver Model ."
  },
  "articles/tableview.html": {
    "href": "articles/tableview.html",
    "title": "Table View",
    "keywords": "Table View This control supports viewing and editing tabular data. It provides a view of a System.DataTable . System.DataTable is a core class of .net standard and can be created very easily TableView API Reference Csv Example You can create a DataTable from a CSV file by creating a new instance and adding columns and rows as you read them. For a robust solution however you might want to look into a CSV parser library that deals with escaping, multi line rows etc. var dt = new DataTable(); var lines = File.ReadAllLines(filename); foreach(var h in lines[0].Split(',')){ dt.Columns.Add(h); } foreach(var line in lines.Skip(1)) { dt.Rows.Add(line.Split(',')); } Database Example All Ado.net database providers (Oracle, MySql, SqlServer etc) support reading data as DataTables for example: var dt = new DataTable(); using(var con = new SqlConnection(\"Server=myServerAddress;Database=myDataBase;Trusted_Connection=True;\")) { con.Open(); var cmd = new SqlCommand(\"select * from myTable;\",con); var adapter = new SqlDataAdapter(cmd); adapter.Fill(dt); } Displaying the table Once you have set up your data table set it in the view: tableView = new TableView () { X = 0, Y = 0, Width = 50, Height = 10, }; tableView.Table = yourDataTable; Table Rendering TableView supports any size of table (limited only by the RAM requirements of System.DataTable ). You can have thousands of columns and/or millions of rows if you want. Horizontal and vertical scrolling can be done using the mouse or keyboard. TableView uses ColumnOffset and RowOffset to determine the first visible cell of the System.DataTable . Rendering then continues until the avaialble console space is exhausted. Updating the ColumnOffset and RowOffset changes which part of the table is rendered (scrolls the viewport). This approach ensures that no matter how big the table, only a small number of columns/rows need to be evaluated for rendering."
  },
  "articles/treeview.html": {
    "href": "articles/treeview.html",
    "title": "Tree View",
    "keywords": "Tree View TreeView is a control for navigating hierarchical objects. It comes in two forms TreeView and TreeView<T> . TreeView API Reference Using TreeView The basic non generic TreeView class is populated by ITreeNode objects. The simplest tree you can make would look something like: var tree = new TreeView() { X = 0, Y = 0, Width = 40, Height = 20 }; var root1 = new TreeNode(\"Root1\"); root1.Children.Add(new TreeNode(\"Child1.1\")); root1.Children.Add(new TreeNode(\"Child1.2\")); var root2 = new TreeNode(\"Root2\"); root2.Children.Add(new TreeNode(\"Child2.1\")); root2.Children.Add(new TreeNode(\"Child2.2\")); tree.AddObject(root1); tree.AddObject(root2); Having to create a bunch of TreeNode objects can be a pain especially if you already have your own objects e.g. House , Room etc. There are two ways to use your own classes without having to create nodes manually. Firstly you can implement the ITreeNode interface: // Your data class private class House : TreeNode { // Your properties public string Address {get;set;} public List<Room> Rooms {get;set;} // ITreeNode member: public override IList<ITreeNode> Children => Rooms.Cast<ITreeNode>().ToList(); public override string Text { get => Address; set => Address = value; } } // Your other data class private class Room : TreeNode{ public string Name {get;set;} public override string Text{get=>Name;set{Name=value;}} } After implementing the interface you can add your objects directly to the tree var myHouse = new House() { Address = \"23 Nowhere Street\", Rooms = new List<Room>{ new Room(){Name = \"Ballroom\"}, new Room(){Name = \"Bedroom 1\"}, new Room(){Name = \"Bedroom 2\"} } }; var tree = new TreeView() { X = 0, Y = 0, Width = 40, Height = 20 }; tree.AddObject(myHouse); Alternatively you can simply tell the tree how the objects relate to one another by implementing ITreeBuilder<T> . This is a good option if you don't have control of the data objects you are working with. TreeView<T> The generic Treeview<T> allows you to store any object hierarchy where nodes implement Type T. For example if you are working with DirectoryInfo and FileInfo objects then you could create a TreeView<FileSystemInfo> . If you don't have a shared interface/base class for all nodes you can still declare a TreeView<object> . In order to use TreeView<T> you need to tell the tree how objects relate to one another (who are children of who). To do this you must provide an ITreeBuilder<T> . Implementing ITreeBuilder<T> Consider a simple data model that already exists in your program: private abstract class GameObject { } private class Army : GameObject { public string Designation {get;set;} public List<Unit> Units {get;set;} public override string ToString () { return Designation; } } private class Unit : GameObject { public string Name {get;set;} public override string ToString () { return Name; } } An ITreeBuilder<T> for these classes might look like: private class GameObjectTreeBuilder : ITreeBuilder<GameObject> { public bool SupportsCanExpand => true; public bool CanExpand (GameObject model) { return model is Army; } public IEnumerable<GameObject> GetChildren (GameObject model) { if(model is Army a) return a.Units; return Enumerable.Empty<GameObject>(); } } To use the builder in a tree you would use: var army1 = new Army() { Designation = \"3rd Infantry\", Units = new List<Unit>{ new Unit(){Name = \"Orc\"}, new Unit(){Name = \"Troll\"}, new Unit(){Name = \"Goblin\"}, } }; var tree = new TreeView<GameObject>() { X = 0, Y = 0, Width = 40, Height = 20, TreeBuilder = new GameObjectTreeBuilder() }; tree.AddObject(army1); Alternatively you can use DelegateTreeBuilder<T> instead of implementing your own ITreeBuilder<T> . For example: tree.TreeBuilder = new DelegateTreeBuilder<GameObject>( (o)=>o is Army a ? a.Units : Enumerable.Empty<GameObject>()); Node Text and ToString The default behavior of TreeView is to use the ToString method on the objects for rendering. You can customise this by changing the AspectGetter . For example: treeViewFiles.AspectGetter = (f)=>f.FullName;"
  },
  "articles/views.html": {
    "href": "articles/views.html",
    "title": "",
    "keywords": "Terminal.Gui provides a rich set of views and controls for building terminal user interfaces: Button - A View that provides an item that invokes an System.Action when activated by the user. CheckBox - Shows an on/off toggle that the user can set. ColorPicker - Enables to user to pick a color. ComboBox - Provides a drop-down list of items the user can select from. Dialog - A pop-up Window that contains one or more Buttons. OpenDialog - A Dialog providing an interactive pop-up Window for users to select files or directories. SaveDialog - A Dialog providing an interactive pop-up Window for users to save files. FrameView - A container View that draws a frame around its contents. Similar to a GroupBox in Windows. GraphView - A View for rendering graphs (bar, scatter etc). Hex viewer/editor - A hex viewer and editor that operates over a file stream. Label - Displays a string at a given position and supports multiple lines. ListView - Displays a scrollable list of data where each item can be activated to perform an action. MenuBar - Provides a menu bar with drop-down and cascading menus. MessageBox - Displays a modal (pup-up) message to the user, with a title, a message and a series of options that the user can choose from. ProgressBar - Displays a progress Bar indicating progress of an activity. RadioGroup - Displays a group of labels each with a selected indicator. Only one of those can be selected at a given time ScrollView - Present a window into a virtual space where subviews are added. Similar to the iOS UIScrollView. ScrollBarView - display a 1-character scrollbar, either horizontal or vertical. StatusBar - A View that snaps to the bottom of a Toplevel displaying set of status items. Includes support for global app keyboard shortcuts. TableView - A View for tabular data based on a System.Data.DataTable. TimeField & DateField - Enables structured editing of dates and times. TextField - Provides a single-line text entry. TextValidateField - Text field that validates input through a ITextValidateProvider. TextView - A multi-line text editing View supporting word-wrap, auto-complete, context menus, undo/redo, and clipboard operations, TopLevel - The base class for modal/pop-up Windows. TreeView - A hierarchical tree view with expandable branches. Branch objects are dynamically determined when expanded using a user defined ITreeBuilder. View - The base class for all views on the screen and represents a visible element that can render itself and contains zero or more nested views. Window - A Toplevel view that draws a border around its Frame with a title at the top. Wizard - Provides navigation and a user interface to collect related data across multiple steps."
  },
  "index.html": {
    "href": "index.html",
    "title": "Terminal.Gui - Cross Platform Terminal UI toolkit for .NET",
    "keywords": "Terminal.Gui - Cross Platform Terminal UI toolkit for .NET A toolkit for building rich console apps for .NET, .NET Core, and Mono that works on Windows, the Mac, and Linux/Unix. Terminal.Gui Project on GitHub Terminal.Gui API Documentation API Reference Views and controls built into the Terminal.Gui library Terminal.Gui API Overview Keyboard Event Processing Event Processing and the Application Main Loop Cross-platform Driver Model TableView Deep Dive TreeView Deep Dive UI Catalog UI Catalog is a comprehensive sample library for Terminal.Gui. It provides a simple UI for adding to the catalog of scenarios. UI Catalog API Reference UI Catalog Source"
  },
  "README.html": {
    "href": "README.html",
    "title": "To Generate the Docs",
    "keywords": "This folder generates the API docs for Terminal.Gui. The API documentation is generated using the DocFX tool . The output of docfx gets put into the ./docs folder which is then checked in. The ./docs folder is then picked up by Github Pages and published to Miguel's Github Pages ( https://migueldeicaza.github.io/gui.cs/ ). To Generate the Docs Install DotFX https://dotnet.github.io/docfx/tutorial/docfx_getting_started.html Change to the ./docfx folder and run ./build.ps1 Browse to http://localhost:8080 and verify everything looks good. Hit ctrl-c to stop the script. If docfx fails with a Stackoverflow error. Just run it again. And again. Sometimes it takes a few times. If that doesn't work, create a fresh clone or delete the docfx/api , docfx/obj , and docs/ folders and run the steps above again."
  }
}
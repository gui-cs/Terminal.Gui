name: Publish Terminal.Gui

on:
  push:
    branches: [ main, v2_release ]
    tags:
      - v*
    paths-ignore:
      - '**.md'

  pull_request:
    branches: [ develop, v2_develop ]
    types:
      - closed
    paths-ignore:
      - '**.md'

jobs:
  if_merged:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    steps:
    - run: |
        echo The PR was merged

  publish:
    name: Build and Publish to Nuget.org
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0 #fetch-depth is needed for GitVersion

    - name: Install and calculate the new version with GitVersion 
      uses: gittools/actions/gitversion/setup@v0
      with:
        versionSpec: 5.x

    - name: Determine Version
      uses: gittools/actions/gitversion/execute@v0
      id: gitversion # step id used as reference for output values

    - name: Display GitVersion outputs
      run: |
        echo "Version: ${{ steps.gitversion.outputs.SemVer }}"
        echo "CommitsSinceVersionSource: ${{ steps.gitversion.outputs.CommitsSinceVersionSource }}"

    - name: Setup dotnet
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 7.0

    - name: Install dependencies
      run: dotnet restore

    - name: Build Release
      run: |
        dotnet-gitversion /updateprojectfiles
        dotnet build --no-restore -c Release

    - name: Pack
      run: dotnet pack -c Release --include-symbols -p:Version='${{ steps.gitversion.outputs.SemVer }}' 

    # - name: Test to generate Code Coverage Report
    #   run: |
    #     sed -i 's/"stopOnFail": false/"stopOnFail": true/g' UnitTests/xunit.runner.json
    #     dotnet test --verbosity normal --collect:"XPlat Code Coverage" --settings UnitTests/coverlet.runsettings
    #     mv -v UnitTests/TestResults/*/*.* UnitTests/TestResults/

    # - name: Create Test Coverage Badge
    #   uses: simon-k/dotnet-code-coverage-badge@v1.0.0
    #   id: create_coverage_badge
    #   with:
    #     label: Unit Test Coverage
    #     color: brightgreen
    #     path: UnitTests/TestResults/coverage.opencover.xml
    #     gist-filename: code-coverage.json
    #     gist-id: 90ef67a684cb71db1817921a970f8d27
    #     gist-auth-token: ${{ secrets.GIST_AUTH_TOKEN }}   

    # - name: Print Code Coverage
    #   run: |
    #     echo "Code coverage percentage: ${{steps.create_coverage_badge.outputs.percentage}}%"
    #     echo "Badge data: ${{steps.create_coverage_badge.outputs.badge}}"
        
    - name: Publish to NuGet.org
      run: dotnet nuget push Terminal.Gui/bin/Release/*.nupkg --api-key ${{ secrets.NUGET_API_KEY }} 
